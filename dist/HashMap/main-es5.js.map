{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/about/about.component.html","webpack:///./src/app/app.component.html","webpack:///./src/app/chat-button/chat-button.component.html","webpack:///./src/app/chat-modal/chat-modal.component.html","webpack:///./src/app/friend-card/friend-card.component.html","webpack:///./src/app/nav/nav.component.html","webpack:///./src/app/network/network.component.html","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/release-rubric/release-rubric.component.html","webpack:///./src/app/setup/setup.component.html","webpack:///./src/app/about/about.component.scss","webpack:///./src/app/about/about.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth.guard.ts","webpack:///./src/app/chat-button/chat-button.component.scss","webpack:///./src/app/chat-button/chat-button.component.ts","webpack:///./src/app/chat-modal/chat-modal.component.scss","webpack:///./src/app/chat-modal/chat-modal.component.ts","webpack:///./src/app/chat-modal/chat-modal.service.ts","webpack:///./src/app/friend-card/friend-card.component.scss","webpack:///./src/app/friend-card/friend-card.component.ts","webpack:///./src/app/nav/nav.component.scss","webpack:///./src/app/nav/nav.component.ts","webpack:///./src/app/network/network.component.scss","webpack:///./src/app/network/network.component.ts","webpack:///./src/app/network/network.service.ts","webpack:///./src/app/profile/profile.component.scss","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/profile/profile.service.ts","webpack:///./src/app/release-rubric/release-rubric.component.scss","webpack:///./src/app/release-rubric/release-rubric.component.ts","webpack:///./src/app/services/auth/auth.service.ts","webpack:///./src/app/setup/setup.component.scss","webpack:///./src/app/setup/setup.component.ts","webpack:///./src/app/setup/setup.service.ts","webpack:///./src/app/utility/notification/notification.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-6\\\" >\\r\\n        <img src=\\\"../../assets/images/hashmap_globe.svg\\\" style=\\\"display: block; margin-left: auto;\\\"/>\\r\\n    </div>\\r\\n    <div class=\\\"col-6\\\">\\r\\n      <div class=\\\"mt-5\\\">\\r\\n          <h1 style=\\\"color: white\\\">HashMap</h1>\\r\\n          <p style=\\\"color: white\\\">Location based friend search for gamers!</p>\\r\\n      </div>\\r\\n      <div>\\r\\n          <a href=\\\"/rubric\\\" class=\\\"btn btn-light\\\">Rubric</a>\\r\\n      </div>\\r\\n      <div class=\\\"mt-3\\\">\\r\\n          <a href=\\\"https://github.com/adamchlebek/HashMap\\\" target=\\\"_blank\\\" class=\\\"btn btn-dark\\\"><fa name=\\\"github\\\"></fa>Github Repo</a>\\r\\n      </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"card centerCard\\\" style=\\\"width: 90%\\\">\\r\\n\\r\\n  <div class=\\\"header-body\\\">\\r\\n    <h2>About</h2>\\r\\n\\r\\n    <p class=\\\"subheader\\\">This project was created for CIS 350. HashMap is a location based friend search for people who play\\r\\n      similar games to you! You can connect many of your accounts and settings to find friends near you.</p>\\r\\n\\r\\n    <hr>\\r\\n\\r\\n    <h2>Feature List</h2>\\r\\n\\r\\n    <div class=\\\"container\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col\\\">\\r\\n          <div class=\\\"card\\\" >\\r\\n            <div class=\\\"card-body\\\">\\r\\n              <h5 class=\\\"card-title\\\"><strong>Release 1</strong> (July 15th)</h5>\\r\\n              <ul>\\r\\n                <li>Google Sign-In and Account creation</li>\\r\\n                <li>Profile Creation and Management</li>\\r\\n                <li>Steam Linking and Game Linking</li>\\r\\n                <li>Front end and menu created</li>\\r\\n              </ul>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col\\\">\\r\\n          <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-body\\\">\\r\\n              <h5 class=\\\"card-title\\\"><strong>Release 2</strong> (July 31st)</h5>\\r\\n              <ul>\\r\\n                <li>Friend Matching Algorithm</li>\\r\\n                <li>Add friends to List</li>\\r\\n                <li>Search By Location</li>\\r\\n                <li>Add search by rank with specific games</li>\\r\\n              </ul>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  <hr>\\r\\n\\r\\n  <table class=\\\"table\\\">\\r\\n    <thead>\\r\\n      <tr>\\r\\n        <th>Languages</th>\\r\\n        <th>Framework/Plugins and Tools</th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n      <tr>\\r\\n        <td>Typescript</td>\\r\\n        <td>Angular 8</td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <td>SQL</td>\\r\\n        <td>Protractor End-to-End Testing</td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <td>HTML</td>\\r\\n        <td>Jasime Karma</td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <td>CSS</td>\\r\\n        <td>Firebase</td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <td>JavaScript</td>\\r\\n        <td>Visual Studio Code</td>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n\\r\\n  <hr>\\r\\n\\r\\n  <div class=\\\"color-palette\\\">\\r\\n    <h2>Color Palette</h2>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col dark\\\">\\r\\n        <h3>Polar Night</h3>\\r\\n        <hr>\\r\\n        <div class=\\\"color col2e3440\\\">#2e3440</div>\\r\\n        <div class=\\\"color col3b4252\\\">#3b4252</div>\\r\\n        <div class=\\\"color col434c5e\\\">#434c5e</div>\\r\\n        <div class=\\\"color col4c566a\\\">#4c566a</div>\\r\\n      </div>\\r\\n      <div class=\\\"col light\\\">\\r\\n        <h3>Snow Storm</h3>\\r\\n        <hr>\\r\\n        <div class=\\\"color cold8dee9\\\">#d8dee9</div>\\r\\n        <div class=\\\"color cole5e9f0\\\">#e5e9f0</div>\\r\\n        <div class=\\\"color coleceef4\\\">#eceef4</div>\\r\\n      </div>\\r\\n      <div class=\\\"col dark\\\">\\r\\n        <h3>Frost</h3>\\r\\n        <hr>\\r\\n        <div class=\\\"color col8fbcbb\\\">#8fbcbb</div>\\r\\n        <div class=\\\"color col88c0d0\\\">#88c0d0</div>\\r\\n        <div class=\\\"color col81a1c1\\\">#81a1c1</div>\\r\\n        <div class=\\\"color col5e81ac\\\">#5e81ac</div>\\r\\n      </div>\\r\\n      <div class=\\\"col dark\\\">\\r\\n        <h3>Aurora</h3>\\r\\n        <hr>\\r\\n        <div class=\\\"color colbf616a\\\">#bf616a</div>\\r\\n        <div class=\\\"color cold08770\\\">#d08770</div>\\r\\n        <div class=\\\"color colebcb8b\\\">#ebcb8b</div>\\r\\n        <div class=\\\"color cola3be8c\\\">#a3be8c</div>\\r\\n        <div class=\\\"color colb48ead\\\">#b48ead</div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <hr>\\r\\n\\r\\n  <h6>\\r\\n    This project is licensed under the <a href=\\\"https://github.com/adamchlebek/HashMap/blob/master/LICENSE.md\\\">MIT</a> license.\\r\\n  </h6>\\r\\n\\r\\n  <h6>\\r\\n    Created By Adam Chlebek and Collin Larson\\r\\n  </h6>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"<app-chat-button></app-chat-button>\\r\\n<app-nav></app-nav>\\r\\n<router-outlet></router-outlet>\\r\\n\"","module.exports = \"<button type=\\\"button\\\" class=\\\"btn btn-primary btn-circle btn-xl messageButton\\\" (click)=\\\"openModal()\\\">\\r\\n  <i class=\\\"material-icons\\\" style=\\\"padding-top: 6px;\\\">message</i>\\r\\n</button>\\r\\n\"","module.exports = \"<div class=\\\"card\\\">\\r\\n  <div class=\\\"inbox_msg\\\">\\r\\n    <div class=\\\"inbox_people\\\">\\r\\n      <div class=\\\"headind_srch\\\">\\r\\n        <div class=\\\"recent_heading\\\">\\r\\n          <h4>Messages</h4>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"inbox_chat\\\" *ngIf=\\\"!isLoading\\\">\\r\\n        <ng-container *ngFor=\\\"let friend of profile._friends\\\">\\r\\n            <div [ngClass]=\\\"(chatId==getChatId(friend.uid)) ? 'chat_list active_chat' : 'chat_list'\\\" (click)=\\\"changeChat(friend.uid)\\\">\\r\\n              <div class=\\\"chat_people\\\">\\r\\n                <div class=\\\"chat_img\\\"> <img src=\\\"{{friend.photoURL}}\\\" alt=\\\"sunil\\\"> </div>\\r\\n                <div class=\\\"chat_ib\\\">\\r\\n                  <h5>{{friend.displayName}}</h5>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- Need to add last message & date -->\\r\\n        <!-- <div class=\\\"chat_list\\\">\\r\\n          <div class=\\\"chat_people\\\">\\r\\n            <div class=\\\"chat_img\\\"> <img src=\\\"../../assets/images/g-normal.png\\\" alt=\\\"sunil\\\"> </div>\\r\\n            <div class=\\\"chat_ib\\\">\\r\\n              <h5>From Another User<span class=\\\"chat_date\\\">Jan 1</span></h5>\\r\\n              <p>Last Message 2</p>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div> -->\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"mesgs\\\">\\r\\n      <div class=\\\"msg_history\\\">\\r\\n        <ng-container *ngIf=\\\"chat$ | async as chat\\\">\\r\\n          <div class=\\\"chat\\\">\\r\\n\\r\\n            <div *ngFor=\\\"let msg of chat.messages; trackBy: trackByCreated\\\">\\r\\n\\r\\n              <ng-container *ngIf=\\\"msg.user.uid == user.uid\\\">\\r\\n                <div class=\\\"outgoing_msg\\\">\\r\\n                  <div class=\\\"sent_msg\\\">\\r\\n                    <p>{{ msg.content }}</p>\\r\\n                    <span class=\\\"time_date\\\">{{msg.createdAt | date:\\\"M/d/yy, h:mm a\\\"}}</span> </div>\\r\\n                </div>\\r\\n              </ng-container>\\r\\n\\r\\n              <ng-container *ngIf=\\\"msg.user.uid != user.uid\\\">\\r\\n                <div class=\\\"incoming_msg\\\">\\r\\n                  <div class=\\\"incoming_msg_img\\\"> <img [src]=\\\"msg.user?.photoURL\\\" alt=\\\"sunil\\\"> </div>\\r\\n                  <div class=\\\"received_msg\\\">\\r\\n                    <div class=\\\"received_withd_msg\\\">\\r\\n                      <p>{{ msg.content }}</p>\\r\\n                      <span class=\\\"time_date\\\">{{msg.createdAt | date:\\\"M/d/yy, h:mm a\\\"}}</span></div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </ng-container>\\r\\n\\r\\n              <!-- <div class=\\\"user\\\">\\r\\n                <img class=\\\"chat_img\\\" [src]=\\\"msg.user?.photoURL\\\">\\r\\n                {{ msg.user?.displayName || msg.user.uid }}\\r\\n              </div>\\r\\n\\r\\n              <p>{{ msg.content }}</p> -->\\r\\n\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n        </ng-container>\\r\\n\\r\\n      </div>\\r\\n      <div class=\\\"type_msg\\\">\\r\\n        <div class=\\\"input_msg_write\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"write_msg\\\" placeholder=\\\"Type a message\\\" [(ngModel)]=\\\"newMsg\\\" (keydown.enter)=\\\"submit(chatId)\\\" />\\r\\n          <button class=\\\"msg_send_btn\\\" type=\\\"button\\\" (click)=\\\"submit(chatId)\\\"><i class=\\\"fa fa-paper-plane-o\\\" aria-hidden=\\\"true\\\"></i></button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"<div class=\\\"card contain\\\" *ngFor=\\\"let friend of friends\\\">\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <ng-container>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-2\\\">\\r\\n            <img src=\\\"{{ friend.photoURL }}\\\" class=\\\"friend-icon\\\"  />\\r\\n          </div>\\r\\n          <div class =\\\"col-10\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <h5 style=\\\"display: block;\\\">{{friend.displayName}}</h5>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n              <mat-accordion>\\r\\n                <mat-expansion-panel>\\r\\n                  <mat-expansion-panel-header>\\r\\n                    <mat-panel-description>\\r\\n                      Bio\\r\\n                    </mat-panel-description>\\r\\n                  </mat-expansion-panel-header>\\r\\n                  {{friend.bio}}\\r\\n                </mat-expansion-panel>\\r\\n              </mat-accordion>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n              <button type=\\\"button\\\" style=\\\"margin: 10px;\\\" class=\\\"btn btn-primary btn-sm\\\">Send Message</button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n    </ng-container>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark bg-dark\\\">\\r\\n  <!-- <a class=\\\"navbar-brand\\\" href=\\\"/\\\">LOGO HERE</a> -->\\r\\n  <img src=\\\"../../assets/images/hashmap_color.svg\\\" style=\\\"width: 60px\\\"/>\\r\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarsExample04\\\" aria-controls=\\\"navbarsExample04\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n  <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n  </button>\\r\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarsExample04\\\">\\r\\n     <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n        <li class=\\\"nav-item\\\">\\r\\n           <a class=\\\"nav-link\\\" href=\\\"/about\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\r\\n        </li>\\r\\n        <li>\\r\\n           <a class=\\\"divider\\\">|</a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\">\\r\\n           <a class=\\\"nav-link\\\" href=\\\"/rubric\\\">Rubric</a>\\r\\n        </li>\\r\\n        <li>\\r\\n           <a class=\\\"divider\\\">|</a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\">\\r\\n           <a class=\\\"nav-link\\\" href=\\\"/network\\\">Network</a>\\r\\n        </li>\\r\\n        <li>\\r\\n           <a class=\\\"divider\\\">|</a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\">\\r\\n           <a class=\\\"nav-link\\\" href=\\\"/setup\\\">Setup</a>\\r\\n        </li>\\r\\n        <li>\\r\\n           <a class=\\\"divider\\\">|</a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\">\\r\\n           <a class=\\\"nav-link\\\" href=\\\"/profile\\\">Profile</a>\\r\\n        </li>\\r\\n     </ul>\\r\\n     <!-- user is an obvserable, need to subscribe to it with async -->\\r\\n     <form class=\\\"\\\">\\r\\n         <div *ngIf=\\\"auth.user$ | async as user; else login\\\" class=\\\"form-group mb-0\\\">\\r\\n            <label class=\\\"welcomeText mb-0\\\" style=\\\"color: #d8dee9\\\">Hello, {{ user.displayName }}!</label>\\r\\n            <a href=\\\"/profile\\\"><img class=\\\"avatar\\\" src=\\\"{{user.photoURL}}\\\"/></a>\\r\\n            <button class=\\\"btn btn-light\\\" (click)=\\\"auth.signOut()\\\">Sign Out</button>\\r\\n         </div>\\r\\n         <ng-template #login>\\r\\n            <div class=\\\"form-group\\\">\\r\\n               <button type=\\\"button\\\" (click)=\\\"auth.googleSignin()\\\" class=\\\"google-button\\\">\\r\\n               <span class=\\\"google-button__icon\\\">\\r\\n               <img style=\\\"width: 100%; vertical-align: baseline\\\" src=\\\"../../assets/images/g-normal.png\\\"/>\\r\\n               </span>\\r\\n               <span class=\\\"google-button__text\\\">\\r\\n               Sign in with Google\\r\\n               </span>\\r\\n               </button>\\r\\n            </div>\\r\\n         </ng-template>\\r\\n      </form>\\r\\n  </div>\\r\\n</nav>\\r\\n\"","module.exports = \"<div class=\\\"card centerCard\\\" style=\\\"width: 90%\\\">\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <swiper class=\\\"swiper\\\" [config]=\\\"config\\\" #friendSwiper>\\r\\n      <div class=\\\"swiper-wrapper\\\">\\r\\n        <ng-container *ngFor=\\\"let profile of profiles; let i = index;\\\">\\r\\n          <div class=\\\"swiper-slide\\\">\\r\\n            <div class=\\\"card\\\" style=\\\"margin: 18px\\\">\\r\\n              <div class=\\\"card-body\\\">\\r\\n                <h3 class=\\\"card-title\\\" style=\\\"text-align: center\\\">{{profile.displayName}}</h3>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-12\\\">\\r\\n                    <div class=\\\"form-group\\\" >\\r\\n                      <img class=\\\"avatar\\\" src=\\\"{{profile.photoURL}}\\\"/>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-4\\\">\\r\\n                    <div class=\\\"fom-group\\\">\\r\\n                      <label>Region Id: {{profile._region.name}}</label>    \\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-4\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label>Platform: {{profile._platform.name}}</label>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-4\\\">\\r\\n                    <div class=\\\"fom-group\\\">\\r\\n                      <label>Communication Preference: {{profile._communicationPlatform.name}}</label>    \\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-12\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label class=\\\"form-control-label\\\">Steam Games</label>\\r\\n                      <div class=\\\"\\\">\\r\\n                        <mat-chip-list aria-label=\\\"Steam Games\\\">\\r\\n                          <mat-chip *ngFor=\\\"let app of profile._steamAppChips\\\">\\r\\n                            {{app.name}}\\r\\n                          </mat-chip>\\r\\n                        </mat-chip-list>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-12\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label>Available Day(s)</label>\\r\\n                      <div class=\\\"weekDays-selector\\\">\\r\\n                        <ng-container *ngIf=\\\"isDaySelected(profile,1)\\\">\\r\\n                          <input type=\\\"checkbox\\\" id=\\\"weekday-mon\\\" disabled=\\\"disabled\\\" [checked]=\\\"true\\\"  class=\\\"weekday disabled\\\" />\\r\\n                          <label for=\\\"weekday-mon\\\">Mon</label>\\r\\n                        </ng-container>\\r\\n                        <ng-container *ngIf=\\\"isDaySelected(profile,2)\\\">\\r\\n                            <input type=\\\"checkbox\\\" id=\\\"weekday-tue\\\" disabled=\\\"disabled\\\" [checked]=\\\"true\\\" class=\\\"weekday disabled\\\" />\\r\\n                            <label for=\\\"weekday-tue\\\">Tue</label>\\r\\n                        </ng-container>\\r\\n                        <ng-container  *ngIf=\\\"isDaySelected(profile,3)\\\">\\r\\n                            <input type=\\\"checkbox\\\" id=\\\"weekday-wed\\\" disabled=\\\"disabled\\\" [checked]=\\\"true\\\" class=\\\"weekday disabled\\\" />\\r\\n                            <label for=\\\"weekday-wed\\\">Wed</label>\\r\\n                        </ng-container>\\r\\n                        <ng-container  *ngIf=\\\"isDaySelected(profile,4)\\\">\\r\\n                            <input type=\\\"checkbox\\\" id=\\\"weekday-thu\\\" disabled=\\\"disabled\\\" [checked]=\\\"true\\\" class=\\\"weekday disabled\\\" />\\r\\n                            <label for=\\\"weekday-thu\\\">Thu</label>\\r\\n                        </ng-container>\\r\\n                        <ng-container *ngIf=\\\"isDaySelected(profile,5)\\\">\\r\\n                            <input type=\\\"checkbox\\\" id=\\\"weekday-fri\\\" disabled=\\\"disabled\\\" [checked]=\\\"true\\\" class=\\\"weekday disabled\\\" />\\r\\n                            <label for=\\\"weekday-fri\\\">Fri</label>\\r\\n                        </ng-container>\\r\\n                        <ng-container *ngIf=\\\"isDaySelected(profile,6)\\\">\\r\\n                            <input type=\\\"checkbox\\\" id=\\\"weekday-sat\\\" disabled=\\\"disabled\\\" [checked]=\\\"true\\\" class=\\\"weekday disabled\\\" />\\r\\n                            <label for=\\\"weekday-sat\\\">Sat</label>\\r\\n                        </ng-container>\\r\\n                        <ng-container *ngIf=\\\"isDaySelected(profile,7)\\\">\\r\\n                            <input type=\\\"checkbox\\\" id=\\\"weekday-sun\\\" disabled=\\\"disabled\\\" [checked]=\\\"true\\\" class=\\\"weekday disabled\\\" />\\r\\n                            <label for=\\\"weekday-sun\\\">Sun</label>\\r\\n                        </ng-container>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-12\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label>Bio: {{profile.bio}}</label>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-12\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" style=\\\"float: left\\\" (click)=\\\"decline(profile, i)\\\">Hard Pass</button>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" style=\\\"float: right\\\" (click)=\\\"addFriend(profile, i)\\\">Add</button>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </ng-container>\\r\\n      </div>\\r\\n      <!-- <div class=\\\"swiper-pagination\\\"></div> -->\\r\\n      <!-- <div class=\\\"swiper-button-next\\\"></div> -->\\r\\n      <!-- <div class=\\\"swiper-button-prev\\\"></div> -->\\r\\n    </swiper>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- <h3 style=\\\"color: white; text-align: center; padding: 20px;\\\"></h3> -->\\r\\n\"","module.exports = \"<div class=\\\"card centerCard\\\" style=\\\"width: 90%;\\\">\\r\\n  <div class=\\\"card-body\\\" *ngIf=\\\"profile && region && platform && comm\\\">\\r\\n      <!-- <div class=\\\"topbar\\\"></div> -->\\r\\n      <h5 class=\\\"card-title\\\">{{profile.displayName}}</h5>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n          <div *ngIf=\\\"auth.user$ | async as user\\\" class=\\\"\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"maskedName\\\">{{ user.displayName }}</label>\\r\\n              </div>\\r\\n              <!-- <img style=\\\"width: 25%; vertical-align: baseline\\\" src=\\\"../../assets/images/g-normal.png\\\"/> -->\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <img class=\\\"avatar\\\"  src=\\\"{{user.photoURL}}\\\"/>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"bio\\\">{{profile.bio}}</label>\\r\\n              </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label class=\\\"col-md-6 pl-0\\\">Region: </label>\\r\\n              <label class=\\\"col-md-6 pl-0 strong\\\">{{region.name}}</label>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label class=\\\"col-md-6 pl-0\\\">Platform: </label>\\r\\n              <label class=\\\"col-md-6 pl-0 strong\\\">{{platform.name}}</label>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label  class=\\\"col-md-6 pl-0\\\">Communication Preference: </label>\\r\\n              <label  class=\\\"col-md-6 pl-0 strong\\\">{{comm.name}}</label>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label class=\\\"form-control-label\\\">Steam Games</label>\\r\\n              <div class=\\\"mb-1\\\">\\r\\n                  <mat-chip-list aria-label=\\\"Steam Games\\\">\\r\\n                    <mat-chip *ngFor=\\\"let app of steamApps\\\">\\r\\n                      {{app.name}}\\r\\n                    </mat-chip>\\r\\n                  </mat-chip-list>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label>Available Day(s)</label>\\r\\n              <div class=\\\"weekDays-selector\\\">\\r\\n                <ng-container *ngIf=\\\"isDaySelected(1)\\\">\\r\\n                  <input type=\\\"checkbox\\\" id=\\\"weekday-mon\\\" disabled=\\\"disabled\\\" [checked]=\\\"true\\\"  class=\\\"weekday disabled\\\" />\\r\\n                  <label for=\\\"weekday-mon\\\">Mon</label>\\r\\n                </ng-container>\\r\\n                <ng-container *ngIf=\\\"isDaySelected(2)\\\">\\r\\n                    <input type=\\\"checkbox\\\" id=\\\"weekday-tue\\\" disabled=\\\"disabled\\\" [checked]=\\\"true\\\" class=\\\"weekday disabled\\\" />\\r\\n                    <label for=\\\"weekday-tue\\\">Tue</label>\\r\\n                </ng-container>\\r\\n                <ng-container  *ngIf=\\\"isDaySelected(3)\\\">\\r\\n                    <input type=\\\"checkbox\\\" id=\\\"weekday-wed\\\" disabled=\\\"disabled\\\" [checked]=\\\"true\\\" class=\\\"weekday disabled\\\" />\\r\\n                    <label for=\\\"weekday-wed\\\">Wed</label>\\r\\n                </ng-container>\\r\\n                <ng-container  *ngIf=\\\"isDaySelected(4)\\\">\\r\\n                    <input type=\\\"checkbox\\\" id=\\\"weekday-thu\\\" disabled=\\\"disabled\\\" [checked]=\\\"true\\\" class=\\\"weekday disabled\\\" />\\r\\n                    <label for=\\\"weekday-thu\\\">Thu</label>\\r\\n                </ng-container>\\r\\n                <ng-container *ngIf=\\\"isDaySelected(5)\\\">\\r\\n                    <input type=\\\"checkbox\\\" id=\\\"weekday-fri\\\" disabled=\\\"disabled\\\" [checked]=\\\"true\\\" class=\\\"weekday disabled\\\" />\\r\\n                    <label for=\\\"weekday-fri\\\">Fri</label>\\r\\n                </ng-container>\\r\\n                <ng-container *ngIf=\\\"isDaySelected(6)\\\">\\r\\n                    <input type=\\\"checkbox\\\" id=\\\"weekday-sat\\\" disabled=\\\"disabled\\\" [checked]=\\\"true\\\" class=\\\"weekday disabled\\\" />\\r\\n                    <label for=\\\"weekday-sat\\\">Sat</label>\\r\\n                </ng-container>\\r\\n                <ng-container *ngIf=\\\"isDaySelected(7)\\\">\\r\\n                    <input type=\\\"checkbox\\\" id=\\\"weekday-sun\\\" disabled=\\\"disabled\\\" [checked]=\\\"true\\\" class=\\\"weekday disabled\\\" />\\r\\n                    <label for=\\\"weekday-sun\\\">Sun</label>\\r\\n                </ng-container>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label>Friends List <span>{{ profile._friends.length }} Total Friends</span></label>\\r\\n              <div class=\\\"friends-list\\\">\\r\\n                <app-friend-card [friends]=\\\"profile._friends\\\"></app-friend-card>\\r\\n              </div>\\r\\n            </div>\\r\\n        </div>\\r\\n      </div>\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\" *ngIf=\\\"noProfile\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"form-control d-flex justify-content-center\\\">\\r\\n          <label>Navigate to the Setup tab to create a profile.</label>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"<div class=\\\"card centerCard\\\" style=\\\"width: 90%\\\">\\r\\n  <h2>Rubric</h2>\\r\\n\\r\\n  <mat-tab-group mat-align-tabs=\\\"center\\\">\\r\\n    <mat-tab label=\\\"Release One\\\">\\r\\n        <div class=\\\"header-body\\\">\\r\\n            <p class=\\\"subheader\\\">\\r\\n              This first release contains the first few features in our list. We created a google sign-in module that allows\\r\\n              users to come and create an account on HashMap. You can also setup your profile and link many accounts.\\r\\n            </p>\\r\\n\\r\\n            <hr>\\r\\n\\r\\n            <h2>Downloads</h2>\\r\\n            <a href=\\\"https://github.com/adamchlebek/HashMap\\\" class=\\\"btn btn-dark centerAlign\\\"><fa name=\\\"github\\\"></fa>Github Repo</a>\\r\\n            <a href=\\\"https://docs.google.com/document/d/1rOCnP8MmkQxvYwYIxpsaDWo9ebqqTVXUBBjhqe-Ky3M/edit?usp=sharing\\\" target=\\\"_blank\\\" class=\\\"btn btn-primary centerAlign\\\"><fa name=\\\"link\\\"></fa>Release 1 PDF</a>\\r\\n\\r\\n            <hr>\\r\\n\\r\\n            <h2>Feature List</h2>\\r\\n\\r\\n            <div class=\\\"container\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                  <div class=\\\"card\\\" >\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                      <h5 class=\\\"card-title\\\"><strong>Release 1</strong> (July 15th)</h5>\\r\\n                      <ul>\\r\\n                        <li>Google Sign-In and Account creation</li>\\r\\n                        <li>Profile Creation and Management</li>\\r\\n                        <li>Steam Linking and Game Linking</li>\\r\\n                        <li>Front end and menu created</li>\\r\\n                      </ul>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          <hr>\\r\\n          </div>\\r\\n    </mat-tab>\\r\\n    <mat-tab label=\\\"Release Two\\\">\\r\\n        <div class=\\\"header-body\\\">\\r\\n            <p class=\\\"subheader\\\">\\r\\n              This second release contains the last features that are on our list. We created many different things to build\\r\\n              off of our main idea of the network/friend searching area. We were not able to get the last feature on our list because\\r\\n              the games that we were focused on the most did not have a public IP Address.\\r\\n            </p>\\r\\n\\r\\n            <hr>\\r\\n\\r\\n            <h2>Downloads</h2>\\r\\n            <a href=\\\"https://github.com/adamchlebek/HashMap\\\" class=\\\"btn btn-dark centerAlign\\\"><fa name=\\\"github\\\"></fa>Github Repo</a>\\r\\n            <a href=\\\"https://docs.google.com/document/d/1k85L4X-fUFN9vPLFnxBBqA9dhoRVcB8h_Y9Bi72mP2k/edit?usp=sharing\\\" target=\\\"_blank\\\" class=\\\"btn btn-primary centerAlign\\\"><fa name=\\\"link\\\"></fa>Release 2 PDF</a>\\r\\n\\r\\n            <hr>\\r\\n\\r\\n            <h2>Feature List</h2>\\r\\n\\r\\n            <div class=\\\"container\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                  <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                      <h5 class=\\\"card-title\\\"><strong>Release 2</strong> (July 31st)</h5>\\r\\n                      <ul>\\r\\n                        <li>Friend Matching Algorithm</li>\\r\\n                        <li>Add friends to List</li>\\r\\n                        <li>Search By Location</li>\\r\\n                        <li>Add search by rank with specific games</li>\\r\\n                      </ul>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          <hr>\\r\\n          </div>\\r\\n    </mat-tab>\\r\\n  </mat-tab-group>\\r\\n</div>\\r\\n\"","module.exports = \"<link href=\\\"https://fonts.googleapis.com/icon?family=Material+Icons\\\" rel=\\\"stylesheet\\\">\\r\\n<ng-form #myForm=\\\"ngForm\\\">\\r\\n<div class=\\\"card centerCard\\\" style=\\\"width: 90%\\\">\\r\\n  <div class=\\\"card-body\\\" *ngIf=\\\"isLoaded\\\">\\r\\n    <!-- <div class=\\\"topbar\\\"></div> -->\\r\\n      <h5 class=\\\"card-title\\\">Profile Setup</h5>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"maskedName\\\">Display Name</label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"maskedName\\\" name=\\\"name\\\" [(ngModel)]=\\\"profile.displayName\\\"/>\\r\\n            <small id=\\\"nameHelp\\\" class=\\\"form-text text-muted\\\">Name displayed on profile.</small>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"dllRegion\\\">Region</label>\\r\\n            <select id=\\\"ddlRegion\\\" class=\\\"form-control\\\" name=\\\"region\\\" [(ngModel)]=\\\"profile.regionId\\\">\\r\\n              <option value=\\\"\\\"></option>\\r\\n              <option *ngFor=\\\"let region of regions | async\\\" [value]=\\\"region.id\\\">\\r\\n                {{region.name}}\\r\\n              </option>\\r\\n            </select>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"ddlPlatform\\\">Platform</label>\\r\\n            <select id=\\\"ddlPlatform\\\" class=\\\"form-control\\\" name=\\\"platform\\\" [(ngModel)]=\\\"profile.platformId\\\">\\r\\n              <option value=\\\"\\\"></option>\\r\\n              <option *ngFor=\\\"let platform of platforms | async\\\" [value]=\\\"platform.id\\\">\\r\\n                {{platform.name}}\\r\\n              </option>\\r\\n            </select>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"ddlComms\\\">Communication Preference</label>\\r\\n            <select id=\\\"ddlComms\\\" class=\\\"form-control\\\" name=\\\"comms\\\" [(ngModel)]=\\\"profile.communicationPlatformId\\\">\\r\\n              <option value=\\\"\\\"></option>\\r\\n              <option *ngFor=\\\"let com of comms | async\\\" [value]=\\\"com.id\\\">\\r\\n                {{com.name}}\\r\\n              </option>\\r\\n            </select>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <label class=\\\"form-control-label\\\">Steam Games</label>\\r\\n          <div class=\\\"mb-1\\\">\\r\\n            <mat-form-field class=\\\"example-chip-list\\\" style=\\\"width: 100%;\\\">\\r\\n              <mat-chip-list #appList>\\r\\n                <mat-chip\\r\\n                  *ngFor=\\\"let app of selectedApps; let i=index\\\"\\r\\n                  [selectable]=\\\"true\\\"\\r\\n                  [removable]=\\\"true\\\"\\r\\n                  (removed)=\\\"remove(app,i)\\\">\\r\\n                  {{ app.name }}\\r\\n                  <mat-icon matChipRemove>cancel</mat-icon>\\r\\n                </mat-chip>\\r\\n                <input\\r\\n                  placeholder=\\\"Add game...\\\"\\r\\n                  #appInput\\r\\n                  [formControl]=\\\"appCtrl\\\"\\r\\n                  [matAutocomplete]=\\\"auto\\\"\\r\\n                  [matChipInputFor]=\\\"appList\\\"\\r\\n                  [matChipInputSeparatorKeyCodes]=\\\"separatorKeysCodes\\\"\\r\\n                  [matChipInputAddOnBlur]=\\\"addOnBlur\\\"\\r\\n                  (matChipInputTokenEnd)=\\\"add($event)\\\">\\r\\n              </mat-chip-list>\\r\\n              <mat-autocomplete #auto=\\\"matAutocomplete\\\" (optionSelected)=\\\"selected($event)\\\">\\r\\n                <mat-option *ngFor=\\\"let app of filteredApps | async\\\" [value]=\\\"app\\\">\\r\\n                  {{ app.name }}\\r\\n                </mat-option>\\r\\n              </mat-autocomplete>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Available Day(s)</label>\\r\\n            <div class=\\\"weekDays-selector\\\">\\r\\n              <ng-container *ngFor=\\\"let d of days | async; let i=index;\\\">\\r\\n                <input type=\\\"checkbox\\\" id=\\\"weekday_{{i}}\\\" class=\\\"weekday\\\" [checked]=\\\"isDaySelected(d.id)\\\" (change)=\\\"dayChange($event, d)\\\" />\\r\\n                <label for=\\\"weekday_{{i}}\\\">{{d.name}}</label>\\r\\n              </ng-container>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"bio\\\">Bio <small class=\\\"text-muted font-italic\\\">Optional</small></label>\\r\\n            <textarea class=\\\"form-control\\\" id=\\\"bio\\\" rows=\\\"3\\\" name=\\\"bio\\\" [(ngModel)]=\\\"profile.bio\\\"></textarea>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" style=\\\"float: right\\\" (click)=\\\"save()\\\">Save</button>\\r\\n        </div>\\r\\n      </div>\\r\\n  </div>\\r\\n</div>\\r\\n</ng-form>\\r\\n\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Fib3V0L2Fib3V0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n/** Setup Component Links */\r\n@Component({\r\n  selector: 'app-about',\r\n  templateUrl: './about.component.html',\r\n  styleUrls: ['./about.component.scss']\r\n})\r\n\r\n/**************************************************\r\n * @author Adam Chlebek\r\n * @version 1.0\r\n * @description About Component is all front-ended\r\n * information about the project\r\n *************************************************/\r\nexport class AboutComponent implements OnInit {\r\n  /**\r\n   * Creates an instance of about component.\r\n   */\r\n  constructor() { }\r\n\r\n\r\n  /**\r\n   * About Component initialization\r\n   */\r\n  ngOnInit() {\r\n  }\r\n}\r\n","import { AboutComponent } from './about/about.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SetupComponent } from './setup/setup.component';\r\nimport { AuthGuard } from './auth.guard';\r\nimport { ReleaseRubricComponent } from './release-rubric/release-rubric.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { NetworkComponent } from './network/network.component';\r\n\r\n/**********************************************\r\n * @author Adam Chlebek\r\n * @version 1.0\r\n * @description Manage routes of all components\r\n * notifcations\r\n *********************************************/\r\n\r\n/** Routes collection for all components */\r\nconst routes: Routes = [\r\n  { path: 'rubric', component: ReleaseRubricComponent},\r\n  { path: '',\r\n    redirectTo: '/about',\r\n    pathMatch: 'full'\r\n  },\r\n  { path: 'network', component: NetworkComponent, canActivate: [AuthGuard]},\r\n  { path: 'setup', component: SetupComponent, canActivate: [AuthGuard] },\r\n  { path: 'about', component: AboutComponent },\r\n  { path: 'profile', component: ProfileComponent, canActivate: [AuthGuard] }\r\n];\r\n\r\n/**\r\n * Defines NgModule\r\n */\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class AppRoutingModule { }\r\nexport const routingComponents = [SetupComponent];\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n/**\r\n * Sets App Component Links\r\n */\r\n@Component({\r\n  selector    : 'app-root',\r\n  templateUrl : './app.component.html',\r\n  styleUrls   : ['./app.component.scss']\r\n})\r\n\r\n/** Sets Component Title */\r\nexport class AppComponent {\r\n\r\n  /** Title  of app component */\r\n  title = 'HashMap';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule, NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { AppRoutingModule, routingComponents } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { AngularFontAwesomeModule } from 'angular-font-awesome';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AngularFireModule } from '@angular/fire';\r\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\r\nimport { AngularFireStorageModule } from '@angular/fire/storage';\r\nimport { AngularFireAuthModule } from '@angular/fire/auth';\r\nimport { SetupComponent } from './setup/setup.component';\r\nimport { NavComponent } from './nav/nav.component';\r\nimport { AboutComponent } from './about/about.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ReleaseRubricComponent } from './release-rubric/release-rubric.component';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { NetworkComponent } from './network/network.component';\r\nimport { MatChipsModule, MatIconModule, MatTabsModule,\r\n        MatAutocompleteModule, MatFormFieldModule,\r\n        MatInputModule, MatButtonModule, MatCheckboxModule,\r\n        MatTableModule, MatSelectModule, MatDialogModule, MatExpansionModule } from '@angular/material';\r\nimport { NgxUsefulSwiperModule } from 'ngx-useful-swiper';\r\nimport { FriendCardComponent } from './friend-card/friend-card.component';\r\nimport { ChatButtonComponent } from './chat-button/chat-button.component';\r\nimport { ChatModalComponent } from './chat-modal/chat-modal.component';\r\n\r\n/** Google Firebase configuration */\r\nconst config = {\r\n  apiKey            : 'AIzaSyDDpHaPU_JxdJF62QK4aZvGol1kxUVsKTg',\r\n  authDomain        : 'hashmaporbyt.firebaseapp.com',\r\n  databaseURL       : 'https://hashmaporbyt.firebaseio.com',\r\n  projectId         : 'hashmaporbyt',\r\n  storageBucket     : 'hashmaporbyt.appspot.com',\r\n  messagingSenderId : '988913741592',\r\n  appId             : '1:988913741592:web:7044428c9379127f'\r\n};\r\n\r\n/***********************************************\r\n * Ng module declarions, imports, and providers\r\n **********************************************/\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    routingComponents,\r\n    SetupComponent,\r\n    NavComponent,\r\n    AboutComponent,\r\n    ReleaseRubricComponent,\r\n    ProfileComponent,\r\n    NetworkComponent,\r\n    FriendCardComponent,\r\n    ChatButtonComponent,\r\n    ChatModalComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    AngularFontAwesomeModule,\r\n    AngularFireModule.initializeApp(config),\r\n    AngularFirestoreModule,       // firestore\r\n    AngularFireAuthModule,        // auth\r\n    AngularFireStorageModule,     // storage\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    MatChipsModule,\r\n    BrowserAnimationsModule,\r\n    MatButtonModule,\r\n    MatCheckboxModule,\r\n    MatIconModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatAutocompleteModule,\r\n    MatTableModule,\r\n    MatDialogModule,\r\n    MatSelectModule,\r\n    MatTabsModule,\r\n    MatExpansionModule,\r\n    NgxUsefulSwiperModule,\r\n    ToastrModule.forRoot({\r\n      maxOpened: 1,\r\n      autoDismiss: true\r\n    }),\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [ChatModalComponent]\r\n})\r\n\r\n/** Created AppModule class */\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from './services/auth/auth.service';\r\nimport { take, map, tap } from 'rxjs/operators';\r\n\r\n/** Defines Injectable */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n/**********************************************************\r\n * @author Collin Larson\r\n * @version 1.0\r\n * @description Auth Guard is the security guard / bouncer\r\n * for pages that require a logged in user.\r\n *********************************************************/\r\nexport class AuthGuard implements CanActivate {\r\n  /*********************************************************\r\n   * Creates an instance of auth guard.\r\n   * @param auth AuthService\r\n   * @param router Angular Router module\r\n   * @description Constructs the AuthGuard with its needed\r\n   * dependicies\r\n   ********************************************************/\r\n  constructor(private auth: AuthService, private router: Router) { }\r\n\r\n  /***************************************************************************\r\n   * Determines whether a user can access a page\r\n   * @param next ActivatedRouteSnapshot (angular routing, next component)\r\n   * @param state ActivatedRouteSnapshot (angular routing, current component)\r\n   * @returns activate\r\n   **************************************************************************/\r\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree> |\r\n  Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    return this.auth.user$.pipe(\r\n      take(1),\r\n      map(user => !!user),\r\n      tap(loggedIn => {\r\n        if (!loggedIn) {\r\n          console.log('Acess denied');\r\n          this.router.navigate(['/about']);\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  /*********************************************\r\n   * Determines whether a user is logged in.\r\n   * Used for spec testing\r\n   * @returns true\r\n   ********************************************/\r\n  isLoggedIn() {\r\n    return true;\r\n  }\r\n}\r\n","module.exports = \".btn-circle.btn-xl {\\n  width: 60px;\\n  height: 60px;\\n  padding: 10px 16px;\\n  border-radius: 35px;\\n}\\n\\n.btn-circle {\\n  width: 30px;\\n  height: 30px;\\n  padding: 6px 0px;\\n  border-radius: 15px;\\n  text-align: center;\\n  font-size: 14px;\\n  line-height: 1.42857;\\n  background-color: #a3be8c;\\n  border-color: #a3be8c;\\n}\\n\\n.messageButton {\\n  overflow: hidden;\\n  position: fixed;\\n  bottom: 18px;\\n  right: 18px;\\n  width: 100%;\\n  z-index: 2;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2hhdC1idXR0b24vQzpcXERldlxcaGFzaF9tYXBfd2ViXFxIYXNoTWFwL3NyY1xcYXBwXFxjaGF0LWJ1dHRvblxcY2hhdC1idXR0b24uY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2NoYXQtYnV0dG9uL2NoYXQtYnV0dG9uLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBQTtFQUNBLFlBQUE7RUFDQSxrQkFBQTtFQUNBLG1CQUFBO0FDQ0Y7O0FERUE7RUFDRSxXQUFBO0VBQ0EsWUFBQTtFQUNBLGdCQUFBO0VBQ0EsbUJBQUE7RUFDQSxrQkFBQTtFQUNBLGVBQUE7RUFDQSxvQkFBQTtFQUNBLHlCQUFBO0VBQ0EscUJBQUE7QUNDRjs7QURFQTtFQUNFLGdCQUFBO0VBQ0EsZUFBQTtFQUNBLFlBQUE7RUFDQSxXQUFBO0VBQ0EsV0FBQTtFQUNBLFVBQUE7QUNDRiIsImZpbGUiOiJzcmMvYXBwL2NoYXQtYnV0dG9uL2NoYXQtYnV0dG9uLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmJ0bi1jaXJjbGUuYnRuLXhsIHtcclxuICB3aWR0aDogNjBweDtcclxuICBoZWlnaHQ6IDYwcHg7XHJcbiAgcGFkZGluZzogMTBweCAxNnB4O1xyXG4gIGJvcmRlci1yYWRpdXM6IDM1cHg7XHJcbn1cclxuXHJcbi5idG4tY2lyY2xlIHtcclxuICB3aWR0aDogMzBweDtcclxuICBoZWlnaHQ6IDMwcHg7XHJcbiAgcGFkZGluZzogNnB4IDBweDtcclxuICBib3JkZXItcmFkaXVzOiAxNXB4O1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBmb250LXNpemU6IDE0cHg7XHJcbiAgbGluZS1oZWlnaHQ6IDEuNDI4NTc7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2EzYmU4YztcclxuICBib3JkZXItY29sb3I6ICNhM2JlOGM7XHJcbn1cclxuXHJcbi5tZXNzYWdlQnV0dG9ue1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgcG9zaXRpb246IGZpeGVkO1xyXG4gIGJvdHRvbTogMThweDtcclxuICByaWdodDogMThweDtcclxuICB3aWR0aDogMTAwJTtcclxuICB6LWluZGV4OiAyO1xyXG59XHJcbiIsIi5idG4tY2lyY2xlLmJ0bi14bCB7XG4gIHdpZHRoOiA2MHB4O1xuICBoZWlnaHQ6IDYwcHg7XG4gIHBhZGRpbmc6IDEwcHggMTZweDtcbiAgYm9yZGVyLXJhZGl1czogMzVweDtcbn1cblxuLmJ0bi1jaXJjbGUge1xuICB3aWR0aDogMzBweDtcbiAgaGVpZ2h0OiAzMHB4O1xuICBwYWRkaW5nOiA2cHggMHB4O1xuICBib3JkZXItcmFkaXVzOiAxNXB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgbGluZS1oZWlnaHQ6IDEuNDI4NTc7XG4gIGJhY2tncm91bmQtY29sb3I6ICNhM2JlOGM7XG4gIGJvcmRlci1jb2xvcjogI2EzYmU4Yztcbn1cblxuLm1lc3NhZ2VCdXR0b24ge1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIGJvdHRvbTogMThweDtcbiAgcmlnaHQ6IDE4cHg7XG4gIHdpZHRoOiAxMDAlO1xuICB6LWluZGV4OiAyO1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport { ChatModalComponent } from '../chat-modal/chat-modal.component';\r\n\r\n/** Setup Component Links */\r\n@Component({\r\n  selector: 'app-chat-button',\r\n  templateUrl: './chat-button.component.html',\r\n  styleUrls: ['./chat-button.component.scss']\r\n})\r\n\r\n/**************************************************\r\n * @author Adam Chlebek and Collin Larson\r\n * @version 1.0\r\n * @description ChatButtonComponent class handles the\r\n * front end logic of openeing the chat model\r\n *************************************************/\r\nexport class ChatButtonComponent implements OnInit {\r\n\r\n  /** Creates an instance of chat button component. */\r\n  constructor(public dialog: MatDialog) { }\r\n\r\n  /** Defines ngOnInit */\r\n  ngOnInit() {\r\n  }\r\n\r\n  openModal() {\r\n    const dialogRef = this.dialog.open(ChatModalComponent, {\r\n      width: '1000px',\r\n      height: '700px'\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \".container {\\n  max-width: 1170px;\\n  margin: auto;\\n}\\n\\nimg {\\n  max-width: 100%;\\n}\\n\\n.inbox_people {\\n  background: #f8f8f8 none repeat scroll 0 0;\\n  float: left;\\n  overflow: hidden;\\n  width: 35%;\\n  border-right: 1px solid #c4c4c4;\\n}\\n\\n.inbox_msg {\\n  border: 1px solid #c4c4c4;\\n  clear: both;\\n  overflow: hidden;\\n}\\n\\n.top_spac {\\n  margin: 20px 0 0;\\n}\\n\\n.recent_heading {\\n  float: left;\\n  width: 40%;\\n}\\n\\n.srch_bar {\\n  display: inline-block;\\n  text-align: right;\\n}\\n\\n.headind_srch {\\n  padding: 10px 29px 10px 20px;\\n  overflow: hidden;\\n  border-bottom: 1px solid #c4c4c4;\\n}\\n\\n.recent_heading h4 {\\n  color: #05728f;\\n  font-size: 21px;\\n  margin: auto;\\n}\\n\\n.srch_bar input {\\n  border: 1px solid #cdcdcd;\\n  border-width: 0 0 1px 0;\\n  width: 80%;\\n  padding: 2px 0 4px 6px;\\n  background: none;\\n}\\n\\n.srch_bar .input-group-addon button {\\n  background: rgba(0, 0, 0, 0) none repeat scroll 0 0;\\n  border: medium none;\\n  padding: 0;\\n  color: #707070;\\n  font-size: 18px;\\n}\\n\\n.srch_bar .input-group-addon {\\n  margin: 0 0 0 -27px;\\n}\\n\\n.chat_ib h5 {\\n  font-size: 15px;\\n  color: #464646;\\n  margin: 0 0 8px 0;\\n}\\n\\n.chat_ib h5 span {\\n  font-size: 13px;\\n  float: right;\\n}\\n\\n.chat_ib p {\\n  font-size: 14px;\\n  color: #989898;\\n  margin: auto;\\n}\\n\\n.chat_img {\\n  float: left;\\n  width: 11%;\\n}\\n\\n.chat_ib {\\n  float: left;\\n  padding: 0 0 0 15px;\\n  width: 88%;\\n}\\n\\n.chat_people {\\n  overflow: hidden;\\n  clear: both;\\n}\\n\\n.chat_list {\\n  border-bottom: 1px solid #c4c4c4;\\n  margin: 0;\\n  padding: 18px 16px 10px;\\n}\\n\\n.inbox_chat {\\n  height: 550px;\\n  overflow-y: scroll;\\n}\\n\\n.active_chat {\\n  background: #ebebeb;\\n}\\n\\n.incoming_msg_img {\\n  display: inline-block;\\n  width: 6%;\\n}\\n\\n.received_msg {\\n  display: inline-block;\\n  padding: 0 0 0 10px;\\n  vertical-align: top;\\n  width: 92%;\\n}\\n\\n.received_withd_msg p {\\n  background: #ebebeb none repeat scroll 0 0;\\n  border-radius: 3px;\\n  color: #646464;\\n  font-size: 14px;\\n  margin: 0;\\n  padding: 5px 10px 5px 12px;\\n  width: 100%;\\n}\\n\\n.time_date {\\n  color: #747474;\\n  display: block;\\n  font-size: 12px;\\n  margin: 8px 0 0;\\n}\\n\\n.received_withd_msg {\\n  width: 57%;\\n}\\n\\n.mesgs {\\n  float: left;\\n  padding: 30px 15px 0 25px;\\n  width: 65%;\\n}\\n\\n.sent_msg p {\\n  background: #05728f none repeat scroll 0 0;\\n  border-radius: 3px;\\n  font-size: 14px;\\n  margin: 0;\\n  color: #fff;\\n  padding: 5px 10px 5px 12px;\\n  width: 100%;\\n}\\n\\n.outgoing_msg {\\n  overflow: hidden;\\n  margin: 26px 0 26px;\\n}\\n\\n.sent_msg {\\n  float: right;\\n  width: 46%;\\n}\\n\\n.input_msg_write input {\\n  background: rgba(0, 0, 0, 0) none repeat scroll 0 0;\\n  border: medium none;\\n  color: #4c4c4c;\\n  font-size: 15px;\\n  min-height: 48px;\\n  width: 100%;\\n}\\n\\n.type_msg {\\n  border-top: 1px solid #c4c4c4;\\n  position: relative;\\n}\\n\\n.msg_send_btn {\\n  background: #05728f none repeat scroll 0 0;\\n  border: medium none;\\n  border-radius: 50%;\\n  color: #fff;\\n  cursor: pointer;\\n  font-size: 17px;\\n  height: 33px;\\n  position: absolute;\\n  right: 0;\\n  top: 11px;\\n  width: 33px;\\n}\\n\\n.messaging {\\n  padding: 0 0 50px 0;\\n}\\n\\n.msg_history {\\n  height: 516px;\\n  overflow-y: auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64, */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ChatModalService } from './chat-modal.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { SetupService } from '../setup/setup.service';\r\nimport { AuthService } from '../services/auth/auth.service';\r\nimport { Profile } from '../setup/models/profile.model';\r\nimport { NotificationService } from '../utility/notification/notification.service';\r\nimport * as _ from 'lodash';\r\nimport { User } from '../services/user.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-chat-modal',\r\n  templateUrl: './chat-modal.component.html',\r\n  styleUrls: ['./chat-modal.component.scss']\r\n})\r\nexport class ChatModalComponent implements OnInit {\r\n\r\n  chat$: Observable<any>;\r\n  newMsg: string;\r\n  user: User;\r\n  profile: Profile;\r\n  chatId: string;\r\n  isLoading = true;\r\n\r\n  constructor(\r\n    public cs: ChatModalService,\r\n    private route: ActivatedRoute,\r\n    private setupAPI: SetupService,\r\n    private auth: AuthService,\r\n    private notificationService: NotificationService) { }\r\n\r\n  ngOnInit() {\r\n    this.getProfile();\r\n  }\r\n\r\n  async getProfile() {\r\n    this.user = await this.auth.getUser();\r\n    // prof is a DocumentData, typing as any to get past typescript mismatch issue\r\n    this.setupAPI.getProfile(this.user.uid).subscribe((prof: any) => {\r\n      if (prof.exists) {\r\n        this.profile = prof.data();\r\n        this.getFriends().then(friends => {\r\n          this.profile._friends = friends;\r\n        });\r\n\r\n        if (this.user.uid.localeCompare(this.profile.friends[0].id) == 1) {\r\n          this.chatId = this.user.uid+this.profile.friends[0].id;\r\n        } else {\r\n          this.chatId = this.profile.friends[0].id+this.user.uid;\r\n        }\r\n        this.onInitChat();\r\n        this.isLoading = false;\r\n      } else {\r\n        this.notificationService.showErrorWithTimeout('Profile not found.', 'Error', 5000);\r\n      } // end of if profile exists\r\n    });\r\n  } // end of get profile\r\n\r\n  async getFriends() {\r\n    let friends: Profile[] = [];\r\n    await _.forEach(this.profile.friends, (profRef) => {\r\n      profRef.get().then((friendSnapShot: any) => {\r\n        if (friendSnapShot.exists) {\r\n          friends.push(friendSnapShot.data());\r\n        }\r\n      });\r\n    });\r\n    return friends;\r\n  }\r\n\r\n  onInitChat() {\r\n    this.cs.get2(this.chatId).subscribe((chat: any) => {\r\n      if(chat.exists) {\r\n        this.chat$ = this.cs.joinUsers(this.cs.get(this.chatId));\r\n      } else {\r\n        this.cs.create(this.chatId);\r\n      }\r\n    })\r\n    // const source = this.cs.get(this.chatId);\r\n    // const source2 = this.cs.get(this.chatId);\r\n    // source.subscribe((src: any) => {\r\n    //   if(!src.exists) {\r\n    //     this.cs.create(this.chatId);\r\n    //   }\r\n    // });\r\n    //console.log(source);\r\n    //this.chat$ = this.cs.joinUsers(source);\r\n    //console.log(this.chat$);\r\n  }\r\n\r\n  changeChat(id: string) {\r\n    if (this.user.uid.localeCompare(id) == 1) {\r\n      this.chatId = this.user.uid+id;\r\n    } else {\r\n      this.chatId = id+this.user.uid;\r\n    }\r\n    this.onInitChat();\r\n  }\r\n\r\n  submit(chatId) {\r\n    if(!this.newMsg) {\r\n      return alert('You need to enter something');\r\n    }\r\n    this.cs.sendMessage(this.chatId, this.newMsg);\r\n    this.newMsg = '';\r\n  }\r\n\r\n  trackByCreated(i, msg) {\r\n    return msg.createdAt;\r\n  }\r\n\r\n  getChatId(id: string) {\r\n    let chatId = '';\r\n    if (this.user.uid.localeCompare(id) == 1) {\r\n      chatId = this.user.uid+id;\r\n    } else {\r\n      chatId = id+this.user.uid;\r\n    }\r\n    return chatId;\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { AuthService } from '../services/auth/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { map, switchMap } from 'rxjs/operators';\r\nimport { Observable, combineLatest, of } from 'rxjs';\r\nimport { firestore } from 'firebase/app';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ChatModalService {\r\n\r\n  constructor(\r\n    private afs: AngularFirestore,\r\n    private auth: AuthService,\r\n    private router: Router) { }\r\n\r\n  get(chatId) {\r\n    return this.afs\r\n      .collection<any>('chats')\r\n      .doc(chatId)\r\n      .snapshotChanges()\r\n      .pipe(\r\n        map(doc => {\r\n          return { id: doc.payload.id, ...doc.payload.data() };\r\n        })\r\n      );\r\n  }\r\n\r\n  get2(chatId: string) {\r\n    const chatRef = this.afs.doc(`chats/${chatId}`);\r\n    return chatRef.get();\r\n  }\r\n\r\n  async create(chatId) {\r\n    const { uid } = await this.auth.getUser();\r\n    const chatRef = this.afs.doc(`chats/${chatId}`);\r\n\r\n    const data = {\r\n      uid,\r\n      createdAt: Date.now(),\r\n      count: 0,\r\n      messages: []\r\n    };\r\n\r\n    return chatRef.set(data);\r\n    //const docRef = await this.afs.collection('chats').add(data);\r\n    //return this.router.navigate(['chats', docRef.id]);\r\n  }\r\n  \r\n  async sendMessage(chatId, content) {\r\n    const { uid } = await this.auth.getUser();\r\n\r\n    const data = {\r\n      uid,\r\n      content,\r\n      createdAt: Date.now()\r\n    };\r\n\r\n    if (uid) {\r\n      const ref = this.afs.collection('chats').doc(chatId);\r\n      return ref.update({\r\n        messages: firestore.FieldValue.arrayUnion(data)\r\n      });\r\n    }\r\n  }\r\n\r\n  /******************************************************************\r\n   * Joins users Grabs the unique IDs from the chat messages array, \r\n   * then joins the user profile data to each message and keeps \r\n   * the entire payload synced in realtime.\r\n   *****************************************************************/\r\n  joinUsers(chat$: Observable<any>) {\r\n    let chat;\r\n    const joinKeys = {};\r\n  \r\n    return chat$.pipe(\r\n      switchMap(c => {\r\n        // Unique User IDs\r\n        chat = c;\r\n        const uids = Array.from(new Set(c.messages.map(v => v.uid)));\r\n  \r\n        // Firestore User Doc Reads\r\n        const userDocs = uids.map(u =>\r\n          this.afs.doc(`profiles/${u}`).valueChanges()\r\n        );\r\n  \r\n        return userDocs.length ? combineLatest(userDocs) : of([]);\r\n      }),\r\n      map(arr => {\r\n        arr.forEach(v => (joinKeys[(<any>v).uid] = v));\r\n        chat.messages = chat.messages.map(v => {\r\n          return { ...v, user: joinKeys[v.uid] };\r\n        });\r\n  \r\n        return chat;\r\n      })\r\n    );\r\n  } // end of join users\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZyaWVuZC1jYXJkL2ZyaWVuZC1jYXJkLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Profile } from '../setup/models/profile.model';\r\n\r\n/** Setup Component Links */\r\n@Component({\r\n  selector: 'app-friend-card',\r\n  templateUrl: './friend-card.component.html',\r\n  styleUrls: ['./friend-card.component.scss']\r\n})\r\n\r\n/**************************************************\r\n * @author Adam Chlebek and Collin Larson\r\n * @version 1.0\r\n * @description FriendCardComponent class handles the\r\n * front end logic of showing your friend list.\r\n *************************************************/\r\nexport class FriendCardComponent implements OnInit {\r\n\r\n  /** Input of friends for component */\r\n  @Input() friends: Profile[];\r\n\r\n  /** Creates an instance of friend card component. */\r\n  constructor() { }\r\n\r\n  /** Defines ngOnInit */\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \".login-container {\\n  max-width: 400px;\\n  margin: 60px auto 0;\\n}\\n\\n.error {\\n  color: tomato;\\n  font-size: 12px;\\n  padding-top: 4px;\\n}\\n\\n.photo-img {\\n  margin: 0;\\n  position: absolute;\\n  top: 50%;\\n  width: 30px;\\n}\\n\\n.avatar {\\n  vertical-align: middle;\\n  width: 50px;\\n  height: 50px;\\n  border-radius: 50%;\\n  margin-right: 15px;\\n}\\n\\n.welcomeText {\\n  padding-right: 18px;\\n  color: white;\\n}\\n\\n.google-button {\\n  height: 35px;\\n  border-width: 0;\\n  background: white;\\n  color: #737373;\\n  border-radius: 5px;\\n  white-space: nowrap;\\n  box-shadow: 1px 1px 0px 1px rgba(0, 0, 0, 0.05);\\n  transition-property: background-color, box-shadow;\\n  transition-duration: 150ms;\\n  transition-timing-function: ease-in-out;\\n  padding: 0;\\n  margin-top: 10px;\\n}\\n\\n.google-button:focus, .google-button:hover {\\n  box-shadow: 1px 4px 5px 1px rgba(0, 0, 0, 0.1);\\n}\\n\\n.google-button:active {\\n  background-color: #e5e5e5;\\n  box-shadow: none;\\n  transition-duration: 10ms;\\n}\\n\\n.google-button__icon {\\n  display: inline-block;\\n  vertical-align: middle;\\n  margin: 8px 0 8px 8px;\\n  width: 18px;\\n  height: 18px;\\n  box-sizing: border-box;\\n}\\n\\n.google-button__icon--plus {\\n  width: 27px;\\n}\\n\\n.google-button__text {\\n  display: inline-block;\\n  vertical-align: middle;\\n  padding: 0 18px;\\n  font-size: 14px;\\n  font-weight: bold;\\n  font-family: \\\"Roboto\\\", arial, sans-serif;\\n}\\n\\nhtml, body {\\n  height: 100%;\\n}\\n\\nbody {\\n  background-color: #f0f0f0;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n}\\n\\nbutton ~ button {\\n  margin-left: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbmF2L0M6XFxEZXZcXGhhc2hfbWFwX3dlYlxcSGFzaE1hcC9zcmNcXGFwcFxcbmF2XFxuYXYuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL25hdi9uYXYuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxnQkFBQTtFQUNBLG1CQUFBO0FDQ0o7O0FERUE7RUFDQSxhQUFBO0VBQ0EsZUFBQTtFQUNBLGdCQUFBO0FDQ0E7O0FERUE7RUFDRSxTQUFBO0VBQ0Esa0JBQUE7RUFDQSxRQUFBO0VBQ0EsV0FBQTtBQ0NGOztBREVBO0VBQ0Usc0JBQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtFQUNBLGtCQUFBO0VBQ0Esa0JBQUE7QUNDRjs7QURFQTtFQUNFLG1CQUFBO0VBQ0EsWUFBQTtBQ0NGOztBREtBO0VBQ0ksWUFBQTtFQUNBLGVBQUE7RUFDQSxpQkFBQTtFQUNBLGNBQUE7RUFDQSxrQkFBQTtFQUNBLG1CQUFBO0VBQ0EsK0NBQUE7RUFDQSxpREFBQTtFQUNBLDBCQUFBO0VBQ0EsdUNBQUE7RUFDQSxVQUFBO0VBQ0EsZ0JBQUE7QUNGSjs7QURJSTtFQUVFLDhDQUFBO0FDSE47O0FETUk7RUFDRSx5QkFBQTtFQUNBLGdCQUFBO0VBQ0EseUJBQUE7QUNKTjs7QURRRTtFQUNFLHFCQUFBO0VBQ0Esc0JBQUE7RUFDQSxxQkFBQTtFQUNBLFdBQUE7RUFDQSxZQUFBO0VBQ0Esc0JBQUE7QUNMSjs7QURRRTtFQUNFLFdBQUE7QUNMSjs7QURRRTtFQUNFLHFCQUFBO0VBQ0Esc0JBQUE7RUFDQSxlQUFBO0VBQ0EsZUFBQTtFQUNBLGlCQUFBO0VBQ0Esd0NBQUE7QUNMSjs7QURVRTtFQUNFLFlBQUE7QUNQSjs7QURVRTtFQUNFLHlCQUFBO0VBQ0EsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsdUJBQUE7QUNQSjs7QURVRTtFQUNFLGlCQUFBO0FDUEoiLCJmaWxlIjoic3JjL2FwcC9uYXYvbmF2LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmxvZ2luLWNvbnRhaW5lcntcclxuICAgIG1heC13aWR0aDogNDAwcHg7XHJcbiAgICBtYXJnaW46IDYwcHggYXV0byAwO1xyXG59XHJcblxyXG4uZXJyb3J7XHJcbmNvbG9yOiB0b21hdG87XHJcbmZvbnQtc2l6ZTogMTJweDtcclxucGFkZGluZy10b3A6IDRweFxyXG59XHJcblxyXG4ucGhvdG8taW1ne1xyXG4gIG1hcmdpbjogMDtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgdG9wOiA1MCU7XHJcbiAgd2lkdGg6IDMwcHg7XHJcbn1cclxuXHJcbi5hdmF0YXIge1xyXG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbiAgd2lkdGg6IDUwcHg7XHJcbiAgaGVpZ2h0OiA1MHB4O1xyXG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICBtYXJnaW4tcmlnaHQ6IDE1cHg7XHJcbn1cclxuXHJcbi53ZWxjb21lVGV4dHtcclxuICBwYWRkaW5nLXJpZ2h0OiAxOHB4O1xyXG4gIGNvbG9yOndoaXRlO1xyXG59XHJcblxyXG4vLyBHb29nbGUgSWRlbnRpdHkgYW5kIEdvb2dsZSsgU2lnbiBpbiBidXR0b25zXHJcbi8vIGh0dHBzOi8vZGV2ZWxvcGVycy5nb29nbGUuY29tLysvYnJhbmRpbmctZ3VpZGVsaW5lc1xyXG5cclxuLmdvb2dsZS1idXR0b24ge1xyXG4gICAgaGVpZ2h0OiAzNXB4O1xyXG4gICAgYm9yZGVyLXdpZHRoOiAwO1xyXG4gICAgYmFja2dyb3VuZDogd2hpdGU7XHJcbiAgICBjb2xvcjogIzczNzM3MztcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XHJcbiAgICBib3gtc2hhZG93OiAxcHggMXB4IDBweCAxcHggcmdiYSgwLDAsMCwwLjA1KTtcclxuICAgIHRyYW5zaXRpb24tcHJvcGVydHk6IGJhY2tncm91bmQtY29sb3IsIGJveC1zaGFkb3c7XHJcbiAgICB0cmFuc2l0aW9uLWR1cmF0aW9uOiAxNTBtcztcclxuICAgIHRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlLWluLW91dDtcclxuICAgIHBhZGRpbmc6IDA7XHJcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xyXG5cclxuICAgICY6Zm9jdXMsXHJcbiAgICAmOmhvdmVyIHtcclxuICAgICAgYm94LXNoYWRvdzogMXB4IDRweCA1cHggMXB4IHJnYmEoMCwwLDAsMC4xKTtcclxuICAgIH1cclxuXHJcbiAgICAmOmFjdGl2ZSB7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNlNWU1ZTU7XHJcbiAgICAgIGJveC1zaGFkb3c6IG5vbmU7XHJcbiAgICAgIHRyYW5zaXRpb24tZHVyYXRpb246IDEwbXM7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAuZ29vZ2xlLWJ1dHRvbl9faWNvbiB7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG4gICAgbWFyZ2luOiA4cHggMCA4cHggOHB4O1xyXG4gICAgd2lkdGg6IDE4cHg7XHJcbiAgICBoZWlnaHQ6IDE4cHg7XHJcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gIH1cclxuXHJcbiAgLmdvb2dsZS1idXR0b25fX2ljb24tLXBsdXMge1xyXG4gICAgd2lkdGg6IDI3cHg7XHJcbiAgfVxyXG5cclxuICAuZ29vZ2xlLWJ1dHRvbl9fdGV4dCB7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG4gICAgcGFkZGluZzogMCAxOHB4O1xyXG4gICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICBmb250LWZhbWlseTogJ1JvYm90bycsYXJpYWwsc2Fucy1zZXJpZjtcclxuICB9XHJcblxyXG4gIC8vIEJvaWxlcnBsYXRlIHN0dWZmXHJcblxyXG4gIGh0bWwsIGJvZHkge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gIH1cclxuXHJcbiAgYm9keSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjBmMGYwO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICB9XHJcblxyXG4gIGJ1dHRvbiB+IGJ1dHRvbiB7XHJcbiAgICBtYXJnaW4tbGVmdDogMjBweDtcclxuICB9XHJcbiIsIi5sb2dpbi1jb250YWluZXIge1xuICBtYXgtd2lkdGg6IDQwMHB4O1xuICBtYXJnaW46IDYwcHggYXV0byAwO1xufVxuXG4uZXJyb3Ige1xuICBjb2xvcjogdG9tYXRvO1xuICBmb250LXNpemU6IDEycHg7XG4gIHBhZGRpbmctdG9wOiA0cHg7XG59XG5cbi5waG90by1pbWcge1xuICBtYXJnaW46IDA7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIHdpZHRoOiAzMHB4O1xufVxuXG4uYXZhdGFyIHtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgd2lkdGg6IDUwcHg7XG4gIGhlaWdodDogNTBweDtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICBtYXJnaW4tcmlnaHQ6IDE1cHg7XG59XG5cbi53ZWxjb21lVGV4dCB7XG4gIHBhZGRpbmctcmlnaHQ6IDE4cHg7XG4gIGNvbG9yOiB3aGl0ZTtcbn1cblxuLmdvb2dsZS1idXR0b24ge1xuICBoZWlnaHQ6IDM1cHg7XG4gIGJvcmRlci13aWR0aDogMDtcbiAgYmFja2dyb3VuZDogd2hpdGU7XG4gIGNvbG9yOiAjNzM3MzczO1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIGJveC1zaGFkb3c6IDFweCAxcHggMHB4IDFweCByZ2JhKDAsIDAsIDAsIDAuMDUpO1xuICB0cmFuc2l0aW9uLXByb3BlcnR5OiBiYWNrZ3JvdW5kLWNvbG9yLCBib3gtc2hhZG93O1xuICB0cmFuc2l0aW9uLWR1cmF0aW9uOiAxNTBtcztcbiAgdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb246IGVhc2UtaW4tb3V0O1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW4tdG9wOiAxMHB4O1xufVxuLmdvb2dsZS1idXR0b246Zm9jdXMsIC5nb29nbGUtYnV0dG9uOmhvdmVyIHtcbiAgYm94LXNoYWRvdzogMXB4IDRweCA1cHggMXB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcbn1cbi5nb29nbGUtYnV0dG9uOmFjdGl2ZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlNWU1ZTU7XG4gIGJveC1zaGFkb3c6IG5vbmU7XG4gIHRyYW5zaXRpb24tZHVyYXRpb246IDEwbXM7XG59XG5cbi5nb29nbGUtYnV0dG9uX19pY29uIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICBtYXJnaW46IDhweCAwIDhweCA4cHg7XG4gIHdpZHRoOiAxOHB4O1xuICBoZWlnaHQ6IDE4cHg7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbi5nb29nbGUtYnV0dG9uX19pY29uLS1wbHVzIHtcbiAgd2lkdGg6IDI3cHg7XG59XG5cbi5nb29nbGUtYnV0dG9uX190ZXh0IHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICBwYWRkaW5nOiAwIDE4cHg7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiLCBhcmlhbCwgc2Fucy1zZXJpZjtcbn1cblxuaHRtbCwgYm9keSB7XG4gIGhlaWdodDogMTAwJTtcbn1cblxuYm9keSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmMGYwZjA7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuXG5idXR0b24gfiBidXR0b24ge1xuICBtYXJnaW4tbGVmdDogMjBweDtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../services/auth/auth.service';\r\n\r\n/** Setup Component Links */\r\n@Component({\r\n  selector: 'app-nav',\r\n  templateUrl: './nav.component.html',\r\n  styleUrls: ['./nav.component.scss']\r\n})\r\n\r\n/**************************************************\r\n * @author Adam Chlebek and Colin Larson\r\n * @version 1.0\r\n * @description Creates Navigation Bar for all\r\n * components on the page.\r\n *************************************************/\r\nexport class NavComponent implements OnInit {\r\n  /***********************************************************\r\n   * @param auth authService\r\n   * @description Creates an instance of nav component.\r\n   *********************************************************/\r\n   constructor(public auth: AuthService) { }\r\n\r\n  /**\r\n   * Nav Component Initialization\r\n   */\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \".avatar {\\n  width: 10%;\\n  border-radius: 50%;\\n  margin-left: auto;\\n  margin-right: auto;\\n  display: block;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbmV0d29yay9DOlxcRGV2XFxoYXNoX21hcF93ZWJcXEhhc2hNYXAvc3JjXFxhcHBcXG5ldHdvcmtcXG5ldHdvcmsuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL25ldHdvcmsvbmV0d29yay5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFVBQUE7RUFDQSxrQkFBQTtFQUNBLGlCQUFBO0VBQ0Esa0JBQUE7RUFDQSxjQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9uZXR3b3JrL25ldHdvcmsuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYXZhdGFyIHtcclxuICAgIHdpZHRoOiAxMCU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICBtYXJnaW4tbGVmdDphdXRvO1xyXG4gICAgbWFyZ2luLXJpZ2h0OmF1dG87XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICB9IiwiLmF2YXRhciB7XG4gIHdpZHRoOiAxMCU7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIG1hcmdpbi1yaWdodDogYXV0bztcbiAgZGlzcGxheTogYmxvY2s7XG59Il19 */\"","import { Component, OnInit, ɵConsole, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material';\r\nimport { NetworkService } from './network.service';\r\nimport { Profile } from '../setup/models/profile.model';\r\nimport { DocumentSnapshot, AngularFirestore } from '@angular/fire/firestore';\r\nimport { SwiperOptions } from 'swiper';\r\nimport { SteamApp } from '../services/steam/models/steamApp.model';\r\nimport { ProfileService } from '../profile/profile.service';\r\nimport * as _ from 'lodash';\r\nimport { SwiperComponent } from 'ngx-useful-swiper';\r\nimport { NotificationService } from '../utility/notification/notification.service';\r\nimport { AuthService } from '../services/auth/auth.service';\r\nimport { SetupService } from '../setup/setup.service';\r\n\r\n\r\n/** Setup Component Links */\r\n@Component({\r\n  selector: 'app-network',\r\n  templateUrl: './network.component.html',\r\n  styleUrls: ['./network.component.scss']\r\n})\r\n\r\n/**************************************************\r\n * @author Adam Chlebek and Collin Larson\r\n * @version 1.0\r\n * @description Network component gets a list of profiles\r\n * based the users setup.\r\n *************************************************/\r\nexport class NetworkComponent implements OnInit {\r\n\r\n  /** View Swiper child */\r\n  @ViewChild('friendSwiper', { static: false }) friendSwiper: SwiperComponent;\r\n\r\n  /** Uid of profile */\r\n  private uid: string;\r\n\r\n  /** User Profile */\r\n  profile: Profile;\r\n\r\n  /** Profiles of network component */\r\n  profiles: Profile[];\r\n\r\n  /** Steam apps of profile */\r\n  steamApps: SteamApp[];\r\n\r\n  /** Config  of swiper */\r\n  config: SwiperOptions = {\r\n    pagination: { el: '.swiper-pagination', clickable: true },\r\n    navigation: {\r\n      nextEl: '.swiper-button-next',\r\n      prevEl: '.swiper-button-prev',\r\n    },\r\n    keyboard: true,\r\n    spaceBetween: 30\r\n  };\r\n\r\n\r\n  /******************************************************\r\n   * Creates an instance of network component.\r\n   * @param dialog material dialog component\r\n   * @param api Network Service api\r\n   * @param profileAPI Profile Service api\r\n   * @param notificationService notification service api\r\n   * @param auth auth api\r\n   * @param setupAPI setup api\r\n   * @param afs anguar firstore\r\n   ****************************************************/\r\n  constructor(\r\n    public dialog: MatDialog,\r\n    private api: NetworkService,\r\n    private profileAPI: ProfileService,\r\n    private notificationService: NotificationService,\r\n    private auth: AuthService,\r\n    private setupAPI: SetupService,\r\n    private afs: AngularFirestore) { }\r\n\r\n  /** Network Component Initialization */\r\n  ngOnInit() {\r\n    this.auth.user$.subscribe(u => {\r\n      this.uid  = u.uid;\r\n      this.getProfile();\r\n    });\r\n  }\r\n\r\n  /******************************************\r\n   * Gets profile from google firebase, and\r\n   * fills out the ngModule respectively.\r\n   *****************************************/\r\n  getProfile() {\r\n    // prof is a DocumentData, typing as any to get past typescript mismatch issue\r\n    this.setupAPI.getProfile(this.uid).subscribe((prof: any) => {\r\n      if (prof.exists) {\r\n        this.profile = prof.data();\r\n        this.findFriends();\r\n      } else {\r\n        this.notificationService.showErrorWithTimeout('Profile not found.', 'Error', 5000);\r\n      } // end of if profile exists\r\n    });\r\n  } // end of get profile\r\n\r\n  /*******************************\r\n   * Finds friends\r\n   ******************************/\r\n  findFriends() {\r\n    this.api.getProfiles(this.profile).subscribe((profiles$: any) => {\r\n\r\n      let profiles: Profile[] = [];\r\n      profiles$.docs.forEach((profile: DocumentSnapshot<Profile>) => {\r\n        if ((profile.id !== this.uid) && !_.find(this.profile.friends, {id: profile.id}) ) {\r\n          profiles.push(profile.data());\r\n        }\r\n      });\r\n\r\n      profiles.forEach((prof: Profile) => {\r\n        let apps = [];\r\n        this.profileAPI.getRegion(this.profile.regionId.toString()).subscribe((region: any) => {\r\n          prof._region = region.data();\r\n        });\r\n        this.profileAPI.getComm(this.profile.communicationPlatformId.toString()).subscribe((comm: any) => {\r\n          prof._communicationPlatform = comm.data();\r\n        });\r\n        this.profileAPI.getPlatform(this.profile.platformId.toString()).subscribe((platform: any) => {\r\n          prof._platform = platform.data();\r\n        });\r\n        prof.steamApps.forEach((appId) => {\r\n          this.profileAPI.getSteamApp(appId.toString()).subscribe((app: any) => {\r\n            apps.push(app.data());\r\n          });\r\n        });\r\n        prof._steamAppChips = apps;\r\n      });\r\n      this.profiles = profiles;\r\n    });\r\n  }\r\n\r\n  /******************************************\r\n   * Adds friend\r\n   * @param prof profile to be added\r\n   * @param index index of swiper\r\n   *****************************************/\r\n  addFriend(prof: Profile, index: number) {\r\n    if (this.profile.friends == null) {\r\n      this.profile.friends = [];\r\n    }\r\n\r\n    this.profile.friends.push(this.afs.doc(`profiles/${prof.uid}`).ref);\r\n\r\n    this.setupAPI.saveProfile(this.profile).then((val: any) => {\r\n      this.friendSwiper.swiper.removeSlide(index);\r\n      this.notificationService.showSuccessWithTimeout('Friend added successfully.', 'Success.', 1000);\r\n    });\r\n  }\r\n\r\n  /****************************************\r\n   * Declines network component\r\n   * @param prof profile to be removed\r\n   * @param index index of profile\r\n   **************************************/\r\n  decline(prof: Profile, index: number) {\r\n    this.friendSwiper.swiper.removeSlide(index);\r\n  }\r\n\r\n  /**************************************\r\n   * Determines whether day selected is\r\n   * @param id => day id\r\n   * @returns boolean\r\n   *************************************/\r\n  isDaySelected(profile: Profile, id: number) {\r\n    return _.includes(profile.days, id);\r\n  } // end of isDaySelected\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { Profile } from '../setup/models/profile.model';\r\n\r\n/** Defines Injectable */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\n/**************************************************\r\n * @author Adam Chlebek and Collin Larson\r\n * @version 1.0\r\n * @description Network service gets a list of profiles\r\n * based the users setup.\r\n *************************************************/\r\nexport class NetworkService {\r\n\r\n  /*********************************************\r\n   * Creates an instance of network service.\r\n   * @param afs AngularFireStore\r\n   *******************************************/\r\n  constructor(private afs: AngularFirestore) { }\r\n\r\n  /*************************************\r\n   * Gets profiles\r\n   * @param prof user profile\r\n   * @returns list of similar profiles\r\n   ************************************/\r\n  public getProfiles(prof: Profile) {\r\n    const profiles$ = this.afs.collection('profiles', ref => ref\r\n      .where('regionId', '==', prof.regionId)\r\n      .where('platformId', '==', prof.platformId)\r\n      .where('communicationPlatformId', '==', prof.communicationPlatformId));\r\n    return profiles$.get();\r\n  }\r\n\r\n}\r\n","module.exports = \".avatar {\\n  vertical-align: middle;\\n  width: 25%;\\n  height: 25%;\\n  border-radius: 10%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHJvZmlsZS9DOlxcRGV2XFxoYXNoX21hcF93ZWJcXEhhc2hNYXAvc3JjXFxhcHBcXHByb2ZpbGVcXHByb2ZpbGUuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3Byb2ZpbGUvcHJvZmlsZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLHNCQUFBO0VBQ0EsVUFBQTtFQUNBLFdBQUE7RUFDQSxrQkFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvcHJvZmlsZS9wcm9maWxlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmF2YXRhciB7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG4gICAgd2lkdGg6IDI1JTtcclxuICAgIGhlaWdodDogMjUlO1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTAlO1xyXG4gIH0iLCIuYXZhdGFyIHtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgd2lkdGg6IDI1JTtcbiAgaGVpZ2h0OiAyNSU7XG4gIGJvcmRlci1yYWRpdXM6IDEwJTtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { NotificationService } from '../utility/notification/notification.service';\r\nimport { SetupService } from '../setup/setup.service';\r\nimport { AuthService } from '../services/auth/auth.service';\r\nimport { Observable } from 'rxjs';\r\nimport { Day } from '../setup/models/days.model';\r\nimport { CommunicationPlatform } from '../setup/models/communication-platform.model';\r\nimport { Platform } from '../setup/models/platform.model';\r\nimport { Region } from '../setup/models/region.model';\r\nimport { Profile } from '../setup/models/profile.model';\r\nimport { SteamApp } from '../services/steam/models/steamApp.model';\r\n\r\nimport * as _ from 'lodash';\r\nimport { ProfileService } from './profile.service';\r\n\r\n/** Setup Component Links */\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.scss']\r\n})\r\n\r\n/**************************************************\r\n * @author Collin Larson\r\n * @version 1.0\r\n * @description Profile Component class handles the\r\n * front end logic of loading the user profile.\r\n *************************************************/\r\nexport class ProfileComponent implements OnInit {\r\n  /** FromSaved represents if a user is comming from the setup page after a save */\r\n  fromSaved: any;\r\n\r\n  /** uid represents a users id */\r\n  private uid: string;\r\n\r\n  /** an array of steam apps */\r\n  steamApps: SteamApp[];\r\n\r\n  /** observable of day array */\r\n  days: Observable<Day[]>;\r\n\r\n  /** A region */\r\n  region: Region;\r\n\r\n  /** A communication platform */\r\n  comm: CommunicationPlatform;\r\n\r\n  /** A platform */\r\n  platform: Platform;\r\n\r\n  /** preloading a default profile */\r\n  profile: Profile = {uid: '', displayName: '', regionId: null, platformId: null, communicationPlatformId: null,\r\n  bio: '', days: null, steamApps: null, _steamAppChips: null, friends: null, _friends: null, photoURL: null,\r\n  _region: null, _communicationPlatform: null, _platform: null};\r\n  /** a boolean promise to check if data has come back from firebase */\r\n  isLoaded: Promise<boolean>;\r\n\r\n  /** Check if user has a saved profile */\r\n  noProfile = false;\r\n\r\n\r\n\r\n  /***********************************************************\r\n   * @param route activated route\r\n   * @param notificationService ngx toaster service\r\n   * @param auth auth service\r\n   * @param setupAPI setup api\r\n   * @param api profile api\r\n   * @description Creates an instance of profile component.\r\n   *********************************************************/\r\n  constructor(private route: ActivatedRoute,\r\n              private notificationService: NotificationService,\r\n              private auth: AuthService,\r\n              private setupAPI: SetupService,\r\n              private api: ProfileService) { }\r\n\r\n  /****************************************\r\n   * Component controller initialization\r\n   ***************************************/\r\n  ngOnInit() {\r\n    this.route.queryParams.subscribe(params => {\r\n      this.fromSaved = params['saved'];\r\n      if (this.fromSaved === 'true') {\r\n        // If Save is successfull\r\n        this.notificationService.showSuccessWithTimeout('Profile saved successfully.', 'Success.', 5000);\r\n      }\r\n    });\r\n    this.auth.user$.subscribe(u => {\r\n      this.uid  = u.uid;\r\n      this.getProfile();\r\n    });\r\n  } // end of ngOnInit\r\n\r\n  /******************************************\r\n   * Gets profile from google firebase, and\r\n   * fills out the ngModule respectively.\r\n   *****************************************/\r\n  getProfile() {\r\n    // prof is a DocumentData, typing as any to get past typescript mismatch issue\r\n    this.setupAPI.getProfile(this.uid).subscribe((prof: any) => {\r\n      if (prof.exists) {\r\n        this.profile = prof.data();\r\n        let friends: Profile[] = [];\r\n        let sa: SteamApp[] = [];\r\n        this.profile.steamApps.forEach((appId) => {\r\n          this.api.getSteamApp(appId.toString()).subscribe((app: any) => {\r\n            sa.push(app.data());\r\n          });\r\n        });\r\n        this.steamApps = sa;\r\n        this.api.getRegion(this.profile.regionId.toString()).subscribe((region: any) => {\r\n          this.region = region.data();\r\n        });\r\n        this.api.getComm(this.profile.communicationPlatformId.toString()).subscribe((comm: any) => {\r\n          this.comm = comm.data();\r\n        });\r\n        this.api.getPlatform(this.profile.platformId.toString()).subscribe((platform: any) => {\r\n          this.platform = platform.data();\r\n        });\r\n        _.forEach(this.profile.friends, (profRef) => {\r\n          profRef.get().then((friendSnapShot: any) => {\r\n            if (friendSnapShot.exists) {\r\n              friends.push(friendSnapShot.data());\r\n            }\r\n          });\r\n        });\r\n        this.profile._friends = friends;\r\n        this.isLoaded = Promise.resolve(true);\r\n      } else {\r\n        this.notificationService.showErrorWithTimeout('Profile not found.', 'Error', 5000);\r\n        this.noProfile = true;\r\n      } // end of if profile exists\r\n    });\r\n  } // end of get profile\r\n\r\n  /**************************************\r\n   * Determines whether day selected is\r\n   * @param id => day id\r\n   * @returns boolean\r\n   *************************************/\r\n  isDaySelected(id: number) {\r\n    return _.includes(this.profile.days, id);\r\n  } // end of isDaySelected\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\n\r\n/** Defines Injectable */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n/**************************************************\r\n * @author Collin Larson\r\n * @version 1.0\r\n * @description Profile Service handles API calls\r\n * to firebase back end\r\n *************************************************/\r\nexport class ProfileService {\r\n\r\n  /********************************************\r\n   * Creates an instance of profile service.\r\n   * @param afs AngularFireStore service\r\n   *******************************************/\r\n  constructor(private afs: AngularFirestore) { }\r\n\r\n  /***************************************\r\n   * Gets region\r\n   * @param regionId the region id\r\n   * @returns an observable of regions\r\n   **************************************/\r\n  public getRegion(regionId: string) {\r\n    const regionRef = this.afs.doc(`regions/${regionId}`);\r\n    return regionRef.get();\r\n  }\r\n\r\n  /*****************************************\r\n   * Gets platform\r\n   * @param platformId the platform id\r\n   * @returns an observable of platforms\r\n   ****************************************/\r\n  public getPlatform(platformId: string) {\r\n    const platormRef = this.afs.doc(`platform/${platformId}`);\r\n    return platormRef.get();\r\n  }\r\n\r\n  /***************************************\r\n   * Gets comm\r\n   * @param commId the comm id\r\n   * @returns an observable of comms\r\n   **************************************/\r\n  public getComm(commId: string) {\r\n    const commRef = this.afs.doc(`communicationPlatform/${commId}`);\r\n    return commRef.get();\r\n  }\r\n\r\n  /******************************************\r\n   * Gets steam app\r\n   * @param appId the app id\r\n   * @returns an observable of steam apps\r\n   *****************************************/\r\n  public getSteamApp(appId: string) {\r\n    const appRef = this.afs.doc(`steamGames/${appId}`);\r\n    return appRef.get();\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlbGVhc2UtcnVicmljL3JlbGVhc2UtcnVicmljLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n/** Setup Component Links */\r\n@Component({\r\n  selector: 'app-release-rubric',\r\n  templateUrl: './release-rubric.component.html',\r\n  styleUrls: ['./release-rubric.component.scss']\r\n})\r\nexport class ReleaseRubricComponent implements OnInit {\r\n\r\n  /**\r\n   * Creates an instance of release rubric component.\r\n   */\r\n  constructor() { }\r\n\r\n  /**\r\n   * Release Rubric Component Initialization\r\n   */\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { auth } from 'firebase/app';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport {\r\n  AngularFirestore,\r\n  AngularFirestoreDocument\r\n} from '@angular/fire/firestore';\r\nimport { Observable, of } from 'rxjs';\r\nimport { switchMap, first } from 'rxjs/operators';\r\nimport { User } from '../user.model';\r\n\r\n/** Defines Injectable */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n/************************************************\r\n * @author Collin larson\r\n * @version 1.0\r\n * @class AuthService\r\n * @description API service for managing users\r\n ***********************************************/\r\nexport class AuthService {\r\n  /** User$  of auth service */\r\n  user$: Observable<User>;\r\n\r\n  /*****************************************************\r\n   * @param afAuth Angular Fire Auth service\r\n   * @param afs Angular Firestore API service\r\n   * @param router Angular router service\r\n   * @description Creates an instance of auth service.\r\n   ****************************************************/\r\n  constructor(\r\n    private afAuth: AngularFireAuth,\r\n    private afs: AngularFirestore,\r\n    private router: Router\r\n  ) {\r\n    this.user$ = this.afAuth.authState.pipe(\r\n      switchMap(user => {\r\n        if (user) {\r\n          return this.afs.doc<User>(`users/${user.uid}`).valueChanges();\r\n        } else {\r\n          return of(null);\r\n        }\r\n      })\r\n    );\r\n  } // end of constructor\r\n\r\n  /*****************************\r\n   * Gets logged in user\r\n   * @returns promise of user\r\n   ****************************/\r\n  getUser() {\r\n    return (localStorage.getItem('user') === null) ? \r\n      this.user$.pipe(first()).toPromise() :\r\n      JSON.parse(localStorage.getItem('user'));\r\n  }\r\n\r\n  /******************************\r\n   * Google signin method\r\n   * @returns a void promise\r\n   *****************************/\r\n  public async googleSignin() {\r\n    const provider   = new auth.GoogleAuthProvider();\r\n    const credential = await this.afAuth.auth.signInWithPopup(provider);\r\n    return this.updateUserData(credential.user);\r\n  } // end of signin\r\n\r\n  /********************************\r\n   * Signs a user out\r\n   * @returns route to about page\r\n   *******************************/\r\n  public async signOut() {\r\n    await this.afAuth.auth.signOut();\r\n    localStorage.clear();\r\n    return this.router.navigate(['/about']);\r\n  } // end of signout\r\n\r\n  /**********************************\r\n   * Updates user data\r\n   * @param user the logged in user\r\n   * @returns an obserable of user\r\n   ********************************/\r\n  private updateUserData(user) {\r\n    // Sets user data to firestore on login\r\n    const userRef: AngularFirestoreDocument<User> = this.afs.doc(`users/${user.uid}`);\r\n\r\n    const data = {\r\n      uid         : user.uid,\r\n      email       : user.email,\r\n      displayName : user.displayName,\r\n      photoURL    : user.photoURL\r\n    };\r\n\r\n    localStorage.setItem('user', JSON.stringify(data));\r\n\r\n    return userRef.set(data, { merge: true });\r\n\r\n  } // end of upDateUserData\r\n\r\n} // end of auth service\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NldHVwL3NldHVwLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { Validators, FormControl } from '@angular/forms';\r\nimport {COMMA, ENTER} from '@angular/cdk/keycodes';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Region } from './models/region.model';\r\nimport { Observable } from 'rxjs';\r\nimport { SetupService } from './setup.service';\r\nimport { Platform } from './models/platform.model';\r\nimport { CommunicationPlatform } from './models/communication-platform.model';\r\nimport { Day } from './models/days.model';\r\nimport {MatAutocompleteSelectedEvent, MatAutocomplete} from '@angular/material/autocomplete';\r\nimport { SteamApp } from '../services/steam/models/steamApp.model';\r\nimport { MatChipInputEvent } from '@angular/material/chips';\r\nimport { App } from './models/app.model';\r\nimport { startWith, map, timeout } from 'rxjs/operators';\r\nimport * as _ from 'lodash';\r\nimport { Profile } from './models/profile.model';\r\nimport { AuthService } from '../services/auth/auth.service';\r\nimport { NotificationService } from '../utility/notification/notification.service';\r\nimport { User } from '../services/user.model';\r\n\r\n/** Setup Component Links */\r\n@Component({\r\n  selector: 'app-setup',\r\n  templateUrl: './setup.component.html',\r\n  styleUrls: ['./setup.component.scss']\r\n})\r\n/**************************************************\r\n * @author Collin Larson\r\n * @version 1.0\r\n * @description Setup Component class handles the\r\n * front end logic of saving the user profile.\r\n *************************************************/\r\nexport class SetupComponent implements OnInit {\r\n\r\n  /** Material Chip Variable */\r\n  visible = true;\r\n\r\n  /** Material Chip Variable */\r\n  selectable = true;\r\n\r\n  /** Material Chip Variable */\r\n  removable = true;\r\n\r\n  /** Material Chip Variable */\r\n  addOnBlur = false;\r\n\r\n  /** Material Chip Key codes */\r\n  separatorKeysCodes: number[] = [ENTER, COMMA];\r\n\r\n  /** New FormControl */\r\n  appCtrl = new FormControl();\r\n\r\n  /** observable of string array */\r\n  filteredApps: Observable<SteamApp[]>;\r\n\r\n  /** selected steam app array */\r\n  selectedApps: any[] = [];\r\n\r\n  /** all steam apps array */\r\n  steamApps: SteamApp[];\r\n\r\n  /** watching html input */\r\n  @ViewChild('appInput', {static: false}) appInput: ElementRef<HTMLInputElement>;\r\n\r\n  /** watching material input */\r\n  @ViewChild('auto', {static: false}) matAutocomplete: MatAutocomplete;\r\n\r\n  /** default steam ID */\r\n  steamID = '';\r\n\r\n  /** invalid boolean */\r\n  invalid = true;\r\n\r\n  /** observable of region array */\r\n  regions: Observable<Region[]>;\r\n\r\n  /** observable of platform array */\r\n  platforms: Observable<Platform[]>;\r\n\r\n  /** observable of day array */\r\n  days: Observable<Day[]>;\r\n\r\n  /** observable of comms array */\r\n  comms: Observable<CommunicationPlatform[]>;\r\n\r\n  /** preloading a default profile */\r\n  profile: Profile = { uid: '', displayName: '', regionId: null, platformId: null,\r\n    communicationPlatformId: null, bio: '', days: null, steamApps: null, _steamAppChips: null,\r\n    friends: null, _friends: null, photoURL: null,\r\n    _region: null, _communicationPlatform: null, _platform: null };\r\n\r\n  /** uid represents a users id */\r\n  private uid: string;\r\n\r\n  /** url of profile photo */\r\n  private photoURL: string;\r\n\r\n  private user: User;\r\n\r\n  isLoaded = false;\r\n\r\n  /***************************************************\r\n   * Creates an instance of setup component.\r\n   * @param api setup service api\r\n   * @param auth suth service\r\n   * @param notificationService ngx toaster service\r\n   **************************************************/\r\n  constructor(private api: SetupService, private auth: AuthService, private notificationService: NotificationService) {\r\n    // this.auth.user$.subscribe(u => {\r\n    //   this.uid = u.uid;\r\n    //   this.profile.uid = this.uid;\r\n    //   this.photoURL = u.photoURL;\r\n    //   this.getProfile();\r\n    // });\r\n    \r\n  }\r\n\r\n  /****************************************\r\n   * Component controller initialization\r\n   ***************************************/\r\n  ngOnInit() {\r\n    this.getDropdowns();\r\n    this.getUser();\r\n  }\r\n\r\n  async getUser() {\r\n    this.user = await this.auth.getUser();\r\n    this.uid = this.user.uid;\r\n    this.profile.uid = this.uid;\r\n    this.photoURL = this.user.photoURL;\r\n    this.getProfile();\r\n  }\r\n\r\n  /***************************\r\n   * Gets users profile\r\n   **************************/\r\n  getProfile() {\r\n    // prof is a DocumentData, typing as any to get past typescript mismatch issue\r\n    this.api.getProfile(this.uid).subscribe((prof: any) => {\r\n      if (prof.exists) {\r\n        this.profile = prof.data();\r\n        let sa = this.steamApps;\r\n        let ssa = [];\r\n        _.forEach(this.profile.steamApps, (key) => {\r\n          ssa.push(_.find(sa, ['appid', key]));\r\n        });\r\n        this.selectedApps = ssa;\r\n      } else {\r\n        // doc.data() will be undefined in this case\r\n      }\r\n    });\r\n  }\r\n\r\n  /*******************************************\r\n   * Gets regions, platforms, days, comms,\r\n   * and app dropdowns\r\n   *****************************************/\r\n  async getDropdowns() {\r\n    // limit the 100+ document calls to get steam games by storing in local storage.\r\n    if (localStorage.getItem('steam-games') === null) {\r\n      await this.api.getFireSteamGameList().subscribe((sapp) => {\r\n        this.steamApps = sapp;\r\n        localStorage.setItem('steam-games', JSON.stringify(this.steamApps));\r\n      });\r\n    } else {\r\n      this.steamApps = JSON.parse(localStorage.getItem('steam-games'));        \r\n    }\r\n\r\n    this.filteredApps = this.appCtrl.valueChanges.pipe(\r\n      startWith(null),\r\n      map((steamApp: App | null) => steamApp ? this._filter(steamApp) : this.steamApps.slice()));\r\n\r\n    this.regions = this.api.getRegions();\r\n    this.platforms = this.api.getPlatforms();\r\n    this.days = this.api.getDays();\r\n    this.comms = this.api.getComms();\r\n\r\n    this.isLoaded = true;\r\n  }\r\n\r\n  /******************************************\r\n   * Saves user's profile & transfers page\r\n   *****************************************/\r\n  save() {\r\n    this.profile.steamApps = _.map(this.selectedApps, 'appid');\r\n    this.profile.photoURL = this.photoURL;\r\n    this.api.saveProfile(this.profile).then((t) => {\r\n      this.notificationService.showSuccessWithTimeout('Profile saved successfully.', 'Success.', 5000);\r\n      window.location.href = '/profile?saved=true';\r\n    });\r\n  }\r\n\r\n  /****************************************\r\n   * Determines whether day selected is\r\n   * @param id day id\r\n   * @returns boolean day selected\r\n   ***************************************/\r\n  isDaySelected(id: number) {\r\n    return _.includes(this.profile.days, id);\r\n  }\r\n\r\n  /***************************************\r\n   * Days change event handler\r\n   * @param event js event\r\n   * @param d day obj\r\n   **************************************/\r\n  dayChange(event, d: Day) {\r\n    if (event.target.checked) {\r\n      if (this.profile.days == null) {\r\n        this.profile.days = [];\r\n      }\r\n      this.profile.days.push(d.id);\r\n    } else {\r\n      // this.profile.days.slice(this.profile.days.indexOf(d.id),1);\r\n      this.profile.days = _.remove(this.profile.days, (dayId) => {\r\n        return (dayId !== d.id);\r\n      });\r\n    }\r\n  }\r\n\r\n  /****************************************\r\n   * Add App event handler\r\n   * @param event js event\r\n   ***************************************/\r\n  add(event: MatChipInputEvent): void {\r\n    // Add app only when MatAutocomplete is not open\r\n    // To make sure this does not conflict with OptionSelected Event\r\n    if (!this.matAutocomplete.isOpen) {\r\n      // do nothing user cannot add games\r\n    }\r\n  }\r\n\r\n  /************************************************\r\n   * Removes steam app from selected list\r\n   * @param game steam app obj\r\n   ***********************************************/\r\n  remove(game: App): void {\r\n    const index = this.selectedApps.indexOf(game);\r\n\r\n    if (index >= 0) {\r\n      this.selectedApps.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  /*****************************************\r\n   * Selected app event handler\r\n   * @param event matieral event\r\n   ****************************************/\r\n  selected(event: MatAutocompleteSelectedEvent): void {\r\n    this.selectedApps.push(event.option.value);\r\n    this.appInput.nativeElement.value = '';\r\n    this.appCtrl.setValue(null);\r\n  }\r\n\r\n  /**********************************************\r\n   * Filters input text from app list\r\n   * @param text inputted filter text\r\n   * @returns filtered list of steam apps\r\n   *********************************************/\r\n  private _filter(text: any): SteamApp[] {\r\n    const ga  = this.selectedApps;\r\n    const list = _.filter(this.steamApps, (g: SteamApp) => {\r\n      return _.findIndex(ga, {'appid': g.appid}) === -1;\r\n    });\r\n\r\n    const results = text ? list.filter(this.createFilterFor(text)) : list.filter(this.createFilterFor(''));\r\n    return results;\r\n  }\r\n\r\n  /***********************************************\r\n   * Creating list based on user input\r\n   * @param query inputted filter text\r\n   * @returns filtered list of steam apps\r\n   **********************************************/\r\n  public createFilterFor(query: string) {\r\n    const lowerCaseQuery = query.toString().toLowerCase();\r\n\r\n    return function filterFn(app: SteamApp) {\r\n      return (app.name.toString().toLowerCase().indexOf(lowerCaseQuery) === 0);\r\n    };\r\n  }\r\n\r\n  /*********************************\r\n   * Create ms delay\r\n   * @param ms milli second\r\n   * @returns a timeout promise\r\n   ********************************/\r\n  delay(ms: number) {\r\n    return new Promise( resolve => setTimeout(resolve, ms) );\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport { AngularFirestore, AngularFirestoreDocument, AngularFirestoreCollection } from '@angular/fire/firestore';\r\nimport { Region } from './models/region.model';\r\nimport { Platform } from './models/platform.model';\r\nimport { Day } from './models/days.model';\r\nimport { CommunicationPlatform } from './models/communication-platform.model';\r\nimport { SteamApp } from '../services/steam/models/steamApp.model';\r\nimport { Profile } from './models/profile.model';\r\n\r\n/** Defines Injectable */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n/**************************************************\r\n * @author Collin Larson\r\n * @version 1.0\r\n * @description Setup Service class handles the\r\n * API methods to get profile options\r\n *************************************************/\r\nexport class SetupService {\r\n\r\n  /** Region collection */\r\n  regionCollection: AngularFirestoreCollection<Region>;\r\n\r\n  /** Platform collection */\r\n  platformCollection: AngularFirestoreCollection<Platform>;\r\n\r\n  /** Days collection */\r\n  daysCollection: AngularFirestoreCollection<Day>;\r\n\r\n  /** Comms collection */\r\n  commsCollection: AngularFirestoreCollection<CommunicationPlatform>;\r\n\r\n  /** Steam App collection */\r\n  steamAppCollection: AngularFirestoreCollection<SteamApp>;\r\n\r\n  /***********************************************************\r\n   * @param afs Angular Fire Store\r\n   * @param http Http Client\r\n   * @description Creates an instance of setup service.\r\n   **********************************************************/\r\n  constructor(private afs: AngularFirestore, private http: HttpClient) { }\r\n\r\n  /****************************************\r\n   * Gets regions\r\n   * @returns an observable of regions\r\n   ***************************************/\r\n  public getRegions() {\r\n    this.regionCollection = this.afs.collection('regions', ref => {\r\n      return ref.orderBy('name', 'desc');\r\n    });\r\n    return this.regionCollection.valueChanges();\r\n  }\r\n\r\n  /***************************************\r\n   * Gets days\r\n   * @returns an observable of days\r\n   **************************************/\r\n  public getDays() {\r\n    this.daysCollection = this.afs.collection('days');\r\n    return this.daysCollection.valueChanges();\r\n  }\r\n\r\n  /****************************************\r\n   * Gets platforms\r\n   * @returns an observable of platforms\r\n   ***************************************/\r\n  public getPlatforms() {\r\n    this.platformCollection = this.afs.collection('platform');\r\n    return this.platformCollection.valueChanges();\r\n  }\r\n\r\n  /***************************************\r\n   * Gets comms\r\n   * @returns an observable of comms\r\n   **************************************/\r\n  public getComms() {\r\n    this.commsCollection = this.afs.collection('communicationPlatform');\r\n    return this.commsCollection.valueChanges();\r\n  }\r\n\r\n  /******************************************\r\n   * Gets fire steam game list\r\n   * @returns an observable of steam games\r\n   *****************************************/\r\n  public getFireSteamGameList() {\r\n    this.steamAppCollection = this.afs.collection('steamGames');\r\n    return this.steamAppCollection.valueChanges();\r\n  }\r\n\r\n  /************************************************\r\n   * Gets profile\r\n   * @param uid user id\r\n   * @returns an observable of a user profile\r\n   ***********************************************/\r\n  public getProfile(uid: string) {\r\n    const profileRef = this.afs.doc(`profiles/${uid}`);\r\n    return profileRef.get();\r\n  }\r\n\r\n  /************************************************\r\n   * Saves profile\r\n   * @param profile user profile to be saved\r\n   * @returns an observable of a user profile\r\n   ***********************************************/\r\n  public saveProfile(profile: Profile) {\r\n    // Sets user data to firestore on login\r\n    const userRef = this.afs.doc(`profiles/${profile.uid}`);\r\n    return userRef.set({\r\n      uid: profile.uid,\r\n      displayName: profile.displayName,\r\n      regionId: profile.regionId,\r\n      platformId: profile.platformId,\r\n      communicationPlatformId: profile.communicationPlatformId,\r\n      days: profile.days,\r\n      steamApps: profile.steamApps,\r\n      bio: profile.bio,\r\n      photoURL: profile.photoURL,\r\n      friends: profile.friends\r\n    });\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n/** Defines Injectable */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\n/**********************************************\r\n * @class NotificationService\r\n * @author Collin Larson\r\n * @version 1.0\r\n * @description NGX Toaster service to manage\r\n * * notifcations\r\n *********************************************/\r\nexport class NotificationService {\r\n\r\n  /***********************************************\r\n   * Creates an instance of notification service.\r\n   * @param toastr toaster service\r\n   ***********************************************/\r\n  constructor(private toastr: ToastrService) { }\r\n\r\n  /************************************\r\n   * Shows success toastr\r\n   * @param message displayed message\r\n   * @param title displayed title\r\n   ***********************************/\r\n  showSuccess(message, title) {\r\n    this.toastr.success(message, title, {\r\n      disableTimeOut: true\r\n    });\r\n  }\r\n\r\n  /**************************************\r\n   * Shows success with timeout\r\n   * @param message displayed message\r\n   * @param title displayed title\r\n   * @param timespan time in ms\r\n   ************************************/\r\n  showSuccessWithTimeout(message, title, timespan) {\r\n    this.toastr.success(message, title , {\r\n      timeOut       :  timespan,\r\n      positionClass : 'toast-top-center',\r\n      closeButton   : true,\r\n    });\r\n  }\r\n\r\n  /**************************************\r\n   * Shows error with timeout\r\n   * @param message displayed message\r\n   * @param title displayed title\r\n   * @param timespan time in ms\r\n   ************************************/\r\n  showErrorWithTimeout(message, title, timespan) {\r\n    this.toastr.error(message, title, {\r\n      timeOut       :  timespan,\r\n      positionClass : 'toast-top-center',\r\n      closeButton   : true,\r\n    });\r\n  }\r\n\r\n  /*************************************\r\n   * Shows htmlmessage\r\n   * @param message displayed message\r\n   * @param title  displayed title\r\n   ***********************************/\r\n  showHTMLMessage(message, title) {\r\n    this.toastr.success(message, title, {\r\n      enableHtml : true\r\n    });\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\n/**\r\n * Sets Production Environment to Disabled\r\n */\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}