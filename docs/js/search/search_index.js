var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/components/AboutComponent.html",[0,0.599,1,0.975]],["body/components/AboutComponent.html",[0,1.078,1,1.411,2,1.344,3,0.208,4,0.208,5,1.058,6,1.058,7,1.058,8,1.058,9,0.18,10,1.973,11,0.31,12,1.486,13,1.879,14,1.579,15,2.057,16,1.058,17,2.646,18,1.296,19,1.579,20,4.206,21,1.579,22,3.515,23,0.208,24,1.063,25,2.281,26,1.272,27,0.983,28,2.355,29,1.063,30,1.063,31,2.355,32,2.065,33,0.712,34,0.03,35,0.975,36,0.437,37,0.518,38,0.712,39,1.741,40,1.741,41,0.712,42,0.712,43,2.248,44,2.355,45,2.355,46,4.181,47,0.208,48,0.562,49,3.037,50,3.827,51,3.037,52,2.073,53,4.076,54,3.515,55,2.289,56,2.945,57,2.945,58,3.827,59,2.945,60,2.945,61,2.945,62,2.945,63,2.569,64,2.493,65,2.945,66,2.569,67,2.569,68,2.945,69,2.945,70,2.096,71,2.945,72,2.569,73,1.783,74,1.763,75,2.065,76,3.41,77,2.569,78,1.344,79,2.289,80,2.569,81,3.41,82,0.983,83,2.945,84,1.242,85,3.41,86,2.065,87,2.167,88,2.569,89,2.065,90,2.569,91,0.021,92,2.569,93,3.037,94,2.945,95,2.945,96,2.945,97,2.945,98,2.945,99,2.289,100,1.719,101,3.515,102,3.515,103,2.945,104,2.569,105,1.931,106,2.945,107,2.945,108,2.945,109,1.579,110,2.945,111,2.945,112,2.945,113,2.945,114,2.569,115,3.515,116,3.515,117,3.515,118,3.515,119,3.515,120,3.515,121,3.515,122,3.515,123,3.515,124,3.515,125,3.515,126,3.515,127,3.515,128,3.515,129,3.515,130,3.515,131,3.515,132,3.515,133,3.515,134,3.515,135,3.515,136,2.945,137,3.515,138,2.945,139,2.945,140,2.569,141,2.289,142,1.063,143,0.983,144,0.9,145,1.579,146,1.058,147,2.096,148,1.058,149,0.493,150,1.058,151,0.77,152,1.058,153,0.77,154,0.975,155,1.058,156,0.77,157,1.058,158,0.77,159,1.058,160,0.712,161,1.058,162,0.712,163,1.058,164,0.712,165,1.058,166,0.712,167,1.058,168,1.058,169,0.011,170,0.011]],["title/interfaces/App.html",[18,0.709,171,0.499]],["body/interfaces/App.html",[3,0.404,4,0.404,9,0.351,11,0.404,18,1.421,23,0.404,34,0.03,47,0.404,91,0.025,149,0.895,169,0.021,170,0.021,171,0.853,172,1.618,173,3.837,174,1.618,175,1.317,176,3.608,177,2.45,178,0.697,179,1.803,180,1.79]],["title/components/AppComponent.html",[0,0.599,151,1.054]],["body/components/AppComponent.html",[0,1.121,1,1.11,2,1.834,3,0.324,4,0.324,5,1.649,6,1.649,7,1.649,8,1.649,9,0.281,11,0.324,12,1.297,13,2.565,16,1.649,17,2.881,18,1.427,19,2.156,21,2.156,23,0.324,27,1.027,34,0.031,36,0.891,37,0.807,47,0.324,48,0.876,49,3.125,52,1.403,74,1.297,91,0.022,105,1.986,144,1.403,145,2.156,146,1.649,147,2.548,148,1.649,149,0.673,150,1.649,151,1.853,152,1.649,153,1.199,154,1.519,155,1.649,156,1.199,157,1.649,158,1.199,159,1.649,160,1.11,161,1.649,162,1.11,163,1.649,164,1.11,165,1.649,166,1.11,167,1.649,168,1.649,169,0.017,170,0.017,175,1.146,178,0.464,180,1.11,181,3.074,182,3.482,183,2.347,184,5.346,185,4.798,186,4.751,187,2.39,188,2.39,189,3.67,190,3.67,191,2.156]],["title/modules/AppModule.html",[192,1.723,193,2.099]],["body/modules/AppModule.html",[1,1.626,3,0.224,4,0.224,9,0.194,11,0.224,18,0.558,34,0.031,36,1.197,37,0.558,47,0.224,48,0.605,52,0.969,74,0.896,75,1.489,78,0.969,91,0.017,100,1.24,109,1.139,144,0.969,151,1.979,153,1.757,154,1.049,156,1.757,158,1.757,160,1.626,162,1.626,164,1.626,166,1.626,169,0.012,170,0.012,176,1.489,192,2.347,193,4.22,194,1.489,195,1.651,196,3.68,197,3.21,198,4.05,199,1.853,200,2.124,201,2.124,202,2.124,203,2.124,204,3.159,205,3.11,206,2.124,207,1.24,208,1.853,209,2.714,210,3.712,211,4.05,212,3.712,213,3.11,214,1.853,215,2.417,216,2.535,217,2.535,218,2.417,219,2.535,220,2.535,221,3.712,222,1.651,223,2.124,224,3.712,225,3.712,226,2.124,227,2.535,228,2.124,229,3.712,230,1.355,231,3.712,232,2.535,233,3.712,234,1.853,235,2.124,236,2.535,237,2.124,238,3.712,239,2.124,240,3.712,241,2.535,242,1.651,243,2.124,244,2.535,245,2.181,246,1.853,247,2.124,248,2.124,249,3.712,250,3.712,251,3.712,252,3.712,253,3.712,254,3.712,255,3.712,256,3.712,257,3.712,258,3.712,259,3.712,260,3.712,261,1.853,262,3.712,263,1.853,264,1.853,265,1.853,266,2.535,267,1.853,268,2.535,269,2.124,270,1.355,271,1.651,272,2.124,273,2.124,274,2.124,275,2.124,276,2.124,277,2.124,278,2.124,279,2.124,280,2.124,281,2.124,282,2.124,283,2.124,284,2.124,285,2.535,286,1.651,287,1.355,288,2.535,289,2.535,290,2.535,291,2.535,292,1.24,293,2.535]],["title/modules/AppRoutingModule.html",[192,1.723,204,1.894]],["body/modules/AppRoutingModule.html",[0,1.098,1,1.465,2,1.852,3,0.329,4,0.329,9,0.285,11,0.329,12,1.316,34,0.031,36,1.162,37,0.819,38,1.126,39,1.542,40,1.542,41,1.126,42,1.126,47,0.428,48,0.889,55,2.425,74,1.316,82,1.042,91,0.022,160,1.465,162,1.465,164,1.465,166,1.629,169,0.017,170,0.017,194,2.188,199,2.722,204,2.846,211,3.12,215,3.507,218,2.425,235,3.12,237,3.12,242,2.425,243,3.12,247,3.12,248,3.12,270,2.589,294,2.722,295,2.722,296,3.85,297,4.845,298,2.188,299,3.507,300,3.724,301,3.12,302,3.12,303,3.12,304,6.06,305,3.724,306,3.724,307,3.724,308,2.425,309,4.059,310,1.99,311,3.724]],["title/interfaces/Apps.html",[171,0.499,312,1.576]],["body/interfaces/Apps.html",[3,0.403,4,0.403,9,0.35,11,0.403,23,0.403,34,0.03,36,0.848,47,0.403,84,1.945,91,0.025,169,0.021,170,0.021,171,0.914,172,1.614,174,1.945,175,1.314,178,0.578,312,3.249,313,3.827,314,3.827,315,2.757,316,4.613,317,4.567]],["title/guards/AuthGuard.html",[299,2.099,318,2.099]],["body/guards/AuthGuard.html",[0,0.954,3,0.255,4,0.255,9,0.221,11,0.478,14,1.298,23,0.255,24,1.234,26,0.874,27,1.322,29,1.234,30,1.234,33,1.553,34,0.031,36,1.006,37,0.636,38,0.874,41,0.874,42,0.874,47,0.255,48,0.69,91,0.019,100,2.749,104,2.982,142,0.874,143,0.808,149,0.572,169,0.013,170,0.013,178,0.516,183,1.413,191,1.698,192,2.18,287,3.004,292,2.312,298,1.698,299,3.078,309,4.302,310,2.18,318,3.344,319,2.89,320,2.421,321,1.679,322,5.135,323,2.421,324,2.749,325,5.094,326,2.89,327,1.689,328,1.559,329,4.079,330,5.899,331,5.135,332,5.135,333,2.89,334,3.754,335,3.344,336,2.327,337,4.079,338,2.656,339,4.302,340,5.135,341,3.417,342,2.777,343,2.982,344,3.455,345,4.727,346,4.079,347,2.89,348,3.455,349,4.079,350,4.079,351,1.882,352,2.89,353,2.89,354,2.89,355,2.421,356,1.545,357,2.89,358,2.89,359,2.89,360,2.89,361,2.126,362,2.89,363,2.89,364,2.89,365,1.545,366,1.698,367,1.995,368,2.89,369,2.89,370,2.89,371,2.89,372,2.89,373,2.89,374,2.89,375,2.421]],["title/injectables/AuthService.html",[321,1.054,324,1.576]],["body/injectables/AuthService.html",[3,0.222,4,0.222,9,0.192,11,0.453,23,0.222,24,1.114,26,1.321,27,1.434,29,0.759,30,0.759,33,1.62,34,0.031,35,1.526,36,1.055,37,0.552,38,0.759,41,0.759,42,0.759,47,0.222,48,0.88,78,1.408,87,2.122,91,0.017,100,2.62,142,0.759,143,0.702,149,0.517,169,0.011,170,0.011,175,0.88,178,0.466,182,1.634,183,1.227,191,1.474,207,1.802,230,1.341,234,1.835,270,2.572,286,2.843,287,2.959,292,1.227,298,1.474,310,1.969,321,1.573,324,2.135,325,4.936,327,1.526,328,1.408,336,2.613,338,2.4,342,2.565,343,2.694,348,2.694,355,2.103,356,1.341,361,1.992,366,3.147,367,2.506,375,2.103,376,1.341,377,2.103,378,2.62,379,5.357,380,4.811,381,5.125,382,4.366,383,2.51,384,4.031,385,2.827,386,2.827,387,3.685,388,4.366,389,3.087,390,2.921,391,2.334,392,2.51,393,4.366,394,3.685,395,2.51,396,3.685,397,3.087,398,3.685,399,2.51,400,3.685,401,3.517,402,3.685,403,2.51,404,3.087,405,2.51,406,2.51,407,2.51,408,1.474,409,2.51,410,2.51,411,2.51,412,2.51,413,2.51,414,2.51,415,2.103,416,2.51,417,2.51,418,3.685,419,2.51,420,2.51,421,2.51,422,1.835,423,2.103,424,2.51,425,1.341,426,2.51,427,2.103,428,2.51,429,1.474,430,1.835,431,1.474,432,2.51,433,2.51,434,2.103]],["title/components/ChatButtonComponent.html",[0,0.599,153,1.054]],["body/components/ChatButtonComponent.html",[0,1.029,1,0.929,2,1.627,3,0.271,4,0.271,5,1.38,6,1.38,7,1.38,8,1.38,9,0.235,11,0.271,12,1.085,14,1.913,15,2.389,16,1.38,17,2.795,18,1.369,19,1.913,21,1.913,23,0.376,24,1.287,25,2.579,26,1.477,27,1.191,29,1.287,30,1.287,33,0.929,34,0.03,35,1.272,36,0.57,37,0.676,38,0.929,39,1.272,40,1.272,41,0.929,42,0.929,43,1.642,47,0.271,48,1.016,52,1.174,74,1.085,87,1.272,89,1.805,91,0.019,105,1.762,114,3.112,136,3.567,142,0.929,143,0.859,144,1.174,145,1.913,146,1.38,147,2.37,148,1.38,149,0.597,150,1.38,151,1.004,152,1.38,153,1.81,154,2.575,155,1.38,156,1.004,157,1.38,158,1.004,159,1.38,160,0.929,161,1.38,162,0.929,163,1.38,164,0.929,165,1.38,166,0.929,167,1.38,168,1.38,169,0.014,170,0.014,174,1.085,222,2.001,267,3.571,435,4.093,436,2.574,437,3.855,438,4.885,439,4.257,440,3.072,441,3.072,442,1.805,443,2.246,444,3.072,445,3.567,446,4.257,447,3.072,448,3.072,449,3.181,450,3.567,451,3.571,452,3.567,453,2.574,454,3.072,455,3.181,456,2.772,457,2.574,458,3.072,459,3.567,460,3.072,461,2.574,462,2.574,463,3.072,464,2.246,465,2.246,466,2.574,467,2.574,468,3.072,469,3.072,470,2.574,471,3.072,472,3.072,473,3.072,474,2.574,475,3.072,476,3.072,477,3.567,478,2.574,479,2.246,480,3.072]],["title/interfaces/CommunicationPlatform.html",[171,0.499,481,1.723]],["body/interfaces/CommunicationPlatform.html",[3,0.402,4,0.402,9,0.349,11,0.402,23,0.402,34,0.03,47,0.402,91,0.025,149,0.894,169,0.021,170,0.021,171,0.85,172,1.61,174,1.61,175,1.312,177,2.444,178,0.695,179,2.084,180,1.786,481,2.938,482,3.817,483,3.817,484,2.967,485,1.741,486,3.993]],["title/interfaces/Day.html",[171,0.499,487,1.723]],["body/interfaces/Day.html",[3,0.404,4,0.404,9,0.351,11,0.404,23,0.404,34,0.03,47,0.404,91,0.025,149,0.895,169,0.021,170,0.021,171,0.853,172,1.618,174,1.618,175,1.317,177,2.45,178,0.697,179,2.087,180,1.79,487,3.451,488,3.837]],["title/components/FriendCardComponent.html",[0,0.599,156,1.054]],["body/components/FriendCardComponent.html",[0,1.105,1,0.973,2,1.68,3,0.284,4,0.284,5,1.446,6,1.446,7,1.446,8,1.446,9,0.246,11,0.284,12,1.137,14,1.975,15,2.448,16,1.446,17,2.818,18,1.38,19,1.975,21,1.975,23,0.284,24,1.329,25,2.631,26,1.514,27,1.4,29,1.329,30,1.329,33,0.973,34,0.031,35,1.332,36,0.816,37,0.708,38,0.973,39,1.332,40,1.332,41,0.973,42,0.973,43,1.72,47,0.284,48,1.049,52,2.397,70,2.53,73,1.23,74,1.137,82,1.4,87,1.332,91,0.02,105,1.82,142,0.973,143,0.9,144,1.23,145,1.975,146,1.446,147,2.417,148,1.446,149,0.617,150,1.446,151,1.052,152,1.446,153,1.052,154,1.332,155,1.446,156,1.841,157,1.446,158,1.052,159,1.446,160,0.973,161,1.446,162,0.973,163,1.446,164,0.973,165,1.446,166,0.973,167,1.446,168,1.446,169,0.015,170,0.015,178,0.407,265,3.932,442,1.891,443,2.353,489,4.507,490,2.697,491,5.379,492,5.006,493,4.396,494,4.396,495,4.396,496,5.379,497,3.219,498,2.096,499,3.219,500,4.396,501,2.582,502,4.396]],["title/components/NavComponent.html",[0,0.599,158,1.054]],["body/components/NavComponent.html",[0,1.014,1,0.666,2,1.543,3,0.194,4,0.194,5,0.989,6,0.989,7,0.989,8,0.989,9,0.169,11,0.398,12,1.713,13,1.786,14,1.501,15,1.975,16,0.989,17,2.605,18,1.276,19,1.501,21,1.501,23,0.194,24,1.01,25,2.205,26,0.666,27,1.13,29,1.01,30,0.666,32,1.963,33,0.666,34,0.031,35,0.911,36,0.62,37,0.484,38,0.666,39,0.911,40,0.911,41,0.666,42,0.666,47,0.194,48,0.525,52,0.841,55,2.176,74,0.778,78,2.088,79,3.157,82,0.935,91,0.015,105,1.672,114,3.543,143,0.616,144,0.841,145,1.501,146,0.989,147,2.026,148,0.989,149,0.566,150,0.989,151,0.719,152,0.989,153,0.719,154,0.911,155,0.989,156,0.719,157,0.989,158,1.474,159,0.989,160,0.666,161,0.989,162,0.666,163,0.989,164,0.666,165,0.989,166,0.666,167,0.989,168,0.989,169,0.01,170,0.01,175,0.798,178,0.423,207,1.975,222,2.936,287,2.591,308,2.176,323,1.844,324,2.672,327,0.911,328,0.841,338,1.433,341,2.799,351,1.433,361,0.911,378,1.634,422,1.609,430,2.442,437,2.952,449,3.323,450,1.844,451,3.296,452,3.777,453,1.844,455,2.936,456,2.176,457,1.844,459,1.844,461,1.844,462,1.844,464,3.296,465,2.442,466,2.799,467,1.844,470,3.777,474,1.844,477,3.777,478,2.799,479,1.609,503,1.844,504,4.847,505,4.038,506,3.341,507,2.201,508,2.201,509,2.201,510,2.201,511,1.844,512,2.201,513,2.201,514,3.341,515,3.341,516,3.341,517,3.341,518,2.201,519,2.201,520,2.201,521,4.275,522,2.201,523,4.275,524,1.433,525,2.201,526,2.201,527,3.383,528,3.341,529,1.609,530,2.201,531,2.201,532,2.442,533,1.609,534,3.383,535,3.383,536,3.341,537,2.201,538,2.201,539,2.201,540,2.201,541,2.201,542,2.201,543,3.341,544,2.201,545,3.341,546,2.201,547,2.201,548,5.103,549,4.508,550,4.847,551,2.201,552,4.508,553,2.201,554,3.341,555,2.201,556,2.201,557,2.201,558,2.201,559,2.201,560,2.201,561,2.201,562,2.201,563,2.201,564,2.201,565,2.201,566,3.341,567,2.952,568,3.341,569,2.799,570,4.038,571,2.201,572,2.201,573,2.201,574,2.201,575,2.201,576,2.201,577,2.201,578,2.201,579,2.201,580,2.201,581,2.201,582,3.341,583,2.201,584,2.201,585,2.201,586,2.201,587,2.201,588,2.201,589,2.201]],["title/components/NetworkComponent.html",[0,0.599,160,0.975]],["body/components/NetworkComponent.html",[0,1.041,1,0.418,2,0.881,3,0.122,4,0.122,5,0.621,6,0.621,7,0.621,8,0.621,9,0.106,11,0.367,12,1.467,13,1.232,14,1.036,15,1.45,16,0.621,17,2.281,18,1.117,19,1.036,21,1.036,23,0.468,24,0.697,25,1.692,26,0.697,27,1.507,29,0.697,30,0.697,32,1.354,33,1.332,34,0.031,35,1.592,36,0.983,37,0.304,38,0.418,39,0.572,40,0.572,41,0.418,42,0.418,47,0.122,48,0.33,51,0.9,52,1.133,64,1.232,70,1.036,73,0.528,74,0.489,78,0.881,82,1.753,84,1.222,87,1.227,91,0.011,93,1.501,99,0.9,105,0.954,109,1.036,142,0.418,143,0.387,144,0.528,145,1.036,146,0.621,147,1.554,148,0.621,149,0.582,150,0.621,151,0.452,152,0.621,153,0.452,154,0.572,155,0.621,156,0.452,157,0.621,158,0.452,159,0.621,160,1.046,161,0.621,162,0.418,163,0.621,164,0.418,165,0.621,166,0.418,167,0.621,168,0.621,169,0.006,170,0.006,175,0.55,177,1.984,178,0.642,179,1.617,180,0.697,187,0.9,188,0.9,207,1.127,215,1.501,230,0.739,245,0.812,261,1.011,263,1.011,264,3.937,271,2.504,287,2.22,292,1.692,308,3.448,312,1.692,315,1.332,324,1.692,327,1.432,328,1.322,334,1.685,335,1.501,336,0.954,339,1.931,344,1.685,351,0.9,361,2.15,366,2.816,367,0.676,378,1.45,385,2.032,386,2.032,390,2.031,391,2.879,408,0.812,425,2.055,437,2.529,449,0.9,455,0.9,456,0.9,484,1.501,485,0.881,487,1.849,498,0.9,501,1.354,511,1.931,521,1.931,524,0.9,532,1.011,533,1.011,567,1.011,569,1.158,590,1.158,591,2.965,592,2.305,593,4.615,594,2.965,595,3.374,596,1.931,597,2.305,598,2.305,599,3.459,600,2.529,601,2.484,602,1.383,603,3.845,604,2.253,605,3.459,606,2.032,607,2.711,608,2.898,609,2.032,610,1.383,611,2.965,612,1.931,613,2.305,614,2.305,615,2.305,616,1.383,617,2.305,618,2.81,619,2.965,620,2.305,621,1.383,622,2.305,623,2.305,624,1.383,625,2.305,626,1.383,627,1.742,628,1.931,629,1.931,630,2.305,631,1.383,632,1.931,633,1.383,634,2.965,635,3.459,636,2.305,637,2.305,638,2.305,639,2.305,640,2.305,641,2.305,642,2.305,643,2.305,644,1.383,645,1.383,646,2.965,647,1.383,648,2.305,649,2.305,650,1.685,651,1.383,652,2.305,653,2.305,654,1.383,655,1.383,656,1.383,657,1.383,658,1.383,659,1.383,660,1.383,661,2.305,662,1.011,663,1.383,664,1.158,665,1.011,666,1.158,667,1.158,668,1.158,669,1.931,670,1.158,671,1.158,672,1.158,673,1.158,674,1.158,675,1.158,676,1.158,677,1.158,678,1.158,679,1.158,680,1.158,681,1.383,682,1.158,683,1.158,684,1.158,685,1.158,686,1.383,687,1.383,688,2.305,689,1.383,690,1.383,691,1.383,692,1.383,693,1.383,694,1.158,695,1.383,696,1.383,697,1.158,698,1.383,699,1.383,700,1.158,701,1.383,702,1.383,703,1.383,704,1.383,705,1.383,706,2.305,707,1.158,708,1.383,709,1.383,710,2.305,711,1.383,712,1.158,713,1.011,714,1.383,715,1.383,716,1.685,717,1.036,718,2.305,719,2.305,720,1.931,721,2.305,722,1.931,723,1.501,724,1.931,725,1.931,726,1.931,727,1.931,728,1.931,729,1.931,730,1.931,731,1.931,732,1.685,733,2.305,734,2.305,735,1.011,736,1.383,737,1.383]],["title/injectables/NetworkService.html",[321,1.054,604,2.099]],["body/injectables/NetworkService.html",[3,0.318,4,0.318,9,0.276,11,0.468,12,1.273,23,0.318,24,1.434,26,1.089,27,1.326,29,1.434,30,1.434,33,1.434,34,0.031,36,0.984,37,0.793,38,1.089,39,1.491,40,1.491,41,1.089,42,1.089,47,0.318,48,0.86,51,2.346,63,3.465,73,2.025,82,1.68,91,0.022,142,1.089,143,1.008,149,0.665,169,0.016,170,0.016,178,0.599,183,1.761,230,1.925,270,1.925,308,3.45,321,1.549,327,1.962,328,1.812,336,1.962,356,1.925,361,1.962,365,1.925,367,1.761,376,1.925,378,2.591,385,3.113,386,3.528,390,2.591,408,2.116,498,2.346,595,4.39,604,3.087,618,3.465,627,3.113,738,3.018,739,4.74,740,2.633,741,3.602,742,4.74,743,3.602,744,3.602,745,3.971,746,3.602,747,3.602,748,3.602,749,3.602,750,3.602,751,3.602,752,3.602]],["title/injectables/NotificationService.html",[321,1.054,607,1.894]],["body/injectables/NotificationService.html",[3,0.234,4,0.234,9,0.203,11,0.497,23,0.234,24,1.159,26,0.801,27,1.465,29,1.159,30,1.159,33,1.493,34,0.031,35,2.044,36,0.712,37,0.583,38,0.801,41,0.801,42,0.801,47,0.234,48,0.915,91,0.018,142,0.801,143,0.741,149,0.735,169,0.012,170,0.012,178,0.335,183,1.296,186,5.489,245,2.252,246,3.991,292,2.414,301,2.22,302,2.22,310,2.049,321,1.614,327,2.168,328,2.002,356,1.416,361,2.502,365,1.416,376,1.416,390,2.562,445,5.274,465,2.802,524,2.497,527,3.212,607,2.646,612,3.212,713,3.609,753,2.22,754,3.834,755,3.834,756,3.834,757,3.834,758,2.65,759,4.936,760,2.65,761,3.774,762,3.834,763,5.966,764,2.65,765,5.766,766,5.46,767,6.294,768,4.936,769,4.936,770,3.834,771,2.65,772,3.834,773,3.834,774,2.65,775,3.834,776,2.65,777,4.505,778,2.65,779,3.834,780,3.834,781,3.834,782,2.65,783,2.65]],["title/interfaces/Platform.html",[171,0.499,485,1.232]],["body/interfaces/Platform.html",[3,0.404,4,0.404,9,0.351,11,0.404,23,0.404,34,0.03,47,0.404,91,0.025,149,0.895,169,0.021,170,0.021,171,0.853,172,1.618,174,1.618,175,1.317,177,2.45,178,0.697,179,2.087,180,1.79,485,2.468,784,3.837]],["title/interfaces/Profile.html",[82,0.902,171,0.499]],["body/interfaces/Profile.html",[3,0.247,4,0.247,9,0.215,11,0.247,18,0.878,23,0.247,34,0.031,36,0.941,47,0.247,70,2.629,73,1.936,82,1.666,84,1.41,86,2.345,91,0.018,149,0.56,169,0.013,170,0.013,171,0.719,172,0.99,174,1.41,175,0.953,177,2.612,178,0.798,179,1.304,180,1.867,315,2.276,425,2.707,429,2.976,431,2.976,481,2.707,484,3.027,485,2.359,486,2.599,501,3.269,529,2.917,567,2.917,595,2.917,596,3.298,717,2.629,723,2.599,785,2.348,786,4.243,787,4.243,788,4.243,789,4.243,790,4.243,791,3.702,792,4.067,793,3.298,794,3.298,795,4.903,796,5.852,797,3.991,798,6.172,799,3.991,800,3.991,801,3.991,802,2.802,803,2.802,804,2.917]],["title/components/ProfileComponent.html",[0,0.599,162,0.975]],["body/components/ProfileComponent.html",[0,0.91,1,0.444,2,0.925,3,0.13,4,0.13,5,0.659,6,0.659,7,0.659,8,0.659,9,0.112,11,0.351,12,1.732,13,1.294,14,1.088,15,1.512,16,0.659,17,2.326,18,1.139,19,1.088,21,1.088,23,0.13,24,0.732,25,1.942,26,0.444,27,1.531,29,0.444,30,0.444,32,1.423,33,1.085,34,0.031,35,1.002,36,1.016,37,0.323,38,0.444,41,0.444,42,0.444,43,0.784,47,0.13,48,0.578,52,0.561,64,1.294,70,2.125,73,0.925,74,0.518,78,0.925,82,1.678,84,1.268,87,1.644,91,0.011,99,0.955,105,1.002,109,1.612,142,0.444,143,0.41,144,0.561,145,1.088,146,0.659,147,1.612,148,0.659,149,0.503,150,0.659,151,0.479,152,0.659,153,0.479,154,0.607,155,0.659,156,0.479,157,0.659,158,0.479,159,0.659,160,0.444,161,0.659,162,1.085,163,0.659,164,0.444,165,0.659,166,0.444,167,0.659,168,0.659,169,0.007,170,0.007,175,0.578,177,1.28,178,0.655,179,1.479,180,0.732,187,2.337,188,1.577,191,0.862,207,1.184,215,1.577,245,1.423,287,2.285,292,1.184,298,0.862,312,1.184,315,1.612,316,3.007,324,1.755,327,1.002,328,0.925,334,1.77,335,1.577,336,1.644,338,1.577,342,2.333,343,2.623,344,2.623,351,0.955,361,1.77,365,0.784,366,2.657,367,0.717,390,1.755,391,2.527,397,3.328,401,1.77,408,1.423,425,2.418,429,1.423,430,1.77,431,1.423,442,0.862,443,1.072,449,0.955,451,1.072,455,0.955,456,0.955,464,1.072,481,1.652,484,2.337,485,2.021,486,2.013,487,2.418,498,0.955,501,1.423,524,0.955,533,1.072,534,1.229,535,1.229,596,2.586,600,2.623,601,2.59,606,2.108,607,2.778,608,3.007,609,2.108,618,1.072,627,1.423,628,2.029,629,2.029,632,2.029,650,1.77,662,1.072,664,1.229,665,1.072,666,1.229,667,1.229,668,1.229,669,1.229,670,1.229,671,1.229,672,1.229,673,1.229,674,1.229,675,1.229,676,1.229,677,1.229,678,1.229,679,1.229,680,1.229,682,1.229,683,1.229,684,2.029,685,1.229,694,1.229,697,1.229,700,1.229,707,5.026,712,1.229,713,1.072,716,1.77,717,2.269,720,2.029,722,2.029,723,1.577,724,2.029,725,2.029,726,2.029,727,2.029,728,2.029,729,2.029,730,2.029,731,2.029,732,1.77,735,1.072,761,2.029,786,2.029,787,2.029,788,2.029,789,2.029,790,2.029,791,1.77,792,2.903,793,1.577,794,1.577,804,1.072,805,1.229,806,3.092,807,2.421,808,3.972,809,3.092,810,3.092,811,1.467,812,3.589,813,2.421,814,2.421,815,1.467,816,2.421,817,1.467,818,1.467,819,2.421,820,1.467,821,1.467,822,1.467,823,3.007,824,2.421,825,3.092,826,1.467,827,3.589,828,2.029,829,2.029,830,2.59,831,1.467,832,1.467,833,2.421,834,1.467,835,1.467,836,1.467,837,1.467,838,1.467,839,1.467,840,1.467,841,1.467,842,1.467,843,1.467,844,2.421,845,1.467,846,1.467,847,1.467,848,2.421,849,1.467,850,1.467,851,1.467,852,1.467,853,1.467,854,1.467,855,1.467,856,1.467,857,1.467,858,1.467,859,1.467,860,1.467,861,1.467,862,1.467,863,1.467,864,1.467,865,1.467,866,1.467,867,1.467,868,1.467,869,2.421,870,2.421,871,2.421,872,2.421,873,2.421,874,2.421,875,2.421,876,2.029,877,2.421]],["title/injectables/ProfileService.html",[321,1.054,606,1.894]],["body/injectables/ProfileService.html",[3,0.247,4,0.247,9,0.215,11,0.506,18,1.115,23,0.247,24,1.207,26,0.848,27,1.497,29,1.207,30,1.207,33,1.77,34,0.031,36,0.741,37,0.617,38,0.848,41,0.848,42,0.848,47,0.247,48,0.669,82,1.3,84,1.79,87,1.16,91,0.018,109,1.259,142,0.848,143,0.784,149,0.751,169,0.013,170,0.013,176,2.345,178,0.677,179,1.913,180,1.867,183,1.37,230,1.498,270,2.707,310,2.133,312,1.952,321,1.656,327,2.216,328,2.046,342,3.438,356,1.498,361,2.216,365,1.498,367,2.477,376,1.498,378,3.018,385,2.731,386,3.269,390,2.618,391,1.498,442,1.646,485,1.936,486,3.298,606,2.345,627,3.438,717,2.276,740,2.048,793,2.599,794,2.599,829,2.348,878,2.348,879,3.991,880,3.991,881,3.991,882,3.991,883,2.802,884,3.991,885,2.802,886,3.991,887,3.343,888,3.991,889,2.802,890,3.343,891,3.991,892,2.802,893,3.343,894,3.991,895,2.802,896,2.802,897,2.802,898,2.802,899,2.802,900,2.802,901,2.802,902,2.802,903,2.802,904,2.802,905,2.802,906,2.802,907,2.802,908,2.802]],["title/interfaces/Region.html",[171,0.499,717,1.448]],["body/interfaces/Region.html",[3,0.404,4,0.404,9,0.351,11,0.404,23,0.404,34,0.03,47,0.404,91,0.025,149,0.895,169,0.021,170,0.021,171,0.853,172,1.618,174,1.618,175,1.317,177,2.45,178,0.697,179,2.087,180,1.79,717,2.901,909,3.837]],["title/components/ReleaseRubricComponent.html",[0,0.599,164,0.975]],["body/components/ReleaseRubricComponent.html",[0,1.073,1,0.75,2,1.397,3,0.219,4,0.219,5,1.115,6,1.115,7,1.115,8,1.115,9,0.19,11,0.219,12,1.802,13,1.953,14,1.642,15,2.121,16,1.115,17,2.677,18,1.311,19,1.642,21,1.642,23,0.219,24,1.105,25,2.34,26,1.312,27,1.022,29,1.105,30,1.105,32,2.147,33,0.75,34,0.03,35,1.027,36,0.461,37,0.546,43,1.953,47,0.219,48,0.592,49,2.38,50,2.671,52,1.658,53,3.498,55,3.687,56,4.009,57,4.009,58,3.9,64,2.557,66,3.498,67,2.671,70,1.642,72,3.9,73,2.304,74,2.278,75,2.811,76,3.498,77,2.671,78,1.829,79,3.116,80,3.498,81,3.498,82,1.339,83,3.061,84,1.291,85,3.498,86,2.147,87,1.513,88,2.671,89,2.811,90,2.671,91,0.022,92,2.671,93,3.116,94,3.061,95,3.061,105,1.513,144,0.948,145,1.642,146,1.115,147,2.15,148,1.115,149,0.513,150,1.115,151,0.811,152,1.115,153,0.811,154,1.027,155,1.115,156,0.811,157,1.115,158,0.811,159,1.115,160,0.75,161,1.115,162,0.75,163,1.115,164,1.447,165,1.115,166,0.75,167,1.115,168,1.115,169,0.011,170,0.011,192,1.953,242,2.825,378,1.787,408,2.147,828,3.061,876,3.061,910,3.634,911,2.079,912,4.338,913,3.654,914,2.481,915,2.481,916,4.785,917,4.785,918,3.654,919,4.785,920,3.654,921,3.061,922,4.785,923,4.785,924,3.654,925,4.785,926,3.654,927,3.654,928,3.654,929,3.654,930,3.654,931,3.654,932,3.654,933,3.654,934,3.654,935,3.654,936,3.654]],["title/injectables/SetupService.html",[321,1.054,609,1.894]],["body/injectables/SetupService.html",[3,0.18,4,0.18,9,0.156,11,0.437,12,1.112,18,0.692,23,0.18,24,1.163,26,0.616,27,1.636,29,0.616,30,0.616,33,1.789,34,0.031,36,1.037,37,0.448,38,0.616,41,0.616,42,0.616,47,0.18,48,0.751,64,1.682,70,0.914,73,1.203,82,1.698,84,1.748,86,1.848,91,0.014,100,1.539,142,0.616,143,0.569,149,0.54,169,0.009,170,0.009,175,0.751,178,0.674,179,1.028,180,1.163,182,1.325,183,0.995,230,1.088,234,1.488,239,1.705,270,1.682,286,1.325,303,4.68,310,1.682,315,0.914,321,1.415,327,1.592,328,1.47,336,2.264,342,3.474,356,1.088,361,1.792,365,1.088,366,1.196,367,2.606,376,1.088,378,3.041,384,1.705,385,2.26,386,2.543,389,3.626,390,1.539,391,1.088,401,1.488,404,1.705,422,1.488,423,1.705,425,2.056,429,1.196,431,1.196,442,1.196,481,1.088,485,1.47,487,1.088,501,1.196,596,1.325,600,2.3,609,1.848,627,3.392,662,1.488,716,1.488,717,1.728,732,1.488,740,1.488,745,1.705,791,1.488,792,3.77,793,1.325,794,1.325,795,2.636,804,1.488,830,2.636,887,4.145,890,3.626,893,3.626,937,1.705,938,3.846,939,3.846,940,3.846,941,3.846,942,3.846,943,4.328,944,4.328,945,4.328,946,4.328,947,4.328,948,3.146,949,4.947,950,4.328,951,3.146,952,3.146,953,2.035,954,2.035,955,2.035,956,2.035,957,3.146,958,2.035,959,2.035,960,3.146,961,2.035,962,3.146,963,5.686,964,2.035,965,2.035,966,2.035,967,2.035,968,2.035,969,2.035,970,2.035,971,2.035,972,2.035,973,2.035,974,2.035,975,2.035,976,2.035,977,2.035,978,2.035,979,2.035,980,2.035,981,2.035,982,2.035,983,2.035,984,2.035,985,2.035,986,2.035,987,2.035,988,2.035,989,2.035,990,2.035,991,2.035,992,2.035,993,2.035,994,2.035,995,2.035,996,2.035,997,2.035,998,2.035,999,2.035,1000,2.035,1001,2.035,1002,2.035,1003,2.035]],["title/interfaces/SteamApp.html",[171,0.499,315,1.448]],["body/interfaces/SteamApp.html",[3,0.388,4,0.388,9,0.337,11,0.388,18,1.367,23,0.388,34,0.03,47,0.388,84,1.553,91,0.025,149,0.887,169,0.02,170,0.02,171,0.832,172,1.553,174,1.553,175,1.284,176,3.558,177,2.407,178,0.735,179,1.758,180,1.912,315,2.417,1004,3.683,1005,6.322,1006,5.379]],["title/interfaces/SteamAppList.html",[171,0.499,1007,2.356]],["body/interfaces/SteamAppList.html",[3,0.401,4,0.401,9,0.348,11,0.401,18,1.298,23,0.401,34,0.03,36,0.844,47,0.401,73,2.098,84,1.939,91,0.025,169,0.021,170,0.021,171,0.912,172,1.606,174,2.084,175,1.31,178,0.575,312,3.152,1007,4.012,1008,3.807,1009,3.807,1010,6.372]],["title/interfaces/User.html",[171,0.499,336,1.334]],["body/interfaces/User.html",[3,0.366,4,0.366,9,0.317,11,0.366,23,0.366,34,0.03,47,0.366,78,1.585,91,0.024,149,0.728,169,0.019,170,0.019,171,0.803,172,1.465,174,1.465,175,1.239,178,0.75,179,1.696,180,1.985,328,2.268,336,2.688,348,3.031,425,3.172,427,4.972,429,3.486,431,3.486,529,3.793,823,3.474,1011,3.474,1012,5.188,1013,5.188,1014,5.188]],["title/coverage.html",[1015,3.686]],["body/coverage.html",[0,1.148,1,1.003,9,0.254,10,2.778,18,0.987,34,0.031,82,0.928,91,0.02,151,1.084,153,1.084,156,1.084,158,1.084,160,1.003,162,1.003,164,1.003,166,1.003,169,0.015,170,0.015,171,0.967,173,2.778,178,0.419,181,2.778,208,2.424,218,2.159,242,2.159,265,2.424,267,2.424,271,2.159,294,2.424,295,2.424,299,2.159,312,1.622,313,2.778,314,2.778,315,1.49,318,2.159,320,2.778,321,1.86,324,1.622,336,1.373,377,2.778,415,2.778,435,2.778,436,2.778,479,4.837,481,1.772,482,2.778,483,2.778,485,1.267,487,1.772,488,2.778,489,2.778,490,2.778,503,2.778,523,2.778,532,3.279,590,2.778,604,2.159,606,1.948,607,1.948,609,1.948,717,1.49,738,2.778,753,2.778,784,2.778,785,2.778,805,2.778,878,2.778,909,2.778,910,2.778,911,2.778,937,2.778,1004,2.778,1007,2.424,1008,2.778,1009,2.778,1011,2.778,1015,2.778,1016,2.778,1017,3.316,1018,3.316,1019,5.996,1020,5.446,1021,3.316,1022,3.316,1023,5.083,1024,5.083,1025,3.316,1026,3.316,1027,3.316,1028,4.485,1029,3.316,1030,3.316,1031,5.083,1032,4.485,1033,3.316,1034,3.316,1035,3.316,1036,3.316,1037,3.316,1038,3.316,1039,2.778,1040,3.758,1041,2.778,1042,3.316,1043,3.316]],["title/dependencies.html",[195,2.525,1044,2.691]],["body/dependencies.html",[34,0.031,37,0.891,91,0.023,100,1.981,109,1.82,169,0.019,170,0.019,191,2.38,195,2.638,197,3.737,209,2.961,213,4.284,214,3.737,222,3.33,223,4.284,226,3.394,228,3.394,245,3.004,246,2.961,261,2.961,263,2.961,264,3.737,298,2.38,665,2.961,1045,4.051,1046,4.051,1047,4.051,1048,6.47,1049,4.051,1050,4.051,1051,4.051,1052,4.051,1053,4.051,1054,4.051,1055,4.051,1056,4.051,1057,4.051,1058,4.051,1059,4.051,1060,4.051,1061,4.051,1062,4.051,1063,4.051,1064,4.051,1065,4.051,1066,4.051,1067,4.051,1068,4.051,1069,4.051,1070,4.051,1071,4.051,1072,4.051,1073,4.051,1074,4.051,1075,4.051,1076,4.051,1077,4.051,1078,4.051]],["title/index.html",[23,0.238,1079,2.255,1080,2.255]],["body/index.html",[34,0.023,39,1.586,40,1.586,43,2.047,46,4.133,49,3.213,50,3.989,51,3.213,52,2.086,53,3.989,58,3.989,59,3.209,60,3.209,61,3.209,62,3.209,63,2.8,64,2.047,65,3.209,66,2.8,67,2.8,68,3.209,69,3.209,70,1.721,71,3.209,72,2.8,73,1.886,74,1.743,75,2.25,76,3.606,77,2.8,78,1.464,79,2.494,80,2.8,81,3.606,82,1.071,84,1.353,85,3.606,86,2.25,87,2.469,88,2.8,89,2.25,90,2.8,91,0.025,92,2.8,93,2.494,96,3.209,97,3.209,98,3.209,99,2.494,100,1.873,103,4.133,104,2.8,105,1.586,106,3.209,107,4.133,108,3.209,109,1.721,110,3.209,111,3.209,112,3.209,113,3.209,138,3.209,139,3.209,140,3.606,141,3.554,142,1.158,143,1.071,169,0.017,170,0.017,209,3.606,286,2.494,391,2.047,485,1.464,921,3.209,1081,3.83,1082,3.83,1083,3.83,1084,3.83,1085,4.933,1086,5.457,1087,4.933,1088,3.83,1089,4.933,1090,4.933,1091,3.83,1092,3.83,1093,3.83,1094,3.83,1095,3.83,1096,4.933,1097,3.83,1098,3.83,1099,3.209]],["title/license.html",[141,1.753,1079,2.255,1080,2.255]],["body/license.html",[34,0.023,39,1.689,40,1.689,91,0.023,140,2.982,141,2.656,142,1.234,143,1.141,169,0.019,170,0.019,207,1.995,335,2.656,434,3.417,1016,3.417,1099,3.417,1100,5.62,1101,4.079,1102,4.079,1103,5.135,1104,4.079,1105,4.079,1106,4.079,1107,4.079,1108,4.079,1109,4.079,1110,5.135,1111,6.43,1112,4.079,1113,4.079,1114,5.62,1115,4.079,1116,5.135,1117,4.079,1118,4.079,1119,5.135,1120,4.079,1121,4.079,1122,4.079,1123,4.079,1124,4.079,1125,4.079,1126,5.135,1127,4.079,1128,4.079,1129,4.079,1130,4.079,1131,4.079,1132,4.079,1133,4.079,1134,5.135,1135,5.135,1136,4.079,1137,4.079,1138,4.079,1139,4.079,1140,4.079,1141,4.079,1142,4.079,1143,4.079,1144,4.079,1145,4.079,1146,4.079,1147,4.079,1148,4.079,1149,4.079,1150,4.079,1151,4.079,1152,4.079,1153,4.079,1154,4.079,1155,4.079,1156,4.079,1157,4.079,1158,4.079,1159,4.079,1160,4.079,1161,4.079,1162,4.079,1163,4.079,1164,4.079]],["title/modules.html",[194,2.585]],["body/modules.html",[34,0.027,91,0.027,169,0.023,170,0.023,193,3.31,194,2.987,204,2.987,214,3.716,723,3.31,1165,5.083,1166,5.083,1167,5.865,1168,5.083]],["title/overview.html",[1169,3.686]],["body/overview.html",[1,1.698,2,1.555,34,0.03,75,2.391,89,2.391,91,0.023,144,1.555,151,2.058,153,1.835,156,1.835,158,1.835,160,1.698,162,1.698,164,1.698,166,1.698,169,0.019,170,0.019,172,1.438,192,2.175,193,4.379,194,2.391,195,2.65,196,3.41,197,2.975,198,3.41,199,2.975,200,3.41,201,3.41,202,3.41,203,3.41,204,3.299,205,4.296,206,3.41,207,1.99,296,2.65,318,2.65,376,2.175,735,2.975,1169,3.41,1170,4.07,1171,4.07,1172,4.07]],["title/routes.html",[296,2.865]],["body/routes.html",[34,0.027,91,0.027,169,0.024,170,0.024,296,3.399]],["title/miscellaneous/variables.html",[1173,2.255,1174,3.248]],["body/miscellaneous/variables.html",[23,0.366,34,0.031,78,1.585,91,0.024,109,1.863,166,1.254,169,0.019,170,0.019,176,2.436,178,0.75,182,3.379,187,3.864,188,3.864,208,3.031,218,3.379,269,3.474,271,3.379,272,3.474,273,3.474,274,3.474,275,3.474,276,3.474,277,3.474,278,3.474,279,3.474,280,3.474,281,3.474,282,3.474,283,3.474,284,3.474,292,2.028,294,3.031,295,3.793,650,3.031,1039,3.474,1040,5.222,1041,3.474,1173,3.474,1174,3.474,1175,4.146,1176,4.146,1177,4.146,1178,4.146,1179,5.663,1180,5.934,1181,4.146,1182,4.146]]],"invertedIndex":[["",{"_index":34,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/App.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Apps.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChatButtonComponent.html":{},"interfaces/CommunicationPlatform.html":{},"interfaces/Day.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"injectables/NetworkService.html":{},"injectables/NotificationService.html":{},"interfaces/Platform.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"interfaces/Region.html":{},"components/ReleaseRubricComponent.html":{},"injectables/SetupService.html":{},"interfaces/SteamApp.html":{},"interfaces/SteamAppList.html":{},"interfaces/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":523,"title":{},"body":{"components/NavComponent.html":{},"coverage.html":{}}}],["0.2.1",{"_index":1073,"title":{},"body":{"dependencies.html":{}}}],["0.9.1",{"_index":1078,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1021,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":461,"title":{},"body":{"components/ChatButtonComponent.html":{},"components/NavComponent.html":{}}}],["1",{"_index":75,"title":{},"body":{"components/AboutComponent.html":{},"modules/AppModule.html":{},"components/ReleaseRubricComponent.html":{},"index.html":{},"overview.html":{}}}],["1.0",{"_index":42,"title":{},"body":{"components/AboutComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChatButtonComponent.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"injectables/NetworkService.html":{},"injectables/NotificationService.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/SetupService.html":{}}}],["1.15.0",{"_index":1070,"title":{},"body":{"dependencies.html":{}}}],["1.42857",{"_index":469,"title":{},"body":{"components/ChatButtonComponent.html":{}}}],["1.6.1",{"_index":1061,"title":{},"body":{"dependencies.html":{}}}],["1.9.0",{"_index":1076,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1023,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1022,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1026,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":735,"title":{},"body":{"components/NetworkComponent.html":{},"components/ProfileComponent.html":{},"overview.html":{}}}],["10.0.4",{"_index":1067,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":479,"title":{},"body":{"components/ChatButtonComponent.html":{},"components/NavComponent.html":{},"coverage.html":{}}}],["1000",{"_index":714,"title":{},"body":{"components/NetworkComponent.html":{}}}],["10ms",{"_index":565,"title":{},"body":{"components/NavComponent.html":{}}}],["10px",{"_index":453,"title":{},"body":{"components/ChatButtonComponent.html":{},"components/NavComponent.html":{}}}],["12px",{"_index":526,"title":{},"body":{"components/NavComponent.html":{}}}],["14/14",{"_index":1038,"title":{},"body":{"coverage.html":{}}}],["14px",{"_index":467,"title":{},"body":{"components/ChatButtonComponent.html":{},"components/NavComponent.html":{}}}],["15/15",{"_index":1028,"title":{},"body":{"coverage.html":{}}}],["150ms",{"_index":555,"title":{},"body":{"components/NavComponent.html":{}}}],["15px",{"_index":462,"title":{},"body":{"components/ChatButtonComponent.html":{},"components/NavComponent.html":{}}}],["15th",{"_index":77,"title":{},"body":{"components/AboutComponent.html":{},"components/ReleaseRubricComponent.html":{},"index.html":{}}}],["16/16",{"_index":1034,"title":{},"body":{"coverage.html":{}}}],["16px",{"_index":454,"title":{},"body":{"components/ChatButtonComponent.html":{}}}],["18px",{"_index":477,"title":{},"body":{"components/ChatButtonComponent.html":{},"components/NavComponent.html":{}}}],["1:988913741592:web:7044428c9379127f",{"_index":284,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["1px",{"_index":550,"title":{},"body":{"components/NavComponent.html":{}}}],["2",{"_index":89,"title":{},"body":{"components/AboutComponent.html":{},"components/ChatButtonComponent.html":{},"components/ReleaseRubricComponent.html":{},"index.html":{},"overview.html":{}}}],["2/2",{"_index":1032,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":1030,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":1027,"title":{},"body":{"coverage.html":{}}}],["2019",{"_index":1102,"title":{},"body":{"license.html":{}}}],["20px",{"_index":589,"title":{},"body":{"components/NavComponent.html":{}}}],["25",{"_index":877,"title":{},"body":{"components/ProfileComponent.html":{}}}],["27px",{"_index":573,"title":{},"body":{"components/NavComponent.html":{}}}],["2e3440",{"_index":118,"title":{},"body":{"components/AboutComponent.html":{}}}],["3.1.2",{"_index":1057,"title":{},"body":{"dependencies.html":{}}}],["3.4.1",{"_index":1065,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1019,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":643,"title":{},"body":{"components/NetworkComponent.html":{}}}],["30px",{"_index":459,"title":{},"body":{"components/ChatButtonComponent.html":{},"components/NavComponent.html":{}}}],["31st",{"_index":90,"title":{},"body":{"components/AboutComponent.html":{},"components/ReleaseRubricComponent.html":{},"index.html":{}}}],["33",{"_index":1025,"title":{},"body":{"coverage.html":{}}}],["33/34",{"_index":1037,"title":{},"body":{"coverage.html":{}}}],["350",{"_index":60,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["35px",{"_index":457,"title":{},"body":{"components/ChatButtonComponent.html":{},"components/NavComponent.html":{}}}],["3b4252",{"_index":119,"title":{},"body":{"components/AboutComponent.html":{}}}],["4.14.135",{"_index":1056,"title":{},"body":{"dependencies.html":{}}}],["4.17.11",{"_index":1066,"title":{},"body":{"dependencies.html":{}}}],["4.3.1",{"_index":1058,"title":{},"body":{"dependencies.html":{}}}],["4.5.0",{"_index":1074,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":1063,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1024,"title":{},"body":{"coverage.html":{}}}],["400px",{"_index":520,"title":{},"body":{"components/NavComponent.html":{}}}],["434c5e",{"_index":120,"title":{},"body":{"components/AboutComponent.html":{}}}],["4c566a",{"_index":121,"title":{},"body":{"components/AboutComponent.html":{}}}],["4px",{"_index":528,"title":{},"body":{"components/NavComponent.html":{}}}],["5",{"_index":1171,"title":{},"body":{"overview.html":{}}}],["5.1.0",{"_index":1054,"title":{},"body":{"dependencies.html":{}}}],["5.2.1",{"_index":1051,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":1033,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":532,"title":{},"body":{"components/NavComponent.html":{},"components/NetworkComponent.html":{},"coverage.html":{}}}],["5000",{"_index":684,"title":{},"body":{"components/NetworkComponent.html":{},"components/ProfileComponent.html":{}}}],["50px",{"_index":536,"title":{},"body":{"components/NavComponent.html":{}}}],["5e81ac",{"_index":131,"title":{},"body":{"components/AboutComponent.html":{}}}],["5px",{"_index":545,"title":{},"body":{"components/NavComponent.html":{}}}],["6",{"_index":1172,"title":{},"body":{"overview.html":{}}}],["6.2.3",{"_index":1062,"title":{},"body":{"dependencies.html":{}}}],["6.4.0",{"_index":1071,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1031,"title":{},"body":{"coverage.html":{}}}],["60px",{"_index":450,"title":{},"body":{"components/ChatButtonComponent.html":{},"components/NavComponent.html":{}}}],["66",{"_index":1029,"title":{},"body":{"coverage.html":{}}}],["6px",{"_index":460,"title":{},"body":{"components/ChatButtonComponent.html":{}}}],["737373",{"_index":544,"title":{},"body":{"components/NavComponent.html":{}}}],["8",{"_index":101,"title":{},"body":{"components/AboutComponent.html":{}}}],["8.0.1",{"_index":1048,"title":{},"body":{"dependencies.html":{}}}],["8.1.0",{"_index":1046,"title":{},"body":{"dependencies.html":{}}}],["81a1c1",{"_index":130,"title":{},"body":{"components/AboutComponent.html":{}}}],["88c0d0",{"_index":129,"title":{},"body":{"components/AboutComponent.html":{}}}],["8fbcbb",{"_index":128,"title":{},"body":{"components/AboutComponent.html":{}}}],["8px",{"_index":570,"title":{},"body":{"components/NavComponent.html":{}}}],["9",{"_index":1170,"title":{},"body":{"overview.html":{}}}],["97",{"_index":1036,"title":{},"body":{"coverage.html":{}}}],["988913741592",{"_index":283,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["_",{"_index":664,"title":{},"body":{"components/NetworkComponent.html":{},"components/ProfileComponent.html":{}}}],["_.find(this.profile.friends",{"_index":689,"title":{},"body":{"components/NetworkComponent.html":{}}}],["_.foreach(this.profile.friends",{"_index":859,"title":{},"body":{"components/ProfileComponent.html":{}}}],["_.includes(profile.days",{"_index":715,"title":{},"body":{"components/NetworkComponent.html":{}}}],["_.includes(this.profile.days",{"_index":868,"title":{},"body":{"components/ProfileComponent.html":{}}}],["_communicationplatform",{"_index":786,"title":{},"body":{"interfaces/Profile.html":{},"components/ProfileComponent.html":{}}}],["_friends",{"_index":787,"title":{},"body":{"interfaces/Profile.html":{},"components/ProfileComponent.html":{}}}],["_platform",{"_index":788,"title":{},"body":{"interfaces/Profile.html":{},"components/ProfileComponent.html":{}}}],["_region",{"_index":789,"title":{},"body":{"interfaces/Profile.html":{},"components/ProfileComponent.html":{}}}],["_steamappchips",{"_index":790,"title":{},"body":{"interfaces/Profile.html":{},"components/ProfileComponent.html":{}}}],["a3be8c",{"_index":136,"title":{},"body":{"components/AboutComponent.html":{},"components/ChatButtonComponent.html":{}}}],["about'},{'name",{"_index":150,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChatButtonComponent.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"components/ProfileComponent.html":{},"components/ReleaseRubricComponent.html":{}}}],["about.component.html",{"_index":22,"title":{},"body":{"components/AboutComponent.html":{}}}],["about.component.scss",{"_index":20,"title":{},"body":{"components/AboutComponent.html":{}}}],["about/about.component",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["aboutcomponent",{"_index":1,"title":{"components/AboutComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatButtonComponent.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"components/ProfileComponent.html":{},"components/ReleaseRubricComponent.html":{},"coverage.html":{},"overview.html":{}}}],["above",{"_index":1133,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":531,"title":{},"body":{"components/NavComponent.html":{}}}],["access",{"_index":337,"title":{},"body":{"guards/AuthGuard.html":{}}}],["account",{"_index":80,"title":{},"body":{"components/AboutComponent.html":{},"components/ReleaseRubricComponent.html":{},"index.html":{}}}],["accounts",{"_index":67,"title":{},"body":{"components/AboutComponent.html":{},"components/ReleaseRubricComponent.html":{},"index.html":{}}}],["action",{"_index":1158,"title":{},"body":{"license.html":{}}}],["activate",{"_index":346,"title":{},"body":{"guards/AuthGuard.html":{}}}],["activated",{"_index":814,"title":{},"body":{"components/ProfileComponent.html":{}}}],["activatedroute",{"_index":812,"title":{},"body":{"components/ProfileComponent.html":{}}}],["activatedroutesnapshot",{"_index":330,"title":{},"body":{"guards/AuthGuard.html":{}}}],["active",{"_index":562,"title":{},"body":{"components/NavComponent.html":{}}}],["actual_component",{"_index":168,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChatButtonComponent.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"components/ProfileComponent.html":{},"components/ReleaseRubricComponent.html":{}}}],["adam",{"_index":39,"title":{},"body":{"components/AboutComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChatButtonComponent.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"injectables/NetworkService.html":{},"index.html":{},"license.html":{}}}],["add",{"_index":93,"title":{},"body":{"components/AboutComponent.html":{},"components/NetworkComponent.html":{},"components/ReleaseRubricComponent.html":{},"index.html":{}}}],["added",{"_index":619,"title":{},"body":{"components/NetworkComponent.html":{}}}],["addfriend",{"_index":597,"title":{},"body":{"components/NetworkComponent.html":{}}}],["addfriend(prof",{"_index":615,"title":{},"body":{"components/NetworkComponent.html":{}}}],["address",{"_index":936,"title":{},"body":{"components/ReleaseRubricComponent.html":{}}}],["adds",{"_index":617,"title":{},"body":{"components/NetworkComponent.html":{}}}],["afauth",{"_index":388,"title":{},"body":{"injectables/AuthService.html":{}}}],["afs",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{},"components/NetworkComponent.html":{},"injectables/NetworkService.html":{},"injectables/ProfileService.html":{},"injectables/SetupService.html":{}}}],["aizasyddphapu_jxdjf62qk4azvgol1kxuvsktg",{"_index":273,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["algorithm",{"_index":92,"title":{},"body":{"components/AboutComponent.html":{},"components/ReleaseRubricComponent.html":{},"index.html":{}}}],["align",{"_index":464,"title":{},"body":{"components/ChatButtonComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{}}}],["allows",{"_index":920,"title":{},"body":{"components/ReleaseRubricComponent.html":{}}}],["and/or",{"_index":1124,"title":{},"body":{"license.html":{}}}],["anguar",{"_index":613,"title":{},"body":{"components/NetworkComponent.html":{}}}],["angular",{"_index":100,"title":{},"body":{"components/AboutComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/SetupService.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":1045,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1047,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1049,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"injectables/SetupService.html":{}}}],["angular/compiler",{"_index":1050,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":37,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChatButtonComponent.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"injectables/NetworkService.html":{},"injectables/NotificationService.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"components/ReleaseRubricComponent.html":{},"injectables/SetupService.html":{},"dependencies.html":{}}}],["angular/fire",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/fire/auth",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/SetupService.html":{}}}],["angular/fire/firestore",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/NetworkComponent.html":{},"injectables/NetworkService.html":{},"injectables/ProfileService.html":{},"injectables/SetupService.html":{}}}],["angular/fire/storage",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/forms",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":261,"title":{},"body":{"modules/AppModule.html":{},"components/NetworkComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":298,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ProfileComponent.html":{},"dependencies.html":{}}}],["angularfireauth",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SetupService.html":{}}}],["angularfireauthmodule",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodule",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodule.initializeapp(config",{"_index":285,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfirestoragemodule",{"_index":231,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfirestore",{"_index":386,"title":{},"body":{"injectables/AuthService.html":{},"components/NetworkComponent.html":{},"injectables/NetworkService.html":{},"injectables/ProfileService.html":{},"injectables/SetupService.html":{}}}],["angularfirestorecollection",{"_index":963,"title":{},"body":{"injectables/SetupService.html":{}}}],["angularfirestoredocument",{"_index":404,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SetupService.html":{}}}],["angularfirestoremodule",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfontawesomemodule",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["api",{"_index":391,"title":{},"body":{"injectables/AuthService.html":{},"components/NetworkComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/SetupService.html":{},"index.html":{}}}],["apikey",{"_index":272,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":18,"title":{"interfaces/App.html":{}},"body":{"components/AboutComponent.html":{},"interfaces/App.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatButtonComponent.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"components/ReleaseRubricComponent.html":{},"injectables/SetupService.html":{},"interfaces/SteamApp.html":{},"interfaces/SteamAppList.html":{},"coverage.html":{}}}],["app's",{"_index":1006,"title":{},"body":{"interfaces/SteamApp.html":{}}}],["app.component",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":185,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":184,"title":{},"body":{"components/AppComponent.html":{}}}],["app.name",{"_index":722,"title":{},"body":{"components/NetworkComponent.html":{},"components/ProfileComponent.html":{}}}],["appcomponent",{"_index":151,"title":{"components/AppComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatButtonComponent.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"components/ProfileComponent.html":{},"components/ReleaseRubricComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appid",{"_index":176,"title":{},"body":{"interfaces/App.html":{},"modules/AppModule.html":{},"injectables/ProfileService.html":{},"interfaces/SteamApp.html":{},"miscellaneous/variables.html":{}}}],["applist",{"_index":1010,"title":{},"body":{"interfaces/SteamAppList.html":{}}}],["appmodule",{"_index":193,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appref",{"_index":906,"title":{},"body":{"injectables/ProfileService.html":{}}}],["appref.get",{"_index":908,"title":{},"body":{"injectables/ProfileService.html":{}}}],["approutingmodule",{"_index":204,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["apps",{"_index":312,"title":{"interfaces/Apps.html":{}},"body":{"interfaces/Apps.html":{},"components/NetworkComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"interfaces/SteamAppList.html":{},"coverage.html":{}}}],["apps.push(app.data",{"_index":703,"title":{},"body":{"components/NetworkComponent.html":{}}}],["area",{"_index":933,"title":{},"body":{"components/ReleaseRubricComponent.html":{}}}],["arising",{"_index":1162,"title":{},"body":{"license.html":{}}}],["array",{"_index":316,"title":{},"body":{"interfaces/Apps.html":{},"components/ProfileComponent.html":{}}}],["associated",{"_index":1112,"title":{},"body":{"license.html":{}}}],["async",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{}}}],["aurora",{"_index":132,"title":{},"body":{"components/AboutComponent.html":{}}}],["auth",{"_index":287,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"components/ProfileComponent.html":{}}}],["auth.googleauthprovider",{"_index":416,"title":{},"body":{"injectables/AuthService.html":{}}}],["auth.guard",{"_index":300,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["authdomain",{"_index":274,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["authguard",{"_index":299,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["author",{"_index":38,"title":{},"body":{"components/AboutComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChatButtonComponent.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"injectables/NetworkService.html":{},"injectables/NotificationService.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/SetupService.html":{}}}],["authors",{"_index":1152,"title":{},"body":{"license.html":{}}}],["authservice",{"_index":324,"title":{"injectables/AuthService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"components/ProfileComponent.html":{},"coverage.html":{}}}],["auto",{"_index":522,"title":{},"body":{"components/NavComponent.html":{}}}],["autodismiss",{"_index":291,"title":{},"body":{"modules/AppModule.html":{}}}],["available",{"_index":723,"title":{},"body":{"components/NetworkComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"modules.html":{}}}],["avatar",{"_index":533,"title":{},"body":{"components/NavComponent.html":{},"components/NetworkComponent.html":{},"components/ProfileComponent.html":{}}}],["await",{"_index":418,"title":{},"body":{"injectables/AuthService.html":{}}}],["awesome",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["b48ead",{"_index":137,"title":{},"body":{"components/AboutComponent.html":{}}}],["back",{"_index":829,"title":{},"body":{"components/ProfileComponent.html":{},"injectables/ProfileService.html":{}}}],["background",{"_index":470,"title":{},"body":{"components/ChatButtonComponent.html":{},"components/NavComponent.html":{}}}],["bar",{"_index":512,"title":{},"body":{"components/NavComponent.html":{}}}],["based",{"_index":51,"title":{},"body":{"components/AboutComponent.html":{},"components/NetworkComponent.html":{},"injectables/NetworkService.html":{},"index.html":{}}}],["behaviorsubject",{"_index":190,"title":{},"body":{"components/AppComponent.html":{}}}],["beta.2",{"_index":1068,"title":{},"body":{"dependencies.html":{}}}],["bf616a",{"_index":133,"title":{},"body":{"components/AboutComponent.html":{}}}],["bio",{"_index":501,"title":{},"body":{"components/FriendCardComponent.html":{},"components/NetworkComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/SetupService.html":{}}}],["block",{"_index":569,"title":{},"body":{"components/NavComponent.html":{},"components/NetworkComponent.html":{}}}],["body",{"_index":582,"title":{},"body":{"components/NavComponent.html":{}}}],["boilerplate",{"_index":580,"title":{},"body":{"components/NavComponent.html":{}}}],["bold",{"_index":576,"title":{},"body":{"components/NavComponent.html":{}}}],["boolean",{"_index":344,"title":{},"body":{"guards/AuthGuard.html":{},"components/NetworkComponent.html":{},"components/ProfileComponent.html":{}}}],["bootstrap",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":1053,"title":{},"body":{"dependencies.html":{}}}],["border",{"_index":455,"title":{},"body":{"components/ChatButtonComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"components/ProfileComponent.html":{}}}],["bottom",{"_index":476,"title":{},"body":{"components/ChatButtonComponent.html":{}}}],["bouncer",{"_index":358,"title":{},"body":{"guards/AuthGuard.html":{}}}],["box",{"_index":548,"title":{},"body":{"components/NavComponent.html":{}}}],["browse",{"_index":1167,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":212,"title":{},"body":{"modules/AppModule.html":{}}}],["bs",{"_index":1059,"title":{},"body":{"dependencies.html":{}}}],["btn",{"_index":446,"title":{},"body":{"components/ChatButtonComponent.html":{}}}],["build",{"_index":928,"title":{},"body":{"components/ReleaseRubricComponent.html":{}}}],["button",{"_index":437,"title":{},"body":{"components/ChatButtonComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{}}}],["button'},{'name",{"_index":155,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChatButtonComponent.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"components/ProfileComponent.html":{},"components/ReleaseRubricComponent.html":{}}}],["button.component",{"_index":268,"title":{},"body":{"modules/AppModule.html":{}}}],["button.component.html",{"_index":439,"title":{},"body":{"components/ChatButtonComponent.html":{}}}],["button.component.scss",{"_index":438,"title":{},"body":{"components/ChatButtonComponent.html":{}}}],["button.component.ts",{"_index":436,"title":{},"body":{"components/ChatButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:15",{"_index":440,"title":{},"body":{"components/ChatButtonComponent.html":{}}}],["button.component.ts:20",{"_index":441,"title":{},"body":{"components/ChatButtonComponent.html":{}}}],["button/chat",{"_index":267,"title":{},"body":{"modules/AppModule.html":{},"components/ChatButtonComponent.html":{},"coverage.html":{}}}],["button__icon",{"_index":566,"title":{},"body":{"components/NavComponent.html":{}}}],["button__text",{"_index":574,"title":{},"body":{"components/NavComponent.html":{}}}],["buttons",{"_index":540,"title":{},"body":{"components/NavComponent.html":{}}}],["c",{"_index":1101,"title":{},"body":{"license.html":{}}}],["calls",{"_index":896,"title":{},"body":{"injectables/ProfileService.html":{}}}],["canactivate",{"_index":309,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["canactivate(next",{"_index":329,"title":{},"body":{"guards/AuthGuard.html":{}}}],["card",{"_index":491,"title":{},"body":{"components/FriendCardComponent.html":{}}}],["card'},{'name",{"_index":157,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChatButtonComponent.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"components/ProfileComponent.html":{},"components/ReleaseRubricComponent.html":{}}}],["card.component",{"_index":266,"title":{},"body":{"modules/AppModule.html":{}}}],["card.component.html",{"_index":493,"title":{},"body":{"components/FriendCardComponent.html":{}}}],["card.component.scss",{"_index":492,"title":{},"body":{"components/FriendCardComponent.html":{}}}],["card.component.ts",{"_index":490,"title":{},"body":{"components/FriendCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:19",{"_index":495,"title":{},"body":{"components/FriendCardComponent.html":{}}}],["card.component.ts:24",{"_index":497,"title":{},"body":{"components/FriendCardComponent.html":{}}}],["card/friend",{"_index":265,"title":{},"body":{"modules/AppModule.html":{},"components/FriendCardComponent.html":{},"coverage.html":{}}}],["center",{"_index":465,"title":{},"body":{"components/ChatButtonComponent.html":{},"components/NavComponent.html":{},"injectables/NotificationService.html":{}}}],["charge",{"_index":1107,"title":{},"body":{"license.html":{}}}],["chat",{"_index":154,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatButtonComponent.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"components/ProfileComponent.html":{},"components/ReleaseRubricComponent.html":{}}}],["chatbuttoncomponent",{"_index":153,"title":{"components/ChatButtonComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatButtonComponent.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"components/ProfileComponent.html":{},"components/ReleaseRubricComponent.html":{},"coverage.html":{},"overview.html":{}}}],["check",{"_index":827,"title":{},"body":{"components/ProfileComponent.html":{}}}],["child",{"_index":653,"title":{},"body":{"components/NetworkComponent.html":{}}}],["chips",{"_index":797,"title":{},"body":{"interfaces/Profile.html":{}}}],["chlebek",{"_index":40,"title":{},"body":{"components/AboutComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChatButtonComponent.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"injectables/NetworkService.html":{},"index.html":{},"license.html":{}}}],["circle",{"_index":458,"title":{},"body":{"components/ChatButtonComponent.html":{}}}],["circle.btn",{"_index":447,"title":{},"body":{"components/ChatButtonComponent.html":{}}}],["cis",{"_index":59,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["claim",{"_index":1155,"title":{},"body":{"license.html":{}}}],["class",{"_index":48,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChatButtonComponent.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"injectables/NetworkService.html":{},"injectables/NotificationService.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"components/ReleaseRubricComponent.html":{},"injectables/SetupService.html":{}}}],["clickable",{"_index":637,"title":{},"body":{"components/NetworkComponent.html":{}}}],["client",{"_index":795,"title":{},"body":{"interfaces/Profile.html":{},"injectables/SetupService.html":{}}}],["closebutton",{"_index":781,"title":{},"body":{"injectables/NotificationService.html":{}}}],["cluster_appmodule",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":203,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":202,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":113,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["colin",{"_index":510,"title":{},"body":{"components/NavComponent.html":{}}}],["collection",{"_index":303,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/SetupService.html":{}}}],["collin",{"_index":142,"title":{},"body":{"components/AboutComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChatButtonComponent.html":{},"components/FriendCardComponent.html":{},"components/NetworkComponent.html":{},"injectables/NetworkService.html":{},"injectables/NotificationService.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/SetupService.html":{},"index.html":{},"license.html":{}}}],["color",{"_index":114,"title":{},"body":{"components/AboutComponent.html":{},"components/ChatButtonComponent.html":{},"components/NavComponent.html":{}}}],["color:white",{"_index":538,"title":{},"body":{"components/NavComponent.html":{}}}],["come",{"_index":828,"title":{},"body":{"components/ProfileComponent.html":{},"components/ReleaseRubricComponent.html":{}}}],["coming",{"_index":1094,"title":{},"body":{"index.html":{}}}],["comm",{"_index":486,"title":{},"body":{"interfaces/CommunicationPlatform.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{}}}],["comm.data",{"_index":697,"title":{},"body":{"components/NetworkComponent.html":{},"components/ProfileComponent.html":{}}}],["comm.name",{"_index":871,"title":{},"body":{"components/ProfileComponent.html":{}}}],["commid",{"_index":886,"title":{},"body":{"injectables/ProfileService.html":{}}}],["comming",{"_index":824,"title":{},"body":{"components/ProfileComponent.html":{}}}],["commref",{"_index":903,"title":{},"body":{"injectables/ProfileService.html":{}}}],["commref.get",{"_index":905,"title":{},"body":{"injectables/ProfileService.html":{}}}],["comms",{"_index":887,"title":{},"body":{"injectables/ProfileService.html":{},"injectables/SetupService.html":{}}}],["commscollection",{"_index":938,"title":{},"body":{"injectables/SetupService.html":{}}}],["communication",{"_index":484,"title":{},"body":{"interfaces/CommunicationPlatform.html":{},"components/NetworkComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{}}}],["communicationplatform",{"_index":481,"title":{"interfaces/CommunicationPlatform.html":{}},"body":{"interfaces/CommunicationPlatform.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/SetupService.html":{},"coverage.html":{}}}],["communicationplatformid",{"_index":791,"title":{},"body":{"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/SetupService.html":{}}}],["component",{"_index":0,"title":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChatButtonComponent.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"components/ProfileComponent.html":{},"components/ReleaseRubricComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/ChatButtonComponent.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"components/ProfileComponent.html":{},"components/ReleaseRubricComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":148,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChatButtonComponent.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"components/ProfileComponent.html":{},"components/ReleaseRubricComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChatButtonComponent.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"components/ProfileComponent.html":{},"components/ReleaseRubricComponent.html":{},"overview.html":{}}}],["conditions",{"_index":1132,"title":{},"body":{"license.html":{}}}],["config",{"_index":271,"title":{},"body":{"modules/AppModule.html":{},"components/NetworkComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configuration",{"_index":269,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["connect",{"_index":65,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["connection",{"_index":1163,"title":{},"body":{"license.html":{}}}],["console",{"_index":658,"title":{},"body":{"components/NetworkComponent.html":{}}}],["console.log('acess",{"_index":373,"title":{},"body":{"guards/AuthGuard.html":{}}}],["const",{"_index":270,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/NetworkService.html":{},"injectables/ProfileService.html":{},"injectables/SetupService.html":{}}}],["constructor",{"_index":26,"title":{},"body":{"components/AboutComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChatButtonComponent.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"injectables/NetworkService.html":{},"injectables/NotificationService.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"components/ReleaseRubricComponent.html":{},"injectables/SetupService.html":{}}}],["constructor(afauth",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(afs",{"_index":740,"title":{},"body":{"injectables/NetworkService.html":{},"injectables/ProfileService.html":{},"injectables/SetupService.html":{}}}],["constructor(auth",{"_index":323,"title":{},"body":{"guards/AuthGuard.html":{},"components/NavComponent.html":{}}}],["constructor(dialog",{"_index":602,"title":{},"body":{"components/NetworkComponent.html":{}}}],["constructor(private",{"_index":365,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/NetworkService.html":{},"injectables/NotificationService.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/SetupService.html":{}}}],["constructor(public",{"_index":513,"title":{},"body":{"components/NavComponent.html":{}}}],["constructor(route",{"_index":811,"title":{},"body":{"components/ProfileComponent.html":{}}}],["constructor(toastr",{"_index":758,"title":{},"body":{"injectables/NotificationService.html":{}}}],["constructs",{"_index":362,"title":{},"body":{"guards/AuthGuard.html":{}}}],["container",{"_index":518,"title":{},"body":{"components/NavComponent.html":{}}}],["contains",{"_index":917,"title":{},"body":{"components/ReleaseRubricComponent.html":{}}}],["content",{"_index":587,"title":{},"body":{"components/NavComponent.html":{}}}],["contract",{"_index":1159,"title":{},"body":{"license.html":{}}}],["controller",{"_index":819,"title":{},"body":{"components/ProfileComponent.html":{}}}],["copies",{"_index":1126,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1110,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1100,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":1015,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":876,"title":{},"body":{"components/ProfileComponent.html":{},"components/ReleaseRubricComponent.html":{}}}],["created",{"_index":58,"title":{},"body":{"components/AboutComponent.html":{},"components/ReleaseRubricComponent.html":{},"index.html":{}}}],["creates",{"_index":29,"title":{},"body":{"components/AboutComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChatButtonComponent.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"injectables/NetworkService.html":{},"injectables/NotificationService.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"components/ReleaseRubricComponent.html":{},"injectables/SetupService.html":{}}}],["creation",{"_index":81,"title":{},"body":{"components/AboutComponent.html":{},"components/ReleaseRubricComponent.html":{},"index.html":{}}}],["credential",{"_index":417,"title":{},"body":{"injectables/AuthService.html":{}}}],["css",{"_index":108,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["current",{"_index":341,"title":{},"body":{"guards/AuthGuard.html":{},"components/NavComponent.html":{}}}],["custom_elements_schema",{"_index":217,"title":{},"body":{"modules/AppModule.html":{}}}],["d08770",{"_index":134,"title":{},"body":{"components/AboutComponent.html":{}}}],["d8dee9",{"_index":124,"title":{},"body":{"components/AboutComponent.html":{}}}],["damages",{"_index":1156,"title":{},"body":{"license.html":{}}}],["data",{"_index":401,"title":{},"body":{"injectables/AuthService.html":{},"components/ProfileComponent.html":{},"injectables/SetupService.html":{}}}],["databaseurl",{"_index":276,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["day",{"_index":487,"title":{"interfaces/Day.html":{}},"body":{"interfaces/Day.html":{},"components/NetworkComponent.html":{},"components/ProfileComponent.html":{},"injectables/SetupService.html":{},"coverage.html":{}}}],["day(s",{"_index":724,"title":{},"body":{"components/NetworkComponent.html":{},"components/ProfileComponent.html":{}}}],["days",{"_index":792,"title":{},"body":{"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/SetupService.html":{}}}],["dayscollection",{"_index":939,"title":{},"body":{"injectables/SetupService.html":{}}}],["deal",{"_index":1113,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1164,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":196,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["declarions",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["decline",{"_index":598,"title":{},"body":{"components/NetworkComponent.html":{}}}],["decline(prof",{"_index":620,"title":{},"body":{"components/NetworkComponent.html":{}}}],["declines",{"_index":622,"title":{},"body":{"components/NetworkComponent.html":{}}}],["decorators",{"_index":647,"title":{},"body":{"components/NetworkComponent.html":{}}}],["default",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"components/NetworkComponent.html":{},"components/ProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":27,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChatButtonComponent.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"injectables/NetworkService.html":{},"injectables/NotificationService.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"components/ReleaseRubricComponent.html":{},"injectables/SetupService.html":{}}}],["defines",{"_index":310,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/NotificationService.html":{},"injectables/ProfileService.html":{},"injectables/SetupService.html":{}}}],["demo",{"_index":1083,"title":{},"body":{"index.html":{}}}],["denied",{"_index":374,"title":{},"body":{"guards/AuthGuard.html":{}}}],["dependencies",{"_index":195,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependicies",{"_index":364,"title":{},"body":{"guards/AuthGuard.html":{}}}],["desc",{"_index":977,"title":{},"body":{"injectables/SetupService.html":{}}}],["description",{"_index":11,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/App.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Apps.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChatButtonComponent.html":{},"interfaces/CommunicationPlatform.html":{},"interfaces/Day.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"injectables/NetworkService.html":{},"injectables/NotificationService.html":{},"interfaces/Platform.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"interfaces/Region.html":{},"components/ReleaseRubricComponent.html":{},"injectables/SetupService.html":{},"interfaces/SteamApp.html":{},"interfaces/SteamAppList.html":{},"interfaces/User.html":{}}}],["details",{"_index":1096,"title":{},"body":{"index.html":{}}}],["determines",{"_index":334,"title":{},"body":{"guards/AuthGuard.html":{},"components/NetworkComponent.html":{},"components/ProfileComponent.html":{}}}],["developer",{"_index":1005,"title":{},"body":{"interfaces/SteamApp.html":{}}}],["dialog",{"_index":593,"title":{},"body":{"components/NetworkComponent.html":{}}}],["different",{"_index":926,"title":{},"body":{"components/ReleaseRubricComponent.html":{}}}],["directive",{"_index":146,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChatButtonComponent.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"components/ProfileComponent.html":{},"components/ReleaseRubricComponent.html":{}}}],["directives",{"_index":167,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChatButtonComponent.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"components/ProfileComponent.html":{},"components/ReleaseRubricComponent.html":{}}}],["disabled",{"_index":1182,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disabletimeout",{"_index":778,"title":{},"body":{"injectables/NotificationService.html":{}}}],["display",{"_index":567,"title":{},"body":{"components/NavComponent.html":{},"components/NetworkComponent.html":{},"interfaces/Profile.html":{}}}],["displayed",{"_index":767,"title":{},"body":{"injectables/NotificationService.html":{}}}],["displayname",{"_index":429,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/SetupService.html":{},"interfaces/User.html":{}}}],["distribute",{"_index":1122,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":1016,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["documentdata",{"_index":672,"title":{},"body":{"components/NetworkComponent.html":{},"components/ProfileComponent.html":{}}}],["documentsnapshot",{"_index":661,"title":{},"body":{"components/NetworkComponent.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChatButtonComponent.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"components/ProfileComponent.html":{},"components/ReleaseRubricComponent.html":{}}}],["downloads",{"_index":922,"title":{},"body":{"components/ReleaseRubricComponent.html":{}}}],["duration",{"_index":554,"title":{},"body":{"components/NavComponent.html":{}}}],["dynamic",{"_index":1052,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":1091,"title":{},"body":{"index.html":{}}}],["e5e5e5",{"_index":563,"title":{},"body":{"components/NavComponent.html":{}}}],["e5e9f0",{"_index":125,"title":{},"body":{"components/AboutComponent.html":{}}}],["ease",{"_index":558,"title":{},"body":{"components/NavComponent.html":{}}}],["ebcb8b",{"_index":135,"title":{},"body":{"components/AboutComponent.html":{}}}],["eceef4",{"_index":126,"title":{},"body":{"components/AboutComponent.html":{}}}],["el",{"_index":636,"title":{},"body":{"components/NetworkComponent.html":{}}}],["element",{"_index":145,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChatButtonComponent.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"components/ProfileComponent.html":{},"components/ReleaseRubricComponent.html":{}}}],["email",{"_index":427,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["emal",{"_index":1013,"title":{},"body":{"interfaces/User.html":{}}}],["enabled",{"_index":1181,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enablehtml",{"_index":783,"title":{},"body":{"injectables/NotificationService.html":{}}}],["end",{"_index":87,"title":{},"body":{"components/AboutComponent.html":{},"injectables/AuthService.html":{},"components/ChatButtonComponent.html":{},"components/FriendCardComponent.html":{},"components/NetworkComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"components/ReleaseRubricComponent.html":{},"index.html":{}}}],["ended",{"_index":44,"title":{},"body":{"components/AboutComponent.html":{}}}],["entrycomponents",{"_index":293,"title":{},"body":{"modules/AppModule.html":{}}}],["environment",{"_index":1040,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":524,"title":{},"body":{"components/NavComponent.html":{},"components/NetworkComponent.html":{},"injectables/NotificationService.html":{},"components/ProfileComponent.html":{}}}],["event",{"_index":1151,"title":{},"body":{"license.html":{}}}],["execute",{"_index":1089,"title":{},"body":{"index.html":{}}}],["exists",{"_index":685,"title":{},"body":{"components/NetworkComponent.html":{},"components/ProfileComponent.html":{}}}],["export",{"_index":47,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/App.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Apps.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChatButtonComponent.html":{},"interfaces/CommunicationPlatform.html":{},"interfaces/Day.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"injectables/NetworkService.html":{},"injectables/NotificationService.html":{},"interfaces/Platform.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"interfaces/Region.html":{},"components/ReleaseRubricComponent.html":{},"injectables/SetupService.html":{},"interfaces/SteamApp.html":{},"interfaces/SteamAppList.html":{},"interfaces/User.html":{}}}],["exports",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["express",{"_index":1142,"title":{},"body":{"license.html":{}}}],["f0f0f0",{"_index":583,"title":{},"body":{"components/NavComponent.html":{}}}],["false",{"_index":650,"title":{},"body":{"components/NetworkComponent.html":{},"components/ProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":577,"title":{},"body":{"components/NavComponent.html":{}}}],["feature",{"_index":72,"title":{},"body":{"components/AboutComponent.html":{},"components/ReleaseRubricComponent.html":{},"index.html":{}}}],["features",{"_index":919,"title":{},"body":{"components/ReleaseRubricComponent.html":{}}}],["few",{"_index":918,"title":{},"body":{"components/ReleaseRubricComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/App.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Apps.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChatButtonComponent.html":{},"interfaces/CommunicationPlatform.html":{},"interfaces/Day.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"injectables/NetworkService.html":{},"injectables/NotificationService.html":{},"interfaces/Platform.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"interfaces/Region.html":{},"components/ReleaseRubricComponent.html":{},"injectables/SetupService.html":{},"interfaces/SteamApp.html":{},"interfaces/SteamAppList.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["files",{"_index":1099,"title":{},"body":{"index.html":{},"license.html":{}}}],["fills",{"_index":628,"title":{},"body":{"components/NetworkComponent.html":{},"components/ProfileComponent.html":{}}}],["find",{"_index":69,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["findfriends",{"_index":599,"title":{},"body":{"components/NetworkComponent.html":{}}}],["finds",{"_index":625,"title":{},"body":{"components/NetworkComponent.html":{}}}],["fire",{"_index":389,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SetupService.html":{}}}],["firebase",{"_index":109,"title":{},"body":{"components/AboutComponent.html":{},"modules/AppModule.html":{},"components/NetworkComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["firebase/app",{"_index":403,"title":{},"body":{"injectables/AuthService.html":{}}}],["firestore",{"_index":286,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/SetupService.html":{},"index.html":{}}}],["first",{"_index":916,"title":{},"body":{"components/ReleaseRubricComponent.html":{}}}],["firstore",{"_index":614,"title":{},"body":{"components/NetworkComponent.html":{}}}],["fitness",{"_index":1147,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":475,"title":{},"body":{"components/ChatButtonComponent.html":{}}}],["flex",{"_index":584,"title":{},"body":{"components/NavComponent.html":{}}}],["focus",{"_index":559,"title":{},"body":{"components/NavComponent.html":{}}}],["focused",{"_index":934,"title":{},"body":{"components/ReleaseRubricComponent.html":{}}}],["following",{"_index":1131,"title":{},"body":{"license.html":{}}}],["font",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"components/ChatButtonComponent.html":{},"components/NavComponent.html":{},"dependencies.html":{}}}],["formsmodule",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":683,"title":{},"body":{"components/NetworkComponent.html":{},"components/ProfileComponent.html":{}}}],["framework/plugins",{"_index":97,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["free",{"_index":1106,"title":{},"body":{"license.html":{}}}],["fri",{"_index":729,"title":{},"body":{"components/NetworkComponent.html":{},"components/ProfileComponent.html":{}}}],["friend",{"_index":52,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatButtonComponent.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"components/ProfileComponent.html":{},"components/ReleaseRubricComponent.html":{},"index.html":{}}}],["friend.bio",{"_index":502,"title":{},"body":{"components/FriendCardComponent.html":{}}}],["friend.displayname",{"_index":500,"title":{},"body":{"components/FriendCardComponent.html":{}}}],["friendcardcomponent",{"_index":156,"title":{"components/FriendCardComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatButtonComponent.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"components/ProfileComponent.html":{},"components/ReleaseRubricComponent.html":{},"coverage.html":{},"overview.html":{}}}],["friends",{"_index":70,"title":{},"body":{"components/AboutComponent.html":{},"components/FriendCardComponent.html":{},"components/NetworkComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/ReleaseRubricComponent.html":{},"injectables/SetupService.html":{},"index.html":{}}}],["friends.push(friendsnapshot.data",{"_index":863,"title":{},"body":{"components/ProfileComponent.html":{}}}],["friendsnapshot.exists",{"_index":862,"title":{},"body":{"components/ProfileComponent.html":{}}}],["friendswiper",{"_index":594,"title":{},"body":{"components/NetworkComponent.html":{}}}],["fromsaved",{"_index":808,"title":{},"body":{"components/ProfileComponent.html":{}}}],["front",{"_index":43,"title":{},"body":{"components/AboutComponent.html":{},"components/ChatButtonComponent.html":{},"components/FriendCardComponent.html":{},"components/ProfileComponent.html":{},"components/ReleaseRubricComponent.html":{},"index.html":{}}}],["frost",{"_index":127,"title":{},"body":{"components/AboutComponent.html":{}}}],["full",{"_index":307,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":557,"title":{},"body":{"components/NavComponent.html":{}}}],["furnished",{"_index":1129,"title":{},"body":{"license.html":{}}}],["game",{"_index":86,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/Profile.html":{},"components/ReleaseRubricComponent.html":{},"injectables/SetupService.html":{},"index.html":{}}}],["gamers",{"_index":54,"title":{},"body":{"components/AboutComponent.html":{}}}],["games",{"_index":64,"title":{},"body":{"components/AboutComponent.html":{},"components/NetworkComponent.html":{},"components/ProfileComponent.html":{},"components/ReleaseRubricComponent.html":{},"injectables/SetupService.html":{},"index.html":{}}}],["gaming",{"_index":1081,"title":{},"body":{"index.html":{}}}],["getcomm",{"_index":879,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getcomm(commid",{"_index":884,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getcomms",{"_index":943,"title":{},"body":{"injectables/SetupService.html":{}}}],["getdays",{"_index":944,"title":{},"body":{"injectables/SetupService.html":{}}}],["getfiresteamgamelist",{"_index":945,"title":{},"body":{"injectables/SetupService.html":{}}}],["getplatform",{"_index":880,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getplatform(platformid",{"_index":888,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getplatforms",{"_index":946,"title":{},"body":{"injectables/SetupService.html":{}}}],["getprofile",{"_index":600,"title":{},"body":{"components/NetworkComponent.html":{},"components/ProfileComponent.html":{},"injectables/SetupService.html":{}}}],["getprofile(uid",{"_index":957,"title":{},"body":{"injectables/SetupService.html":{}}}],["getprofiles",{"_index":739,"title":{},"body":{"injectables/NetworkService.html":{}}}],["getprofiles(prof",{"_index":742,"title":{},"body":{"injectables/NetworkService.html":{}}}],["getregion",{"_index":881,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getregion(regionid",{"_index":891,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getregions",{"_index":947,"title":{},"body":{"injectables/SetupService.html":{}}}],["gets",{"_index":627,"title":{},"body":{"components/NetworkComponent.html":{},"injectables/NetworkService.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/SetupService.html":{}}}],["getsteamapp",{"_index":882,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getsteamapp(appid",{"_index":894,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getting",{"_index":1079,"title":{"index.html":{},"license.html":{}},"body":{}}],["github",{"_index":56,"title":{},"body":{"components/AboutComponent.html":{},"components/ReleaseRubricComponent.html":{}}}],["google",{"_index":78,"title":{},"body":{"components/AboutComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"components/ProfileComponent.html":{},"components/ReleaseRubricComponent.html":{},"interfaces/User.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["googlesignin",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{}}}],["granted",{"_index":1105,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1168,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":318,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"overview.html":{}}}],["guards",{"_index":319,"title":{},"body":{"guards/AuthGuard.html":{}}}],["guidelines",{"_index":542,"title":{},"body":{"components/NavComponent.html":{}}}],["handles",{"_index":442,"title":{},"body":{"components/ChatButtonComponent.html":{},"components/FriendCardComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/SetupService.html":{}}}],["hard",{"_index":733,"title":{},"body":{"components/NetworkComponent.html":{}}}],["hashmap",{"_index":49,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ReleaseRubricComponent.html":{},"index.html":{}}}],["hashmaporbyt",{"_index":279,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["hashmaporbyt.appspot.com",{"_index":281,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["hashmaporbyt.firebaseapp.com",{"_index":275,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["height",{"_index":451,"title":{},"body":{"components/ChatButtonComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{}}}],["hello",{"_index":517,"title":{},"body":{"components/NavComponent.html":{}}}],["here",{"_index":515,"title":{},"body":{"components/NavComponent.html":{}}}],["hereby",{"_index":1104,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":473,"title":{},"body":{"components/ChatButtonComponent.html":{}}}],["holders",{"_index":1153,"title":{},"body":{"license.html":{}}}],["home",{"_index":516,"title":{},"body":{"components/NavComponent.html":{}}}],["hover",{"_index":560,"title":{},"body":{"components/NavComponent.html":{}}}],["html",{"_index":105,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChatButtonComponent.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"components/ProfileComponent.html":{},"components/ReleaseRubricComponent.html":{},"index.html":{}}}],["htmlmessage",{"_index":772,"title":{},"body":{"injectables/NotificationService.html":{}}}],["http",{"_index":949,"title":{},"body":{"injectables/SetupService.html":{}}}],["httpclient",{"_index":950,"title":{},"body":{"injectables/SetupService.html":{}}}],["httpclientmodule",{"_index":238,"title":{},"body":{"modules/AppModule.html":{}}}],["https://developers.google.com/+/branding",{"_index":541,"title":{},"body":{"components/NavComponent.html":{}}}],["https://hashmaporbyt.firebaseio.com",{"_index":277,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":179,"title":{},"body":{"interfaces/App.html":{},"interfaces/CommunicationPlatform.html":{},"interfaces/Day.html":{},"components/NetworkComponent.html":{},"interfaces/Platform.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"interfaces/Region.html":{},"injectables/SetupService.html":{},"interfaces/SteamApp.html":{},"interfaces/User.html":{}}}],["idea",{"_index":930,"title":{},"body":{"components/ReleaseRubricComponent.html":{}}}],["identifier",{"_index":1017,"title":{},"body":{"coverage.html":{}}}],["identity",{"_index":539,"title":{},"body":{"components/NavComponent.html":{}}}],["img",{"_index":530,"title":{},"body":{"components/NavComponent.html":{}}}],["implements",{"_index":14,"title":{},"body":{"components/AboutComponent.html":{},"guards/AuthGuard.html":{},"components/ChatButtonComponent.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"components/ProfileComponent.html":{},"components/ReleaseRubricComponent.html":{}}}],["implied",{"_index":1143,"title":{},"body":{"license.html":{}}}],["import",{"_index":36,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Apps.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChatButtonComponent.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"injectables/NetworkService.html":{},"injectables/NotificationService.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"components/ReleaseRubricComponent.html":{},"injectables/SetupService.html":{},"interfaces/SteamAppList.html":{}}}],["imports",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["included",{"_index":1136,"title":{},"body":{"license.html":{}}}],["including",{"_index":1116,"title":{},"body":{"license.html":{}}}],["index",{"_index":23,"title":{"index.html":{}},"body":{"components/AboutComponent.html":{},"interfaces/App.html":{},"components/AppComponent.html":{},"interfaces/Apps.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChatButtonComponent.html":{},"interfaces/CommunicationPlatform.html":{},"interfaces/Day.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"injectables/NetworkService.html":{},"injectables/NotificationService.html":{},"interfaces/Platform.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"interfaces/Region.html":{},"components/ReleaseRubricComponent.html":{},"injectables/SetupService.html":{},"interfaces/SteamApp.html":{},"interfaces/SteamAppList.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/App.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Apps.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChatButtonComponent.html":{},"interfaces/CommunicationPlatform.html":{},"interfaces/Day.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"injectables/NetworkService.html":{},"injectables/NotificationService.html":{},"interfaces/Platform.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"interfaces/Region.html":{},"components/ReleaseRubricComponent.html":{},"injectables/SetupService.html":{},"interfaces/SteamApp.html":{},"interfaces/SteamAppList.html":{},"interfaces/User.html":{}}}],["information",{"_index":45,"title":{},"body":{"components/AboutComponent.html":{}}}],["initialization",{"_index":32,"title":{},"body":{"components/AboutComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"components/ProfileComponent.html":{},"components/ReleaseRubricComponent.html":{}}}],["injectable",{"_index":321,"title":{"injectables/AuthService.html":{},"injectables/NetworkService.html":{},"injectables/NotificationService.html":{},"injectables/ProfileService.html":{},"injectables/SetupService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/NetworkService.html":{},"injectables/NotificationService.html":{},"injectables/ProfileService.html":{},"injectables/SetupService.html":{},"coverage.html":{}}}],["injectables",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{},"injectables/NetworkService.html":{},"injectables/NotificationService.html":{},"injectables/ProfileService.html":{},"injectables/SetupService.html":{},"overview.html":{}}}],["inline",{"_index":568,"title":{},"body":{"components/NavComponent.html":{}}}],["input",{"_index":496,"title":{},"body":{"components/FriendCardComponent.html":{}}}],["inputs",{"_index":494,"title":{},"body":{"components/FriendCardComponent.html":{}}}],["instance",{"_index":30,"title":{},"body":{"components/AboutComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChatButtonComponent.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"injectables/NetworkService.html":{},"injectables/NotificationService.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"components/ReleaseRubricComponent.html":{},"injectables/SetupService.html":{}}}],["interests",{"_index":801,"title":{},"body":{"interfaces/Profile.html":{}}}],["interface",{"_index":171,"title":{"interfaces/App.html":{},"interfaces/Apps.html":{},"interfaces/CommunicationPlatform.html":{},"interfaces/Day.html":{},"interfaces/Platform.html":{},"interfaces/Profile.html":{},"interfaces/Region.html":{},"interfaces/SteamApp.html":{},"interfaces/SteamAppList.html":{},"interfaces/User.html":{}},"body":{"interfaces/App.html":{},"interfaces/Apps.html":{},"interfaces/CommunicationPlatform.html":{},"interfaces/Day.html":{},"interfaces/Platform.html":{},"interfaces/Profile.html":{},"interfaces/Region.html":{},"interfaces/SteamApp.html":{},"interfaces/SteamAppList.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":172,"title":{},"body":{"interfaces/App.html":{},"interfaces/Apps.html":{},"interfaces/CommunicationPlatform.html":{},"interfaces/Day.html":{},"interfaces/Platform.html":{},"interfaces/Profile.html":{},"interfaces/Region.html":{},"interfaces/SteamApp.html":{},"interfaces/SteamAppList.html":{},"interfaces/User.html":{},"overview.html":{}}}],["ip",{"_index":935,"title":{},"body":{"components/ReleaseRubricComponent.html":{}}}],["isdayselected",{"_index":601,"title":{},"body":{"components/NetworkComponent.html":{},"components/ProfileComponent.html":{}}}],["isdayselected(id",{"_index":816,"title":{},"body":{"components/ProfileComponent.html":{}}}],["isdayselected(profile",{"_index":630,"title":{},"body":{"components/NetworkComponent.html":{}}}],["isloaded",{"_index":809,"title":{},"body":{"components/ProfileComponent.html":{}}}],["isloggedin",{"_index":322,"title":{},"body":{"guards/AuthGuard.html":{}}}],["issue",{"_index":676,"title":{},"body":{"components/NetworkComponent.html":{},"components/ProfileComponent.html":{}}}],["items",{"_index":585,"title":{},"body":{"components/NavComponent.html":{}}}],["jasime",{"_index":106,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["javascript",{"_index":110,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["jquery",{"_index":1064,"title":{},"body":{"dependencies.html":{}}}],["july",{"_index":76,"title":{},"body":{"components/AboutComponent.html":{},"components/ReleaseRubricComponent.html":{},"index.html":{}}}],["justify",{"_index":586,"title":{},"body":{"components/NavComponent.html":{}}}],["karma",{"_index":107,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["keyboard",{"_index":641,"title":{},"body":{"components/NetworkComponent.html":{}}}],["kind",{"_index":1141,"title":{},"body":{"license.html":{}}}],["languages",{"_index":96,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["larson",{"_index":143,"title":{},"body":{"components/AboutComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChatButtonComponent.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"injectables/NetworkService.html":{},"injectables/NotificationService.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/SetupService.html":{},"index.html":{},"license.html":{}}}],["last",{"_index":925,"title":{},"body":{"components/ReleaseRubricComponent.html":{}}}],["left",{"_index":588,"title":{},"body":{"components/NavComponent.html":{}}}],["left:auto",{"_index":736,"title":{},"body":{"components/NetworkComponent.html":{}}}],["legend",{"_index":144,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatButtonComponent.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"components/ProfileComponent.html":{},"components/ReleaseRubricComponent.html":{},"overview.html":{}}}],["liability",{"_index":1157,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1154,"title":{},"body":{"license.html":{}}}],["license",{"_index":141,"title":{"license.html":{}},"body":{"components/AboutComponent.html":{},"index.html":{},"license.html":{}}}],["licensed",{"_index":138,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["limitation",{"_index":1117,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1144,"title":{},"body":{"license.html":{}}}],["line",{"_index":468,"title":{},"body":{"components/ChatButtonComponent.html":{}}}],["link",{"_index":921,"title":{},"body":{"components/ReleaseRubricComponent.html":{},"index.html":{}}}],["linking",{"_index":85,"title":{},"body":{"components/AboutComponent.html":{},"components/ReleaseRubricComponent.html":{},"index.html":{}}}],["links",{"_index":13,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"components/ProfileComponent.html":{},"components/ReleaseRubricComponent.html":{}}}],["list",{"_index":73,"title":{},"body":{"components/AboutComponent.html":{},"components/FriendCardComponent.html":{},"components/NetworkComponent.html":{},"injectables/NetworkService.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/ReleaseRubricComponent.html":{},"injectables/SetupService.html":{},"interfaces/SteamAppList.html":{},"index.html":{}}}],["list.model.ts",{"_index":1009,"title":{},"body":{"interfaces/SteamAppList.html":{},"coverage.html":{}}}],["live",{"_index":1082,"title":{},"body":{"index.html":{}}}],["loading",{"_index":842,"title":{},"body":{"components/ProfileComponent.html":{}}}],["location",{"_index":50,"title":{},"body":{"components/AboutComponent.html":{},"components/ReleaseRubricComponent.html":{},"index.html":{}}}],["lodash",{"_index":665,"title":{},"body":{"components/NetworkComponent.html":{},"components/ProfileComponent.html":{},"dependencies.html":{}}}],["logged",{"_index":348,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["loggedin",{"_index":372,"title":{},"body":{"guards/AuthGuard.html":{}}}],["logic",{"_index":443,"title":{},"body":{"components/ChatButtonComponent.html":{},"components/FriendCardComponent.html":{},"components/ProfileComponent.html":{}}}],["login",{"_index":422,"title":{},"body":{"injectables/AuthService.html":{},"components/NavComponent.html":{},"injectables/SetupService.html":{}}}],["logo",{"_index":514,"title":{},"body":{"components/NavComponent.html":{}}}],["main",{"_index":929,"title":{},"body":{"components/ReleaseRubricComponent.html":{}}}],["manage",{"_index":301,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/NotificationService.html":{}}}],["management",{"_index":83,"title":{},"body":{"components/AboutComponent.html":{},"components/ReleaseRubricComponent.html":{}}}],["managing",{"_index":407,"title":{},"body":{"injectables/AuthService.html":{}}}],["managment",{"_index":1092,"title":{},"body":{"index.html":{}}}],["many",{"_index":66,"title":{},"body":{"components/AboutComponent.html":{},"components/ReleaseRubricComponent.html":{},"index.html":{}}}],["map",{"_index":353,"title":{},"body":{"guards/AuthGuard.html":{}}}],["map(user",{"_index":370,"title":{},"body":{"guards/AuthGuard.html":{}}}],["margin",{"_index":521,"title":{},"body":{"components/NavComponent.html":{},"components/NetworkComponent.html":{}}}],["matautocompletemodule",{"_index":252,"title":{},"body":{"modules/AppModule.html":{}}}],["matbuttonmodule",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["matcheckboxmodule",{"_index":256,"title":{},"body":{"modules/AppModule.html":{}}}],["matching",{"_index":91,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/App.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Apps.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChatButtonComponent.html":{},"interfaces/CommunicationPlatform.html":{},"interfaces/Day.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"injectables/NetworkService.html":{},"injectables/NotificationService.html":{},"interfaces/Platform.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"interfaces/Region.html":{},"components/ReleaseRubricComponent.html":{},"injectables/SetupService.html":{},"interfaces/SteamApp.html":{},"interfaces/SteamAppList.html":{},"interfaces/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matchipsmodule",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["matdialog",{"_index":603,"title":{},"body":{"components/NetworkComponent.html":{}}}],["matdialogmodule",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["material",{"_index":611,"title":{},"body":{"components/NetworkComponent.html":{}}}],["matexpansionmodule",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["matformfieldmodule",{"_index":253,"title":{},"body":{"modules/AppModule.html":{}}}],["maticonmodule",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["matinputmodule",{"_index":254,"title":{},"body":{"modules/AppModule.html":{}}}],["matselectmodule",{"_index":258,"title":{},"body":{"modules/AppModule.html":{}}}],["mattablemodule",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["mattabsmodule",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["max",{"_index":519,"title":{},"body":{"components/NavComponent.html":{}}}],["maxopened",{"_index":290,"title":{},"body":{"modules/AppModule.html":{}}}],["menu",{"_index":88,"title":{},"body":{"components/AboutComponent.html":{},"components/ReleaseRubricComponent.html":{},"index.html":{}}}],["merchantability",{"_index":1146,"title":{},"body":{"license.html":{}}}],["merge",{"_index":434,"title":{},"body":{"injectables/AuthService.html":{},"license.html":{}}}],["message",{"_index":445,"title":{},"body":{"components/ChatButtonComponent.html":{},"injectables/NotificationService.html":{}}}],["messagebutton",{"_index":471,"title":{},"body":{"components/ChatButtonComponent.html":{}}}],["messagingsenderid",{"_index":282,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":16,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChatButtonComponent.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"components/ProfileComponent.html":{},"components/ReleaseRubricComponent.html":{}}}],["method",{"_index":394,"title":{},"body":{"injectables/AuthService.html":{}}}],["methods",{"_index":24,"title":{},"body":{"components/AboutComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChatButtonComponent.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"injectables/NetworkService.html":{},"injectables/NotificationService.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"components/ReleaseRubricComponent.html":{},"injectables/SetupService.html":{}}}],["middle",{"_index":535,"title":{},"body":{"components/NavComponent.html":{},"components/ProfileComponent.html":{}}}],["miscellaneous",{"_index":1173,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mismatch",{"_index":675,"title":{},"body":{"components/NetworkComponent.html":{},"components/ProfileComponent.html":{}}}],["mit",{"_index":140,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{},"license.html":{}}}],["model",{"_index":174,"title":{},"body":{"interfaces/App.html":{},"interfaces/Apps.html":{},"components/ChatButtonComponent.html":{},"interfaces/CommunicationPlatform.html":{},"interfaces/Day.html":{},"interfaces/Platform.html":{},"interfaces/Profile.html":{},"interfaces/Region.html":{},"interfaces/SteamApp.html":{},"interfaces/SteamAppList.html":{},"interfaces/User.html":{}}}],["model.ts",{"_index":314,"title":{},"body":{"interfaces/Apps.html":{},"coverage.html":{}}}],["models/communication",{"_index":971,"title":{},"body":{"injectables/SetupService.html":{}}}],["models/days.model",{"_index":970,"title":{},"body":{"injectables/SetupService.html":{}}}],["models/platform.model",{"_index":969,"title":{},"body":{"injectables/SetupService.html":{}}}],["models/profile.model",{"_index":972,"title":{},"body":{"injectables/SetupService.html":{}}}],["models/region.model",{"_index":968,"title":{},"body":{"injectables/SetupService.html":{}}}],["modify",{"_index":1120,"title":{},"body":{"license.html":{}}}],["module",{"_index":192,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/ReleaseRubricComponent.html":{},"overview.html":{}}}],["modules",{"_index":194,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["mon",{"_index":725,"title":{},"body":{"components/NetworkComponent.html":{},"components/ProfileComponent.html":{}}}],["ms",{"_index":769,"title":{},"body":{"injectables/NotificationService.html":{}}}],["name",{"_index":149,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/App.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChatButtonComponent.html":{},"interfaces/CommunicationPlatform.html":{},"interfaces/Day.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"injectables/NetworkService.html":{},"injectables/NotificationService.html":{},"interfaces/Platform.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"interfaces/Region.html":{},"components/ReleaseRubricComponent.html":{},"injectables/SetupService.html":{},"interfaces/SteamApp.html":{},"interfaces/User.html":{}}}],["nav",{"_index":504,"title":{},"body":{"components/NavComponent.html":{}}}],["nav'},{'name",{"_index":159,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChatButtonComponent.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"components/ProfileComponent.html":{},"components/ReleaseRubricComponent.html":{}}}],["nav.component.html",{"_index":506,"title":{},"body":{"components/NavComponent.html":{}}}],["nav.component.scss",{"_index":505,"title":{},"body":{"components/NavComponent.html":{}}}],["nav/nav.component",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["navcomponent",{"_index":158,"title":{"components/NavComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChatButtonComponent.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"components/ProfileComponent.html":{},"components/ReleaseRubricComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navigate",{"_index":874,"title":{},"body":{"components/ProfileComponent.html":{}}}],["navigation",{"_index":511,"title":{},"body":{"components/NavComponent.html":{},"components/NetworkComponent.html":{}}}],["near",{"_index":71,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["needed",{"_index":363,"title":{},"body":{"guards/AuthGuard.html":{}}}],["network",{"_index":308,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"injectables/NetworkService.html":{}}}],["network'},{'name",{"_index":161,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChatButtonComponent.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"components/ProfileComponent.html":{},"components/ReleaseRubricComponent.html":{}}}],["network.component.html",{"_index":592,"title":{},"body":{"components/NetworkComponent.html":{}}}],["network.component.scss",{"_index":591,"title":{},"body":{"components/NetworkComponent.html":{}}}],["network.service",{"_index":660,"title":{},"body":{"components/NetworkComponent.html":{}}}],["network/friend",{"_index":931,"title":{},"body":{"components/ReleaseRubricComponent.html":{}}}],["network/network.component",{"_index":248,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["networkcomponent",{"_index":160,"title":{"components/NetworkComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatButtonComponent.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"components/ProfileComponent.html":{},"components/ReleaseRubricComponent.html":{},"coverage.html":{},"overview.html":{}}}],["networkservice",{"_index":604,"title":{"injectables/NetworkService.html":{}},"body":{"components/NetworkComponent.html":{},"injectables/NetworkService.html":{},"coverage.html":{}}}],["new",{"_index":415,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["next",{"_index":339,"title":{},"body":{"guards/AuthGuard.html":{},"components/NetworkComponent.html":{}}}],["nextel",{"_index":638,"title":{},"body":{"components/NetworkComponent.html":{}}}],["ng",{"_index":209,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["ngmodule",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/NetworkComponent.html":{},"components/ProfileComponent.html":{}}}],["ngoninit",{"_index":25,"title":{},"body":{"components/AboutComponent.html":{},"components/ChatButtonComponent.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"components/ProfileComponent.html":{},"components/ReleaseRubricComponent.html":{}}}],["ngx",{"_index":245,"title":{},"body":{"modules/AppModule.html":{},"components/NetworkComponent.html":{},"injectables/NotificationService.html":{},"components/ProfileComponent.html":{},"dependencies.html":{}}}],["ngxusefulswipermodule",{"_index":262,"title":{},"body":{"modules/AppModule.html":{}}}],["night",{"_index":117,"title":{},"body":{"components/AboutComponent.html":{}}}],["no_errors_schema",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["none",{"_index":564,"title":{},"body":{"components/NavComponent.html":{}}}],["noninfringement",{"_index":1150,"title":{},"body":{"license.html":{}}}],["noprofile",{"_index":810,"title":{},"body":{"components/ProfileComponent.html":{}}}],["notice",{"_index":1134,"title":{},"body":{"license.html":{}}}],["notifcations",{"_index":302,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/NotificationService.html":{}}}],["notification",{"_index":612,"title":{},"body":{"components/NetworkComponent.html":{},"injectables/NotificationService.html":{}}}],["notificationservice",{"_index":607,"title":{"injectables/NotificationService.html":{}},"body":{"components/NetworkComponent.html":{},"injectables/NotificationService.html":{},"components/ProfileComponent.html":{},"coverage.html":{}}}],["nowrap",{"_index":547,"title":{},"body":{"components/NavComponent.html":{}}}],["null",{"_index":707,"title":{},"body":{"components/NetworkComponent.html":{},"components/ProfileComponent.html":{}}}],["number",{"_index":177,"title":{},"body":{"interfaces/App.html":{},"interfaces/CommunicationPlatform.html":{},"interfaces/Day.html":{},"components/NetworkComponent.html":{},"interfaces/Platform.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"interfaces/Region.html":{},"interfaces/SteamApp.html":{}}}],["object",{"_index":1179,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obserable",{"_index":402,"title":{},"body":{"injectables/AuthService.html":{}}}],["observable",{"_index":342,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/SetupService.html":{}}}],["obtaining",{"_index":1109,"title":{},"body":{"license.html":{}}}],["of(null",{"_index":413,"title":{},"body":{"injectables/AuthService.html":{}}}],["oninit",{"_index":15,"title":{},"body":{"components/AboutComponent.html":{},"components/ChatButtonComponent.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"components/ProfileComponent.html":{},"components/ReleaseRubricComponent.html":{}}}],["openeing",{"_index":444,"title":{},"body":{"components/ChatButtonComponent.html":{}}}],["optional",{"_index":328,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"injectables/NetworkService.html":{},"injectables/NotificationService.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/SetupService.html":{},"interfaces/User.html":{}}}],["options",{"_index":973,"title":{},"body":{"injectables/SetupService.html":{}}}],["otherwise",{"_index":1161,"title":{},"body":{"license.html":{}}}],["out",{"_index":207,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"components/ProfileComponent.html":{},"license.html":{},"overview.html":{}}}],["overflow",{"_index":472,"title":{},"body":{"components/ChatButtonComponent.html":{}}}],["overview",{"_index":1169,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1044,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":452,"title":{},"body":{"components/ChatButtonComponent.html":{},"components/NavComponent.html":{}}}],["page",{"_index":338,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{}}}],["pages",{"_index":359,"title":{},"body":{"guards/AuthGuard.html":{}}}],["pagination",{"_index":635,"title":{},"body":{"components/NetworkComponent.html":{}}}],["palette",{"_index":115,"title":{},"body":{"components/AboutComponent.html":{}}}],["param",{"_index":361,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"injectables/NetworkService.html":{},"injectables/NotificationService.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/SetupService.html":{}}}],["parameters",{"_index":327,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"injectables/NetworkService.html":{},"injectables/NotificationService.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/SetupService.html":{}}}],["params['saved",{"_index":845,"title":{},"body":{"components/ProfileComponent.html":{}}}],["particular",{"_index":1148,"title":{},"body":{"license.html":{}}}],["pass",{"_index":734,"title":{},"body":{"components/NetworkComponent.html":{}}}],["past",{"_index":674,"title":{},"body":{"components/NetworkComponent.html":{},"components/ProfileComponent.html":{}}}],["path",{"_index":304,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":306,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pdf",{"_index":923,"title":{},"body":{"components/ReleaseRubricComponent.html":{}}}],["people",{"_index":61,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["permission",{"_index":1103,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1127,"title":{},"body":{"license.html":{}}}],["person",{"_index":1108,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1128,"title":{},"body":{"license.html":{}}}],["photo",{"_index":529,"title":{},"body":{"components/NavComponent.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{}}}],["photourl",{"_index":431,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/SetupService.html":{},"interfaces/User.html":{}}}],["platform",{"_index":485,"title":{"interfaces/Platform.html":{}},"body":{"interfaces/CommunicationPlatform.html":{},"components/NetworkComponent.html":{},"interfaces/Platform.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/SetupService.html":{},"coverage.html":{},"index.html":{}}}],["platform.data",{"_index":700,"title":{},"body":{"components/NetworkComponent.html":{},"components/ProfileComponent.html":{}}}],["platform.model",{"_index":804,"title":{},"body":{"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/SetupService.html":{}}}],["platform.model.ts",{"_index":483,"title":{},"body":{"interfaces/CommunicationPlatform.html":{},"coverage.html":{}}}],["platform.name",{"_index":870,"title":{},"body":{"components/ProfileComponent.html":{}}}],["platformcollection",{"_index":940,"title":{},"body":{"injectables/SetupService.html":{}}}],["platformid",{"_index":793,"title":{},"body":{"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/SetupService.html":{}}}],["platforms",{"_index":890,"title":{},"body":{"injectables/ProfileService.html":{},"injectables/SetupService.html":{}}}],["platormref",{"_index":900,"title":{},"body":{"injectables/ProfileService.html":{}}}],["platormref.get",{"_index":902,"title":{},"body":{"injectables/ProfileService.html":{}}}],["play",{"_index":62,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["plus",{"_index":572,"title":{},"body":{"components/NavComponent.html":{}}}],["polar",{"_index":116,"title":{},"body":{"components/AboutComponent.html":{}}}],["popper.js",{"_index":1069,"title":{},"body":{"dependencies.html":{}}}],["portions",{"_index":1138,"title":{},"body":{"license.html":{}}}],["position",{"_index":474,"title":{},"body":{"components/ChatButtonComponent.html":{},"components/NavComponent.html":{}}}],["positionclass",{"_index":779,"title":{},"body":{"injectables/NotificationService.html":{}}}],["preference",{"_index":720,"title":{},"body":{"components/NetworkComponent.html":{},"components/ProfileComponent.html":{}}}],["preloading",{"_index":833,"title":{},"body":{"components/ProfileComponent.html":{}}}],["prev",{"_index":640,"title":{},"body":{"components/NetworkComponent.html":{}}}],["prevel",{"_index":639,"title":{},"body":{"components/NetworkComponent.html":{}}}],["private",{"_index":366,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/NetworkComponent.html":{},"components/ProfileComponent.html":{},"injectables/SetupService.html":{}}}],["prodile",{"_index":799,"title":{},"body":{"interfaces/Profile.html":{}}}],["production",{"_index":1180,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prof",{"_index":618,"title":{},"body":{"components/NetworkComponent.html":{},"injectables/NetworkService.html":{},"components/ProfileComponent.html":{}}}],["prof._communicationplatform",{"_index":696,"title":{},"body":{"components/NetworkComponent.html":{}}}],["prof._platform",{"_index":699,"title":{},"body":{"components/NetworkComponent.html":{}}}],["prof._region",{"_index":693,"title":{},"body":{"components/NetworkComponent.html":{}}}],["prof._steamappchips",{"_index":704,"title":{},"body":{"components/NetworkComponent.html":{}}}],["prof.communicationplatformid",{"_index":751,"title":{},"body":{"injectables/NetworkService.html":{}}}],["prof.data",{"_index":680,"title":{},"body":{"components/NetworkComponent.html":{},"components/ProfileComponent.html":{}}}],["prof.exists",{"_index":678,"title":{},"body":{"components/NetworkComponent.html":{},"components/ProfileComponent.html":{}}}],["prof.platformid",{"_index":749,"title":{},"body":{"injectables/NetworkService.html":{}}}],["prof.regionid",{"_index":747,"title":{},"body":{"injectables/NetworkService.html":{}}}],["prof.steamapps.foreach((appid",{"_index":701,"title":{},"body":{"components/NetworkComponent.html":{}}}],["profile",{"_index":82,"title":{"interfaces/Profile.html":{}},"body":{"components/AboutComponent.html":{},"modules/AppRoutingModule.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"injectables/NetworkService.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"components/ReleaseRubricComponent.html":{},"injectables/SetupService.html":{},"coverage.html":{},"index.html":{}}}],["profile's",{"_index":798,"title":{},"body":{"interfaces/Profile.html":{}}}],["profile'},{'name",{"_index":163,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChatButtonComponent.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"components/ProfileComponent.html":{},"components/ReleaseRubricComponent.html":{}}}],["profile._communicationplatform.name",{"_index":721,"title":{},"body":{"components/NetworkComponent.html":{}}}],["profile._friends.length",{"_index":872,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile._platform.name",{"_index":719,"title":{},"body":{"components/NetworkComponent.html":{}}}],["profile._region.name",{"_index":718,"title":{},"body":{"components/NetworkComponent.html":{}}}],["profile.bio",{"_index":732,"title":{},"body":{"components/NetworkComponent.html":{},"components/ProfileComponent.html":{},"injectables/SetupService.html":{}}}],["profile.communicationplatformid",{"_index":999,"title":{},"body":{"injectables/SetupService.html":{}}}],["profile.component.html",{"_index":807,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile.component.scss",{"_index":806,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile.days",{"_index":1000,"title":{},"body":{"injectables/SetupService.html":{}}}],["profile.displayname",{"_index":716,"title":{},"body":{"components/NetworkComponent.html":{},"components/ProfileComponent.html":{},"injectables/SetupService.html":{}}}],["profile.friends",{"_index":1003,"title":{},"body":{"injectables/SetupService.html":{}}}],["profile.id",{"_index":688,"title":{},"body":{"components/NetworkComponent.html":{}}}],["profile.photourl",{"_index":1002,"title":{},"body":{"injectables/SetupService.html":{}}}],["profile.platformid",{"_index":998,"title":{},"body":{"injectables/SetupService.html":{}}}],["profile.regionid",{"_index":997,"title":{},"body":{"injectables/SetupService.html":{}}}],["profile.service",{"_index":841,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile.steamapps",{"_index":1001,"title":{},"body":{"injectables/SetupService.html":{}}}],["profile.uid",{"_index":996,"title":{},"body":{"injectables/SetupService.html":{}}}],["profile/profile.component",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["profile/profile.service",{"_index":663,"title":{},"body":{"components/NetworkComponent.html":{}}}],["profileapi",{"_index":605,"title":{},"body":{"components/NetworkComponent.html":{}}}],["profilecomponent",{"_index":162,"title":{"components/ProfileComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatButtonComponent.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"components/ProfileComponent.html":{},"components/ReleaseRubricComponent.html":{},"coverage.html":{},"overview.html":{}}}],["profileref",{"_index":991,"title":{},"body":{"injectables/SetupService.html":{}}}],["profileref.get",{"_index":993,"title":{},"body":{"injectables/SetupService.html":{}}}],["profiles",{"_index":595,"title":{},"body":{"components/NetworkComponent.html":{},"injectables/NetworkService.html":{},"interfaces/Profile.html":{}}}],["profiles$.docs.foreach((profile",{"_index":687,"title":{},"body":{"components/NetworkComponent.html":{}}}],["profiles$.get",{"_index":752,"title":{},"body":{"injectables/NetworkService.html":{}}}],["profiles.foreach((prof",{"_index":691,"title":{},"body":{"components/NetworkComponent.html":{}}}],["profiles.push(profile.data",{"_index":690,"title":{},"body":{"components/NetworkComponent.html":{}}}],["profileservice",{"_index":606,"title":{"injectables/ProfileService.html":{}},"body":{"components/NetworkComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"coverage.html":{}}}],["profref",{"_index":860,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profref.get().then((friendsnapshot",{"_index":861,"title":{},"body":{"components/ProfileComponent.html":{}}}],["project",{"_index":46,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["projectid",{"_index":278,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":343,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ProfileComponent.html":{}}}],["promise.resolve(true",{"_index":866,"title":{},"body":{"components/ProfileComponent.html":{}}}],["properties",{"_index":175,"title":{},"body":{"interfaces/App.html":{},"components/AppComponent.html":{},"interfaces/Apps.html":{},"injectables/AuthService.html":{},"interfaces/CommunicationPlatform.html":{},"interfaces/Day.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"interfaces/Platform.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"interfaces/Region.html":{},"injectables/SetupService.html":{},"interfaces/SteamApp.html":{},"interfaces/SteamAppList.html":{},"interfaces/User.html":{}}}],["property",{"_index":553,"title":{},"body":{"components/NavComponent.html":{}}}],["protractor",{"_index":103,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["provided",{"_index":1139,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":356,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/NetworkService.html":{},"injectables/NotificationService.html":{},"injectables/ProfileService.html":{},"injectables/SetupService.html":{}}}],["provider",{"_index":414,"title":{},"body":{"injectables/AuthService.html":{}}}],["providers",{"_index":198,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["public",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"injectables/NetworkService.html":{},"injectables/ProfileService.html":{},"components/ReleaseRubricComponent.html":{},"injectables/SetupService.html":{}}}],["publish",{"_index":1121,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":1149,"title":{},"body":{"license.html":{}}}],["radius",{"_index":456,"title":{},"body":{"components/ChatButtonComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"components/ProfileComponent.html":{}}}],["rank",{"_index":94,"title":{},"body":{"components/AboutComponent.html":{},"components/ReleaseRubricComponent.html":{}}}],["reactiveformsmodule",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["redirectto",{"_index":305,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["ref",{"_index":745,"title":{},"body":{"injectables/NetworkService.html":{},"injectables/SetupService.html":{}}}],["ref.orderby('name",{"_index":976,"title":{},"body":{"injectables/SetupService.html":{}}}],["region",{"_index":717,"title":{"interfaces/Region.html":{}},"body":{"components/NetworkComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"interfaces/Region.html":{},"injectables/SetupService.html":{},"coverage.html":{}}}],["region.data",{"_index":694,"title":{},"body":{"components/NetworkComponent.html":{},"components/ProfileComponent.html":{}}}],["region.model",{"_index":803,"title":{},"body":{"interfaces/Profile.html":{}}}],["region.name",{"_index":869,"title":{},"body":{"components/ProfileComponent.html":{}}}],["regioncollection",{"_index":941,"title":{},"body":{"injectables/SetupService.html":{}}}],["regionid",{"_index":794,"title":{},"body":{"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/SetupService.html":{}}}],["regionref",{"_index":897,"title":{},"body":{"injectables/ProfileService.html":{}}}],["regionref.get",{"_index":899,"title":{},"body":{"injectables/ProfileService.html":{}}}],["regions",{"_index":893,"title":{},"body":{"injectables/ProfileService.html":{},"injectables/SetupService.html":{}}}],["release",{"_index":74,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatButtonComponent.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"components/ProfileComponent.html":{},"components/ReleaseRubricComponent.html":{},"index.html":{}}}],["releaserubriccomponent",{"_index":164,"title":{"components/ReleaseRubricComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatButtonComponent.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"components/ProfileComponent.html":{},"components/ReleaseRubricComponent.html":{},"coverage.html":{},"overview.html":{}}}],["removed",{"_index":623,"title":{},"body":{"components/NetworkComponent.html":{}}}],["repo",{"_index":57,"title":{},"body":{"components/AboutComponent.html":{},"components/ReleaseRubricComponent.html":{}}}],["represents",{"_index":823,"title":{},"body":{"components/ProfileComponent.html":{},"interfaces/User.html":{}}}],["require",{"_index":360,"title":{},"body":{"guards/AuthGuard.html":{}}}],["reset",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["respectively",{"_index":629,"title":{},"body":{"components/NetworkComponent.html":{},"components/ProfileComponent.html":{}}}],["restriction",{"_index":1115,"title":{},"body":{"license.html":{}}}],["result",{"_index":169,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/App.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Apps.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChatButtonComponent.html":{},"interfaces/CommunicationPlatform.html":{},"interfaces/Day.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"injectables/NetworkService.html":{},"injectables/NotificationService.html":{},"interfaces/Platform.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"interfaces/Region.html":{},"components/ReleaseRubricComponent.html":{},"injectables/SetupService.html":{},"interfaces/SteamApp.html":{},"interfaces/SteamAppList.html":{},"interfaces/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":170,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/App.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Apps.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChatButtonComponent.html":{},"interfaces/CommunicationPlatform.html":{},"interfaces/Day.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"injectables/NetworkService.html":{},"injectables/NotificationService.html":{},"interfaces/Platform.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"interfaces/Region.html":{},"components/ReleaseRubricComponent.html":{},"injectables/SetupService.html":{},"interfaces/SteamApp.html":{},"interfaces/SteamAppList.html":{},"interfaces/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":367,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/NetworkComponent.html":{},"injectables/NetworkService.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/SetupService.html":{}}}],["returns",{"_index":33,"title":{},"body":{"components/AboutComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChatButtonComponent.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"injectables/NetworkService.html":{},"injectables/NotificationService.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"components/ReleaseRubricComponent.html":{},"injectables/SetupService.html":{}}}],["rgba(0,0,0,0.05",{"_index":551,"title":{},"body":{"components/NavComponent.html":{}}}],["rgba(0,0,0,0.1",{"_index":561,"title":{},"body":{"components/NavComponent.html":{}}}],["right",{"_index":478,"title":{},"body":{"components/ChatButtonComponent.html":{},"components/NavComponent.html":{}}}],["right:auto",{"_index":737,"title":{},"body":{"components/NetworkComponent.html":{}}}],["rights",{"_index":1118,"title":{},"body":{"license.html":{}}}],["roboto',arial,sans",{"_index":578,"title":{},"body":{"components/NavComponent.html":{}}}],["root",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/NetworkService.html":{},"injectables/NotificationService.html":{},"injectables/ProfileService.html":{},"injectables/SetupService.html":{}}}],["root'},{'name",{"_index":152,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChatButtonComponent.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"components/ProfileComponent.html":{},"components/ReleaseRubricComponent.html":{}}}],["route",{"_index":397,"title":{},"body":{"injectables/AuthService.html":{},"components/ProfileComponent.html":{}}}],["router",{"_index":325,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["routermodule",{"_index":297,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":311,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":332,"title":{},"body":{"guards/AuthGuard.html":{}}}],["routes",{"_index":296,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing",{"_index":340,"title":{},"body":{"guards/AuthGuard.html":{}}}],["routing.module",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":295,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["routingcomponents",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rubric",{"_index":55,"title":{},"body":{"components/AboutComponent.html":{},"modules/AppRoutingModule.html":{},"components/NavComponent.html":{},"components/ReleaseRubricComponent.html":{}}}],["rubric'},{'name",{"_index":165,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChatButtonComponent.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"components/ProfileComponent.html":{},"components/ReleaseRubricComponent.html":{}}}],["rubric.component",{"_index":243,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["rubric.component.html",{"_index":913,"title":{},"body":{"components/ReleaseRubricComponent.html":{}}}],["rubric.component.scss",{"_index":912,"title":{},"body":{"components/ReleaseRubricComponent.html":{}}}],["rubric.component.ts",{"_index":911,"title":{},"body":{"components/ReleaseRubricComponent.html":{},"coverage.html":{}}}],["rubric.component.ts:19",{"_index":915,"title":{},"body":{"components/ReleaseRubricComponent.html":{}}}],["rubric.component.ts:9",{"_index":914,"title":{},"body":{"components/ReleaseRubricComponent.html":{}}}],["rubric/release",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ReleaseRubricComponent.html":{},"coverage.html":{}}}],["run",{"_index":1087,"title":{},"body":{"index.html":{}}}],["running",{"_index":1084,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ProfileComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":355,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["sa",{"_index":848,"title":{},"body":{"components/ProfileComponent.html":{}}}],["sa.push(app.data",{"_index":851,"title":{},"body":{"components/ProfileComponent.html":{}}}],["sat",{"_index":730,"title":{},"body":{"components/NetworkComponent.html":{},"components/ProfileComponent.html":{}}}],["save",{"_index":825,"title":{},"body":{"components/ProfileComponent.html":{}}}],["saved",{"_index":830,"title":{},"body":{"components/ProfileComponent.html":{},"injectables/SetupService.html":{}}}],["saveprofile",{"_index":948,"title":{},"body":{"injectables/SetupService.html":{}}}],["saveprofile(profile",{"_index":960,"title":{},"body":{"injectables/SetupService.html":{}}}],["saves",{"_index":962,"title":{},"body":{"injectables/SetupService.html":{}}}],["screenshots",{"_index":1093,"title":{},"body":{"index.html":{}}}],["search",{"_index":53,"title":{},"body":{"components/AboutComponent.html":{},"components/ReleaseRubricComponent.html":{},"index.html":{}}}],["searching",{"_index":932,"title":{},"body":{"components/ReleaseRubricComponent.html":{}}}],["second",{"_index":924,"title":{},"body":{"components/ReleaseRubricComponent.html":{}}}],["security",{"_index":357,"title":{},"body":{"guards/AuthGuard.html":{}}}],["see",{"_index":1098,"title":{},"body":{"index.html":{}}}],["selected",{"_index":632,"title":{},"body":{"components/NetworkComponent.html":{},"components/ProfileComponent.html":{}}}],["selector",{"_index":17,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChatButtonComponent.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"components/ProfileComponent.html":{},"components/ReleaseRubricComponent.html":{}}}],["sell",{"_index":1125,"title":{},"body":{"license.html":{}}}],["serif",{"_index":579,"title":{},"body":{"components/NavComponent.html":{}}}],["service",{"_index":390,"title":{},"body":{"injectables/AuthService.html":{},"components/NetworkComponent.html":{},"injectables/NetworkService.html":{},"injectables/NotificationService.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/SetupService.html":{}}}],["services/auth/auth.service",{"_index":351,"title":{},"body":{"guards/AuthGuard.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"components/ProfileComponent.html":{}}}],["services/steam/models/steamapp.model",{"_index":662,"title":{},"body":{"components/NetworkComponent.html":{},"components/ProfileComponent.html":{},"injectables/SetupService.html":{}}}],["sets",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/SetupService.html":{},"miscellaneous/variables.html":{}}}],["settings",{"_index":68,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["setup",{"_index":12,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChatButtonComponent.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"injectables/NetworkService.html":{},"components/ProfileComponent.html":{},"components/ReleaseRubricComponent.html":{},"injectables/SetupService.html":{}}}],["setup/models/communication",{"_index":838,"title":{},"body":{"components/ProfileComponent.html":{}}}],["setup/models/days.model",{"_index":837,"title":{},"body":{"components/ProfileComponent.html":{}}}],["setup/models/platform.model",{"_index":839,"title":{},"body":{"components/ProfileComponent.html":{}}}],["setup/models/profile.model",{"_index":498,"title":{},"body":{"components/FriendCardComponent.html":{},"components/NetworkComponent.html":{},"injectables/NetworkService.html":{},"components/ProfileComponent.html":{}}}],["setup/models/region.model",{"_index":840,"title":{},"body":{"components/ProfileComponent.html":{}}}],["setup/setup.component",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["setup/setup.service",{"_index":667,"title":{},"body":{"components/NetworkComponent.html":{},"components/ProfileComponent.html":{}}}],["setupapi",{"_index":608,"title":{},"body":{"components/NetworkComponent.html":{},"components/ProfileComponent.html":{}}}],["setupcomponent",{"_index":166,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ChatButtonComponent.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"components/ProfileComponent.html":{},"components/ReleaseRubricComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["setupservice",{"_index":609,"title":{"injectables/SetupService.html":{}},"body":{"components/NetworkComponent.html":{},"components/ProfileComponent.html":{},"injectables/SetupService.html":{},"coverage.html":{}}}],["shadow",{"_index":549,"title":{},"body":{"components/NavComponent.html":{}}}],["shall",{"_index":1135,"title":{},"body":{"license.html":{}}}],["showerrorwithtimeout",{"_index":754,"title":{},"body":{"injectables/NotificationService.html":{}}}],["showerrorwithtimeout(message",{"_index":762,"title":{},"body":{"injectables/NotificationService.html":{}}}],["showhtmlmessage",{"_index":755,"title":{},"body":{"injectables/NotificationService.html":{}}}],["showhtmlmessage(message",{"_index":770,"title":{},"body":{"injectables/NotificationService.html":{}}}],["showing",{"_index":499,"title":{},"body":{"components/FriendCardComponent.html":{}}}],["shows",{"_index":765,"title":{},"body":{"injectables/NotificationService.html":{}}}],["showsuccess",{"_index":756,"title":{},"body":{"injectables/NotificationService.html":{}}}],["showsuccess(message",{"_index":773,"title":{},"body":{"injectables/NotificationService.html":{}}}],["showsuccesswithtimeout",{"_index":757,"title":{},"body":{"injectables/NotificationService.html":{}}}],["showsuccesswithtimeout(message",{"_index":775,"title":{},"body":{"injectables/NotificationService.html":{}}}],["side",{"_index":796,"title":{},"body":{"interfaces/Profile.html":{}}}],["sign",{"_index":79,"title":{},"body":{"components/AboutComponent.html":{},"components/NavComponent.html":{},"components/ReleaseRubricComponent.html":{},"index.html":{}}}],["signin",{"_index":393,"title":{},"body":{"injectables/AuthService.html":{}}}],["signout",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{}}}],["signs",{"_index":396,"title":{},"body":{"injectables/AuthService.html":{}}}],["similar",{"_index":63,"title":{},"body":{"components/AboutComponent.html":{},"injectables/NetworkService.html":{},"index.html":{}}}],["size",{"_index":466,"title":{},"body":{"components/ChatButtonComponent.html":{},"components/NavComponent.html":{}}}],["sizing",{"_index":571,"title":{},"body":{"components/NavComponent.html":{}}}],["sloc",{"_index":1072,"title":{},"body":{"dependencies.html":{}}}],["snapshot",{"_index":800,"title":{},"body":{"interfaces/Profile.html":{}}}],["snow",{"_index":122,"title":{},"body":{"components/AboutComponent.html":{}}}],["software",{"_index":1111,"title":{},"body":{"license.html":{}}}],["soon",{"_index":1095,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/App.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Apps.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChatButtonComponent.html":{},"interfaces/CommunicationPlatform.html":{},"interfaces/Day.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"injectables/NetworkService.html":{},"injectables/NotificationService.html":{},"interfaces/Platform.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"interfaces/Region.html":{},"components/ReleaseRubricComponent.html":{},"injectables/SetupService.html":{},"interfaces/SteamApp.html":{},"interfaces/SteamAppList.html":{},"interfaces/User.html":{}}}],["space",{"_index":546,"title":{},"body":{"components/NavComponent.html":{}}}],["spacebetween",{"_index":642,"title":{},"body":{"components/NetworkComponent.html":{}}}],["spec",{"_index":350,"title":{},"body":{"guards/AuthGuard.html":{}}}],["specific",{"_index":95,"title":{},"body":{"components/AboutComponent.html":{},"components/ReleaseRubricComponent.html":{}}}],["sql",{"_index":102,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/.../app",{"_index":1178,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.module.ts",{"_index":1175,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1176,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1177,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/about/about.component.ts",{"_index":10,"title":{},"body":{"components/AboutComponent.html":{},"coverage.html":{}}}],["src/app/about/about.component.ts:16",{"_index":28,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/about/about.component.ts:26",{"_index":31,"title":{},"body":{"components/AboutComponent.html":{}}}],["src/app/app",{"_index":294,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:15",{"_index":189,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":208,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/auth.guard.ts",{"_index":320,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/auth.guard.ts:17",{"_index":326,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth.guard.ts:33",{"_index":333,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth.guard.ts:52",{"_index":347,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/chat",{"_index":435,"title":{},"body":{"components/ChatButtonComponent.html":{},"coverage.html":{}}}],["src/app/friend",{"_index":489,"title":{},"body":{"components/FriendCardComponent.html":{},"coverage.html":{}}}],["src/app/nav/nav.component.ts",{"_index":503,"title":{},"body":{"components/NavComponent.html":{},"coverage.html":{}}}],["src/app/nav/nav.component.ts:17",{"_index":507,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/nav/nav.component.ts:22",{"_index":509,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/nav/nav.component.ts:27",{"_index":508,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/network/network.component.ts",{"_index":590,"title":{},"body":{"components/NetworkComponent.html":{},"coverage.html":{}}}],["src/app/network/network.component.ts:104",{"_index":624,"title":{},"body":{"components/NetworkComponent.html":{}}}],["src/app/network/network.component.ts:141",{"_index":616,"title":{},"body":{"components/NetworkComponent.html":{}}}],["src/app/network/network.component.ts:159",{"_index":621,"title":{},"body":{"components/NetworkComponent.html":{}}}],["src/app/network/network.component.ts:168",{"_index":631,"title":{},"body":{"components/NetworkComponent.html":{}}}],["src/app/network/network.component.ts:32",{"_index":651,"title":{},"body":{"components/NetworkComponent.html":{}}}],["src/app/network/network.component.ts:35",{"_index":657,"title":{},"body":{"components/NetworkComponent.html":{}}}],["src/app/network/network.component.ts:38",{"_index":654,"title":{},"body":{"components/NetworkComponent.html":{}}}],["src/app/network/network.component.ts:41",{"_index":655,"title":{},"body":{"components/NetworkComponent.html":{}}}],["src/app/network/network.component.ts:44",{"_index":656,"title":{},"body":{"components/NetworkComponent.html":{}}}],["src/app/network/network.component.ts:47",{"_index":644,"title":{},"body":{"components/NetworkComponent.html":{}}}],["src/app/network/network.component.ts:55",{"_index":610,"title":{},"body":{"components/NetworkComponent.html":{}}}],["src/app/network/network.component.ts:69",{"_index":645,"title":{},"body":{"components/NetworkComponent.html":{}}}],["src/app/network/network.component.ts:78",{"_index":633,"title":{},"body":{"components/NetworkComponent.html":{}}}],["src/app/network/network.component.ts:89",{"_index":626,"title":{},"body":{"components/NetworkComponent.html":{}}}],["src/app/network/network.service.ts",{"_index":738,"title":{},"body":{"injectables/NetworkService.html":{},"coverage.html":{}}}],["src/app/network/network.service.ts:15",{"_index":741,"title":{},"body":{"injectables/NetworkService.html":{}}}],["src/app/network/network.service.ts:28",{"_index":743,"title":{},"body":{"injectables/NetworkService.html":{}}}],["src/app/profile/profile.component.ts",{"_index":805,"title":{},"body":{"components/ProfileComponent.html":{},"coverage.html":{}}}],["src/app/profile/profile.component.ts:142",{"_index":817,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:32",{"_index":822,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:35",{"_index":836,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:38",{"_index":835,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:41",{"_index":821,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:44",{"_index":834,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:47",{"_index":820,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:50",{"_index":831,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:53",{"_index":832,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:57",{"_index":826,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:60",{"_index":813,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:81",{"_index":818,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:99",{"_index":815,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.service.ts",{"_index":878,"title":{},"body":{"injectables/ProfileService.html":{},"coverage.html":{}}}],["src/app/profile/profile.service.ts:14",{"_index":883,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/profile/profile.service.ts:27",{"_index":892,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/profile/profile.service.ts:37",{"_index":889,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/profile/profile.service.ts:47",{"_index":885,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/profile/profile.service.ts:57",{"_index":895,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/release",{"_index":910,"title":{},"body":{"components/ReleaseRubricComponent.html":{},"coverage.html":{}}}],["src/app/services/auth/auth.service.ts",{"_index":377,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/services/auth/auth.service.ts:25",{"_index":387,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:53",{"_index":392,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:63",{"_index":395,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:73",{"_index":399,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/steam/models/apps",{"_index":313,"title":{},"body":{"interfaces/Apps.html":{},"coverage.html":{}}}],["src/app/services/steam/models/steam",{"_index":1008,"title":{},"body":{"interfaces/SteamAppList.html":{},"coverage.html":{}}}],["src/app/services/steam/models/steamapp.model",{"_index":802,"title":{},"body":{"interfaces/Profile.html":{}}}],["src/app/services/steam/models/steamapp.model.ts",{"_index":1004,"title":{},"body":{"interfaces/SteamApp.html":{},"coverage.html":{}}}],["src/app/services/user.model.ts",{"_index":1011,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/setup/models/app.model.ts",{"_index":173,"title":{},"body":{"interfaces/App.html":{},"coverage.html":{}}}],["src/app/setup/models/communication",{"_index":482,"title":{},"body":{"interfaces/CommunicationPlatform.html":{},"coverage.html":{}}}],["src/app/setup/models/days.model.ts",{"_index":488,"title":{},"body":{"interfaces/Day.html":{},"coverage.html":{}}}],["src/app/setup/models/platform.model.ts",{"_index":784,"title":{},"body":{"interfaces/Platform.html":{},"coverage.html":{}}}],["src/app/setup/models/profile.model.ts",{"_index":785,"title":{},"body":{"interfaces/Profile.html":{},"coverage.html":{}}}],["src/app/setup/models/region.model.ts",{"_index":909,"title":{},"body":{"interfaces/Region.html":{},"coverage.html":{}}}],["src/app/setup/setup.component.ts",{"_index":1035,"title":{},"body":{"coverage.html":{}}}],["src/app/setup/setup.service.ts",{"_index":937,"title":{},"body":{"injectables/SetupService.html":{},"coverage.html":{}}}],["src/app/setup/setup.service.ts:108",{"_index":961,"title":{},"body":{"injectables/SetupService.html":{}}}],["src/app/setup/setup.service.ts:25",{"_index":967,"title":{},"body":{"injectables/SetupService.html":{}}}],["src/app/setup/setup.service.ts:28",{"_index":966,"title":{},"body":{"injectables/SetupService.html":{}}}],["src/app/setup/setup.service.ts:31",{"_index":965,"title":{},"body":{"injectables/SetupService.html":{}}}],["src/app/setup/setup.service.ts:34",{"_index":964,"title":{},"body":{"injectables/SetupService.html":{}}}],["src/app/setup/setup.service.ts:37",{"_index":951,"title":{},"body":{"injectables/SetupService.html":{}}}],["src/app/setup/setup.service.ts:50",{"_index":959,"title":{},"body":{"injectables/SetupService.html":{}}}],["src/app/setup/setup.service.ts:61",{"_index":954,"title":{},"body":{"injectables/SetupService.html":{}}}],["src/app/setup/setup.service.ts:70",{"_index":956,"title":{},"body":{"injectables/SetupService.html":{}}}],["src/app/setup/setup.service.ts:79",{"_index":953,"title":{},"body":{"injectables/SetupService.html":{}}}],["src/app/setup/setup.service.ts:88",{"_index":955,"title":{},"body":{"injectables/SetupService.html":{}}}],["src/app/setup/setup.service.ts:98",{"_index":958,"title":{},"body":{"injectables/SetupService.html":{}}}],["src/app/utility/notification/notification.service.ts",{"_index":753,"title":{},"body":{"injectables/NotificationService.html":{},"coverage.html":{}}}],["src/app/utility/notification/notification.service.ts:16",{"_index":760,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/utility/notification/notification.service.ts:29",{"_index":774,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/utility/notification/notification.service.ts:41",{"_index":776,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/utility/notification/notification.service.ts:55",{"_index":764,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/utility/notification/notification.service.ts:68",{"_index":771,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/environments/environment.prod.ts",{"_index":1039,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1041,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":1080,"title":{"index.html":{},"license.html":{}},"body":{}}],["state",{"_index":331,"title":{},"body":{"guards/AuthGuard.html":{}}}],["statements",{"_index":1018,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":649,"title":{},"body":{"components/NetworkComponent.html":{}}}],["steam",{"_index":84,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/Apps.html":{},"components/NetworkComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"components/ReleaseRubricComponent.html":{},"injectables/SetupService.html":{},"interfaces/SteamApp.html":{},"interfaces/SteamAppList.html":{},"index.html":{}}}],["steamapp",{"_index":315,"title":{"interfaces/SteamApp.html":{}},"body":{"interfaces/Apps.html":{},"components/NetworkComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/SetupService.html":{},"interfaces/SteamApp.html":{},"coverage.html":{}}}],["steamapp.model",{"_index":317,"title":{},"body":{"interfaces/Apps.html":{}}}],["steamappcollection",{"_index":942,"title":{},"body":{"injectables/SetupService.html":{}}}],["steamapplist",{"_index":1007,"title":{"interfaces/SteamAppList.html":{}},"body":{"interfaces/SteamAppList.html":{},"coverage.html":{}}}],["steamapps",{"_index":596,"title":{},"body":{"components/NetworkComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/SetupService.html":{}}}],["stepper",{"_index":1060,"title":{},"body":{"dependencies.html":{}}}],["storage",{"_index":288,"title":{},"body":{"modules/AppModule.html":{}}}],["storagebucket",{"_index":280,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["store",{"_index":952,"title":{},"body":{"injectables/SetupService.html":{}}}],["storm",{"_index":123,"title":{},"body":{"components/AboutComponent.html":{}}}],["string",{"_index":180,"title":{},"body":{"interfaces/App.html":{},"components/AppComponent.html":{},"interfaces/CommunicationPlatform.html":{},"interfaces/Day.html":{},"components/NetworkComponent.html":{},"interfaces/Platform.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"interfaces/Region.html":{},"injectables/SetupService.html":{},"interfaces/SteamApp.html":{},"interfaces/User.html":{}}}],["studio",{"_index":112,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["stuff",{"_index":581,"title":{},"body":{"components/NavComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChatButtonComponent.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"components/ProfileComponent.html":{},"components/ReleaseRubricComponent.html":{}}}],["styleurls",{"_index":19,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChatButtonComponent.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"components/ProfileComponent.html":{},"components/ReleaseRubricComponent.html":{}}}],["subject",{"_index":1130,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1123,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":1137,"title":{},"body":{"license.html":{}}}],["success",{"_index":713,"title":{},"body":{"components/NetworkComponent.html":{},"injectables/NotificationService.html":{},"components/ProfileComponent.html":{}}}],["successfull",{"_index":846,"title":{},"body":{"components/ProfileComponent.html":{}}}],["successfully",{"_index":712,"title":{},"body":{"components/NetworkComponent.html":{},"components/ProfileComponent.html":{}}}],["sun",{"_index":731,"title":{},"body":{"components/NetworkComponent.html":{},"components/ProfileComponent.html":{}}}],["support",{"_index":1165,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1166,"title":{},"body":{"modules.html":{}}}],["swiper",{"_index":264,"title":{},"body":{"modules/AppModule.html":{},"components/NetworkComponent.html":{},"dependencies.html":{}}}],["swipercomponent",{"_index":646,"title":{},"body":{"components/NetworkComponent.html":{}}}],["swiperoptions",{"_index":634,"title":{},"body":{"components/NetworkComponent.html":{}}}],["switchmap",{"_index":405,"title":{},"body":{"injectables/AuthService.html":{}}}],["switchmap(user",{"_index":411,"title":{},"body":{"injectables/AuthService.html":{}}}],["tab",{"_index":875,"title":{},"body":{"components/ProfileComponent.html":{}}}],["table",{"_index":1043,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1042,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":352,"title":{},"body":{"guards/AuthGuard.html":{}}}],["take(1",{"_index":369,"title":{},"body":{"guards/AuthGuard.html":{}}}],["tap",{"_index":354,"title":{},"body":{"guards/AuthGuard.html":{}}}],["tap(loggedin",{"_index":371,"title":{},"body":{"guards/AuthGuard.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChatButtonComponent.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"components/ProfileComponent.html":{},"components/ReleaseRubricComponent.html":{}}}],["templateurl",{"_index":21,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChatButtonComponent.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"components/ProfileComponent.html":{},"components/ReleaseRubricComponent.html":{}}}],["test",{"_index":1088,"title":{},"body":{"index.html":{}}}],["testing",{"_index":104,"title":{},"body":{"components/AboutComponent.html":{},"guards/AuthGuard.html":{},"index.html":{}}}],["tests",{"_index":1086,"title":{},"body":{"index.html":{}}}],["text",{"_index":463,"title":{},"body":{"components/ChatButtonComponent.html":{}}}],["things",{"_index":927,"title":{},"body":{"components/ReleaseRubricComponent.html":{}}}],["this.afauth.auth.signinwithpopup(provider",{"_index":419,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.afauth.auth.signout",{"_index":421,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.afauth.authstate.pipe",{"_index":410,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.afs.collection('communicationplatform",{"_index":986,"title":{},"body":{"injectables/SetupService.html":{}}}],["this.afs.collection('days",{"_index":980,"title":{},"body":{"injectables/SetupService.html":{}}}],["this.afs.collection('platform",{"_index":983,"title":{},"body":{"injectables/SetupService.html":{}}}],["this.afs.collection('profiles",{"_index":744,"title":{},"body":{"injectables/NetworkService.html":{}}}],["this.afs.collection('regions",{"_index":975,"title":{},"body":{"injectables/SetupService.html":{}}}],["this.afs.collection('steamgames",{"_index":989,"title":{},"body":{"injectables/SetupService.html":{}}}],["this.afs.doc(`communicationplatform/${commid",{"_index":904,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.afs.doc(`platform/${platformid",{"_index":901,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.afs.doc(`profiles/${profile.uid",{"_index":994,"title":{},"body":{"injectables/SetupService.html":{}}}],["this.afs.doc(`profiles/${uid",{"_index":992,"title":{},"body":{"injectables/SetupService.html":{}}}],["this.afs.doc(`regions/${regionid",{"_index":898,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.afs.doc(`steamgames/${appid",{"_index":907,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.afs.doc(`users/${user.uid",{"_index":424,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.afs.doc(`users/${user.uid}`).valuechanges",{"_index":412,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.api.getcomm(this.profile.communicationplatformid.tostring()).subscribe((comm",{"_index":855,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.api.getplatform(this.profile.platformid.tostring()).subscribe((platform",{"_index":857,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.api.getprofiles(this.profile).subscribe((profiles",{"_index":686,"title":{},"body":{"components/NetworkComponent.html":{}}}],["this.api.getregion(this.profile.regionid.tostring()).subscribe((region",{"_index":853,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.api.getsteamapp(appid.tostring()).subscribe((app",{"_index":850,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.auth.user$.pipe",{"_index":368,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.auth.user$.subscribe(u",{"_index":668,"title":{},"body":{"components/NetworkComponent.html":{},"components/ProfileComponent.html":{}}}],["this.comm",{"_index":856,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.commscollection",{"_index":985,"title":{},"body":{"injectables/SetupService.html":{}}}],["this.commscollection.valuechanges",{"_index":987,"title":{},"body":{"injectables/SetupService.html":{}}}],["this.dayscollection",{"_index":979,"title":{},"body":{"injectables/SetupService.html":{}}}],["this.dayscollection.valuechanges",{"_index":981,"title":{},"body":{"injectables/SetupService.html":{}}}],["this.findfriends",{"_index":681,"title":{},"body":{"components/NetworkComponent.html":{}}}],["this.friendswiper.swiper.removeslide(index",{"_index":710,"title":{},"body":{"components/NetworkComponent.html":{}}}],["this.fromsaved",{"_index":844,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.getprofile",{"_index":671,"title":{},"body":{"components/NetworkComponent.html":{},"components/ProfileComponent.html":{}}}],["this.isloaded",{"_index":865,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.noprofile",{"_index":867,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.notificationservice.showerrorwithtimeout('profile",{"_index":682,"title":{},"body":{"components/NetworkComponent.html":{},"components/ProfileComponent.html":{}}}],["this.notificationservice.showsuccesswithtimeout('friend",{"_index":711,"title":{},"body":{"components/NetworkComponent.html":{}}}],["this.notificationservice.showsuccesswithtimeout('profile",{"_index":847,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.platform",{"_index":858,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.platformcollection",{"_index":982,"title":{},"body":{"injectables/SetupService.html":{}}}],["this.platformcollection.valuechanges",{"_index":984,"title":{},"body":{"injectables/SetupService.html":{}}}],["this.profile",{"_index":679,"title":{},"body":{"components/NetworkComponent.html":{},"components/ProfileComponent.html":{}}}],["this.profile._friends",{"_index":864,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.profile.friends",{"_index":706,"title":{},"body":{"components/NetworkComponent.html":{}}}],["this.profile.friends.push(this.afs.doc(`profiles/${prof.uid}`).ref",{"_index":708,"title":{},"body":{"components/NetworkComponent.html":{}}}],["this.profile.steamapps.foreach((appid",{"_index":849,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.profileapi.getcomm(this.profile.communicationplatformid.tostring()).subscribe((comm",{"_index":695,"title":{},"body":{"components/NetworkComponent.html":{}}}],["this.profileapi.getplatform(this.profile.platformid.tostring()).subscribe((platform",{"_index":698,"title":{},"body":{"components/NetworkComponent.html":{}}}],["this.profileapi.getregion(this.profile.regionid.tostring()).subscribe((region",{"_index":692,"title":{},"body":{"components/NetworkComponent.html":{}}}],["this.profileapi.getsteamapp(appid.tostring()).subscribe((app",{"_index":702,"title":{},"body":{"components/NetworkComponent.html":{}}}],["this.profiles",{"_index":705,"title":{},"body":{"components/NetworkComponent.html":{}}}],["this.region",{"_index":854,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.regioncollection",{"_index":974,"title":{},"body":{"injectables/SetupService.html":{}}}],["this.regioncollection.valuechanges",{"_index":978,"title":{},"body":{"injectables/SetupService.html":{}}}],["this.route.queryparams.subscribe(params",{"_index":843,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.router.navigate(['/about",{"_index":375,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["this.setupapi.getprofile(this.uid).subscribe((prof",{"_index":677,"title":{},"body":{"components/NetworkComponent.html":{},"components/ProfileComponent.html":{}}}],["this.setupapi.saveprofile(this.profile).then((val",{"_index":709,"title":{},"body":{"components/NetworkComponent.html":{}}}],["this.steamappcollection",{"_index":988,"title":{},"body":{"injectables/SetupService.html":{}}}],["this.steamappcollection.valuechanges",{"_index":990,"title":{},"body":{"injectables/SetupService.html":{}}}],["this.steamapps",{"_index":852,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.toastr.error(message",{"_index":782,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.toastr.success(message",{"_index":777,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.uid",{"_index":669,"title":{},"body":{"components/NetworkComponent.html":{},"components/ProfileComponent.html":{}}}],["this.updateuserdata(credential.user",{"_index":420,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.user",{"_index":409,"title":{},"body":{"injectables/AuthService.html":{}}}],["thu",{"_index":728,"title":{},"body":{"components/NetworkComponent.html":{},"components/ProfileComponent.html":{}}}],["time",{"_index":768,"title":{},"body":{"injectables/NotificationService.html":{}}}],["timeout",{"_index":766,"title":{},"body":{"injectables/NotificationService.html":{}}}],["timespan",{"_index":763,"title":{},"body":{"injectables/NotificationService.html":{}}}],["timing",{"_index":556,"title":{},"body":{"components/NavComponent.html":{}}}],["title",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"injectables/NotificationService.html":{}}}],["toast",{"_index":780,"title":{},"body":{"injectables/NotificationService.html":{}}}],["toaster",{"_index":761,"title":{},"body":{"injectables/NotificationService.html":{},"components/ProfileComponent.html":{}}}],["toastr",{"_index":246,"title":{},"body":{"modules/AppModule.html":{},"injectables/NotificationService.html":{},"dependencies.html":{}}}],["toastrmodule",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["toastrmodule.forroot",{"_index":289,"title":{},"body":{"modules/AppModule.html":{}}}],["toastrservice",{"_index":759,"title":{},"body":{"injectables/NotificationService.html":{}}}],["tomato",{"_index":525,"title":{},"body":{"components/NavComponent.html":{}}}],["tools",{"_index":98,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["top",{"_index":527,"title":{},"body":{"components/NavComponent.html":{},"injectables/NotificationService.html":{}}}],["tort",{"_index":1160,"title":{},"body":{"license.html":{}}}],["total",{"_index":873,"title":{},"body":{"components/ProfileComponent.html":{}}}],["transition",{"_index":552,"title":{},"body":{"components/NavComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChatButtonComponent.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"components/ProfileComponent.html":{},"components/ReleaseRubricComponent.html":{}}}],["true",{"_index":292,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/NetworkComponent.html":{},"injectables/NotificationService.html":{},"components/ProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":1075,"title":{},"body":{"dependencies.html":{}}}],["tue",{"_index":726,"title":{},"body":{"components/NetworkComponent.html":{},"components/ProfileComponent.html":{}}}],["type",{"_index":178,"title":{},"body":{"interfaces/App.html":{},"components/AppComponent.html":{},"interfaces/Apps.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/CommunicationPlatform.html":{},"interfaces/Day.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"injectables/NetworkService.html":{},"injectables/NotificationService.html":{},"interfaces/Platform.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"interfaces/Region.html":{},"injectables/SetupService.html":{},"interfaces/SteamApp.html":{},"interfaces/SteamAppList.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types/lodash",{"_index":1055,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":99,"title":{},"body":{"components/AboutComponent.html":{},"components/NetworkComponent.html":{},"components/ProfileComponent.html":{},"index.html":{}}}],["typing",{"_index":673,"title":{},"body":{"components/NetworkComponent.html":{},"components/ProfileComponent.html":{}}}],["u.uid",{"_index":670,"title":{},"body":{"components/NetworkComponent.html":{},"components/ProfileComponent.html":{}}}],["uid",{"_index":425,"title":{},"body":{"injectables/AuthService.html":{},"components/NetworkComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/SetupService.html":{},"interfaces/User.html":{}}}],["under",{"_index":139,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["unit",{"_index":1085,"title":{},"body":{"index.html":{}}}],["updates",{"_index":400,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateuserdata",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateuserdata(user",{"_index":398,"title":{},"body":{"injectables/AuthService.html":{}}}],["url",{"_index":1014,"title":{},"body":{"interfaces/User.html":{}}}],["urltree",{"_index":345,"title":{},"body":{"guards/AuthGuard.html":{}}}],["use",{"_index":1119,"title":{},"body":{"license.html":{}}}],["used",{"_index":349,"title":{},"body":{"guards/AuthGuard.html":{}}}],["useful",{"_index":263,"title":{},"body":{"modules/AppModule.html":{},"components/NetworkComponent.html":{},"dependencies.html":{}}}],["user",{"_index":336,"title":{"interfaces/User.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/NetworkComponent.html":{},"injectables/NetworkService.html":{},"components/ProfileComponent.html":{},"injectables/SetupService.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["user's",{"_index":1012,"title":{},"body":{"interfaces/User.html":{}}}],["user.displayname",{"_index":430,"title":{},"body":{"injectables/AuthService.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{}}}],["user.email",{"_index":428,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.model",{"_index":406,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.photourl",{"_index":432,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.uid",{"_index":426,"title":{},"body":{"injectables/AuthService.html":{}}}],["userref",{"_index":423,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SetupService.html":{}}}],["userref.set",{"_index":995,"title":{},"body":{"injectables/SetupService.html":{}}}],["userref.set(data",{"_index":433,"title":{},"body":{"injectables/AuthService.html":{}}}],["users",{"_index":408,"title":{},"body":{"injectables/AuthService.html":{},"components/NetworkComponent.html":{},"injectables/NetworkService.html":{},"components/ProfileComponent.html":{},"components/ReleaseRubricComponent.html":{}}}],["utility/notification/notification.service",{"_index":666,"title":{},"body":{"components/NetworkComponent.html":{},"components/ProfileComponent.html":{}}}],["value",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"components/NetworkComponent.html":{},"components/ProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":147,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ChatButtonComponent.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"components/ProfileComponent.html":{},"components/ReleaseRubricComponent.html":{}}}],["variable",{"_index":1020,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1174,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":41,"title":{},"body":{"components/AboutComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ChatButtonComponent.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"injectables/NetworkService.html":{},"injectables/NotificationService.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/SetupService.html":{}}}],["vertical",{"_index":534,"title":{},"body":{"components/NavComponent.html":{},"components/ProfileComponent.html":{}}}],["via",{"_index":1090,"title":{},"body":{"index.html":{}}}],["view",{"_index":652,"title":{},"body":{"components/NetworkComponent.html":{}}}],["viewchild",{"_index":659,"title":{},"body":{"components/NetworkComponent.html":{}}}],["viewchild('friendswiper",{"_index":648,"title":{},"body":{"components/NetworkComponent.html":{}}}],["visual",{"_index":111,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["void",{"_index":35,"title":{},"body":{"components/AboutComponent.html":{},"injectables/AuthService.html":{},"components/ChatButtonComponent.html":{},"components/FriendCardComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"injectables/NotificationService.html":{},"components/ProfileComponent.html":{},"components/ReleaseRubricComponent.html":{}}}],["warranties",{"_index":1145,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1140,"title":{},"body":{"license.html":{}}}],["web",{"_index":1097,"title":{},"body":{"index.html":{}}}],["wed",{"_index":727,"title":{},"body":{"components/NetworkComponent.html":{},"components/ProfileComponent.html":{}}}],["weight",{"_index":575,"title":{},"body":{"components/NavComponent.html":{}}}],["welcometext",{"_index":537,"title":{},"body":{"components/NavComponent.html":{}}}],["where('communicationplatformid",{"_index":750,"title":{},"body":{"injectables/NetworkService.html":{}}}],["where('platformid",{"_index":748,"title":{},"body":{"injectables/NetworkService.html":{}}}],["where('regionid",{"_index":746,"title":{},"body":{"injectables/NetworkService.html":{}}}],["whether",{"_index":335,"title":{},"body":{"guards/AuthGuard.html":{},"components/NetworkComponent.html":{},"components/ProfileComponent.html":{},"license.html":{}}}],["white",{"_index":543,"title":{},"body":{"components/NavComponent.html":{}}}],["width",{"_index":449,"title":{},"body":{"components/ChatButtonComponent.html":{},"components/NavComponent.html":{},"components/NetworkComponent.html":{},"components/ProfileComponent.html":{}}}],["without",{"_index":1114,"title":{},"body":{"license.html":{}}}],["xl",{"_index":448,"title":{},"body":{"components/ChatButtonComponent.html":{}}}],["z",{"_index":480,"title":{},"body":{"components/ChatButtonComponent.html":{}}}],["zone.js",{"_index":1077,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AboutComponent.html":{"url":"components/AboutComponent.html","title":"component - AboutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AboutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/about/about.component.ts\n\n\n    \n        Description\n    \n    \n        Setup Component Links \n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about\n            \n\n            \n                styleUrls\n                ./about.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./about.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/about/about.component.ts:16\n                            \n                        \n\n                \n                    \n                            Creates an instance of about component.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/about/about.component.ts:26\n                \n            \n\n\n            \n                \n                    About Component initialization\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/** Setup Component Links */\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})\n\n/**************************************************\n * @author Adam Chlebek\n * @version 1.0\n * @description About Component is all front-ended\n * information about the project\n *************************************************/\nexport class AboutComponent implements OnInit {\n  /**\n   * Creates an instance of about component.\n   */\n  constructor() { }\n\n\n  /**\n   * About Component initialization\n   */\n  ngOnInit() {\n  }\n}\n\n    \n\n    \n        \n    \n        \n    \n    \n      \n          HashMap\n          Location based friend search for gamers!\n      \n      \n          Rubric\n      \n      \n          Github Repo\n      \n    \n\n\n\n\n  \n    About\n\n    This project was created for CIS 350. HashMap is a location based friend search for people who play\n      similar games to you! You can connect many of your accounts and settings to find friends near you.\n\n    \n\n    Feature List\n\n    \n      \n        \n          \n            \n              Release 1 (July 15th)\n              \n                Google Sign-In and Account creation\n                Profile Creation and Management\n                Steam Linking and Game Linking\n                Front end and menu created\n              \n            \n          \n        \n        \n          \n            \n              Release 2 (July 31st)\n              \n                Friend Matching Algorithm\n                Add friends to List\n                Search By Location\n                Add search by rank with specific games\n              \n            \n          \n        \n      \n    \n\n  \n\n  \n    \n      \n        Languages\n        Framework/Plugins and Tools\n      \n    \n    \n      \n        Typescript\n        Angular 8\n      \n      \n        SQL\n        Protractor End-to-End Testing\n      \n      \n        HTML\n        Jasime Karma\n      \n      \n        CSS\n        Firebase\n      \n      \n        JavaScript\n        Visual Studio Code\n      \n    \n  \n\n  \n\n  \n    Color Palette\n    \n      \n        Polar Night\n        \n        #2e3440\n        #3b4252\n        #434c5e\n        #4c566a\n      \n      \n        Snow Storm\n        \n        #d8dee9\n        #e5e9f0\n        #eceef4\n      \n      \n        Frost\n        \n        #8fbcbb\n        #88c0d0\n        #81a1c1\n        #5e81ac\n      \n      \n        Aurora\n        \n        #bf616a\n        #d08770\n        #ebcb8b\n        #a3be8c\n        #b48ead\n      \n    \n  \n\n  \n\n  \n    This project is licensed under the MIT license.\n  \n\n  \n    Created By Adam Chlebek and Collin Larson\n  \n\n  \n\n\n    \n\n    \n                \n                    ./about.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    HashMap          Location based friend search for gamers!                      Rubric                      Github Repo                About    This project was created for CIS 350. HashMap is a location based friend search for people who play      similar games to you! You can connect many of your accounts and settings to find friends near you.        Feature List                                                      Release 1 (July 15th)                              Google Sign-In and Account creation                Profile Creation and Management                Steam Linking and Game Linking                Front end and menu created                                                                                        Release 2 (July 31st)                              Friend Matching Algorithm                Add friends to List                Search By Location                Add search by rank with specific games                                                                            Languages        Framework/Plugins and Tools                            Typescript        Angular 8                    SQL        Protractor End-to-End Testing                    HTML        Jasime Karma                    CSS        Firebase                    JavaScript        Visual Studio Code                    Color Palette                  Polar Night                #2e3440        #3b4252        #434c5e        #4c566a                    Snow Storm                #d8dee9        #e5e9f0        #eceef4                    Frost                #8fbcbb        #88c0d0        #81a1c1        #5e81ac                    Aurora                #bf616a        #d08770        #ebcb8b        #a3be8c        #b48ead                    This project is licensed under the MIT license.        Created By Adam Chlebek and Collin Larson    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatButtonComponent', 'selector': 'app-chat-button'},{'name': 'FriendCardComponent', 'selector': 'app-friend-card'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NetworkComponent', 'selector': 'app-network'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ReleaseRubricComponent', 'selector': 'app-release-rubric'},{'name': 'SetupComponent', 'selector': 'app-setup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AboutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/App.html":{"url":"interfaces/App.html","title":"interface - App","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  App\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/setup/models/app.model.ts\n        \n\n            \n                Description\n            \n            \n                \nApp interface (model)\n\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        appId\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        appId\n                                    \n                                \n                                \n                                    \n                                        appId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    App Id \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    App Name \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface App {\n    /** App Id */\n    appId: number;\n\n    /** App Name */\n    name: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        Sets App Component Links\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'HashMap'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n/**\n * Sets App Component Links\n */\n@Component({\n  selector    : 'app-root',\n  templateUrl : './app.component.html',\n  styleUrls   : ['./app.component.scss']\n})\n\n/** Sets Component Title */\nexport class AppComponent {\n  title = 'HashMap';\n}\n\n    \n\n    \n        \n\n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatButtonComponent', 'selector': 'app-chat-button'},{'name': 'FriendCardComponent', 'selector': 'app-friend-card'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NetworkComponent', 'selector': 'app-network'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ReleaseRubricComponent', 'selector': 'app-release-rubric'},{'name': 'SetupComponent', 'selector': 'app-setup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAboutComponent\n\nAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nChatButtonComponent\n\nChatButtonComponent\n\nAppModule -->\n\nChatButtonComponent->AppModule\n\n\n\n\n\nFriendCardComponent\n\nFriendCardComponent\n\nAppModule -->\n\nFriendCardComponent->AppModule\n\n\n\n\n\nNavComponent\n\nNavComponent\n\nAppModule -->\n\nNavComponent->AppModule\n\n\n\n\n\nNetworkComponent\n\nNetworkComponent\n\nAppModule -->\n\nNetworkComponent->AppModule\n\n\n\n\n\nProfileComponent\n\nProfileComponent\n\nAppModule -->\n\nProfileComponent->AppModule\n\n\n\n\n\nReleaseRubricComponent\n\nReleaseRubricComponent\n\nAppModule -->\n\nReleaseRubricComponent->AppModule\n\n\n\n\n\nSetupComponent\n\nSetupComponent\n\nAppModule -->\n\nSetupComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n            Description\n        \n        \n            \nNg module declarions, imports, and providers\n\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AboutComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            ChatButtonComponent\n                        \n                        \n                            FriendCardComponent\n                        \n                        \n                            NavComponent\n                        \n                        \n                            NetworkComponent\n                        \n                        \n                            ProfileComponent\n                        \n                        \n                            ReleaseRubricComponent\n                        \n                        \n                            SetupComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { AppRoutingModule, routingComponents } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AngularFontAwesomeModule } from 'angular-font-awesome';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { AngularFireStorageModule } from '@angular/fire/storage';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\nimport { SetupComponent } from './setup/setup.component';\nimport { NavComponent } from './nav/nav.component';\nimport { AboutComponent } from './about/about.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ReleaseRubricComponent } from './release-rubric/release-rubric.component';\nimport { ToastrModule } from 'ngx-toastr';\nimport { ProfileComponent } from './profile/profile.component';\nimport { NetworkComponent } from './network/network.component';\nimport { MatChipsModule, MatIconModule, MatTabsModule,\n        MatAutocompleteModule, MatFormFieldModule,\n        MatInputModule, MatButtonModule, MatCheckboxModule,\n        MatTableModule, MatSelectModule, MatDialogModule, MatExpansionModule } from '@angular/material';\nimport { NgxUsefulSwiperModule } from 'ngx-useful-swiper';\nimport { FriendCardComponent } from './friend-card/friend-card.component';\nimport { ChatButtonComponent } from './chat-button/chat-button.component';\n\n/** Google Firebase configuration */\nconst config = {\n  apiKey            : 'AIzaSyDDpHaPU_JxdJF62QK4aZvGol1kxUVsKTg',\n  authDomain        : 'hashmaporbyt.firebaseapp.com',\n  databaseURL       : 'https://hashmaporbyt.firebaseio.com',\n  projectId         : 'hashmaporbyt',\n  storageBucket     : 'hashmaporbyt.appspot.com',\n  messagingSenderId : '988913741592',\n  appId             : '1:988913741592:web:7044428c9379127f'\n};\n\n/***********************************************\n * Ng module declarions, imports, and providers\n **********************************************/\n@NgModule({\n  declarations: [\n    AppComponent,\n    routingComponents,\n    SetupComponent,\n    NavComponent,\n    AboutComponent,\n    ReleaseRubricComponent,\n    ProfileComponent,\n    NetworkComponent,\n    FriendCardComponent,\n    ChatButtonComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    AngularFontAwesomeModule,\n    AngularFireModule.initializeApp(config),\n    AngularFirestoreModule,       // firestore\n    AngularFireAuthModule,        // auth\n    AngularFireStorageModule,     // storage\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    MatChipsModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    MatTableModule,\n    MatDialogModule,\n    MatSelectModule,\n    MatTabsModule,\n    MatExpansionModule,\n    NgxUsefulSwiperModule,\n    ToastrModule.forRoot({\n      maxOpened: 1,\n      autoDismiss: true\n    }),\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  entryComponents: []\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { AboutComponent } from './about/about.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SetupComponent } from './setup/setup.component';\nimport { AuthGuard } from './auth.guard';\nimport { ReleaseRubricComponent } from './release-rubric/release-rubric.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { NetworkComponent } from './network/network.component';\n\n/**********************************************\n * @author Adam Chlebek\n * @version 1.0\n * @description Manage routes of all components\n * notifcations\n *********************************************/\n\n/** Routes collection for all components */\nconst routes: Routes = [\n  { path: 'rubric', component: ReleaseRubricComponent},\n  { path: '',\n    redirectTo: '/about',\n    pathMatch: 'full'\n  },\n  { path: 'network', component: NetworkComponent},\n  { path: 'setup', component: SetupComponent, canActivate: [AuthGuard] },\n  { path: 'about', component: AboutComponent },\n  { path: 'profile', component: ProfileComponent, canActivate: [AuthGuard] }\n];\n\n/**\n * Defines NgModule\n */\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\nexport const routingComponents = [SetupComponent];\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Apps.html":{"url":"interfaces/Apps.html","title":"interface - Apps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Apps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/steam/models/apps-model.ts\n        \n\n            \n                Description\n            \n            \n                \nApps interface (Model)\n\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        apps\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apps\n                                    \n                                \n                                \n                                    \n                                        apps:     SteamApp[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SteamApp[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    apps array of steam apps \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { SteamApp } from './steamApp.model';\n\n/******************************\n * Apps interface (Model)\n *****************************/\nexport interface Apps {\n    /** apps array of steam apps */\n    apps: SteamApp[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth.guard.ts\n            \n\n                \n                Description\n                \n                \n                    Defines Injectable \n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                isLoggedIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth.guard.ts:17\n                            \n                        \n\n                \n                    \n                            \nCreates an instance of auth guard.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                AuthService\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Router module\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth.guard.ts:33\n                \n            \n\n\n            \n                \n                    \nDetermines whether a user can access a page\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    next\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ActivatedRouteSnapshot (angular routing, next component)\n\n                                    \n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ActivatedRouteSnapshot (angular routing, current component)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        activate\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isLoggedIn\n                        \n                        \n                    \n                \n            \n            \n                \nisLoggedIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth.guard.ts:52\n                \n            \n\n\n            \n                \n                    \nDetermines whether a user is logged in.\nUsed for spec testing\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true\n\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './services/auth/auth.service';\nimport { take, map, tap } from 'rxjs/operators';\n\n/** Defines Injectable */\n@Injectable({\n  providedIn: 'root'\n})\n/**********************************************************\n * @author Collin Larson\n * @version 1.0\n * @description Auth Guard is the security guard / bouncer\n * for pages that require a logged in user.\n *********************************************************/\nexport class AuthGuard implements CanActivate {\n  /*********************************************************\n   * Creates an instance of auth guard.\n   * @param auth AuthService\n   * @param router Angular Router module\n   * @description Constructs the AuthGuard with its needed\n   * dependicies\n   ********************************************************/\n  constructor(private auth: AuthService, private router: Router) { }\n\n  /***************************************************************************\n   * Determines whether a user can access a page\n   * @param next ActivatedRouteSnapshot (angular routing, next component)\n   * @param state ActivatedRouteSnapshot (angular routing, current component)\n   * @returns activate\n   **************************************************************************/\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable |\n  Promise | boolean | UrlTree {\n    return this.auth.user$.pipe(\n      take(1),\n      map(user => !!user),\n      tap(loggedIn => {\n        if (!loggedIn) {\n          console.log('Acess denied');\n          this.router.navigate(['/about']);\n        }\n      })\n    );\n  }\n\n  /*********************************************\n   * Determines whether a user is logged in.\n   * Used for spec testing\n   * @returns true\n   ********************************************/\n  isLoggedIn() {\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth/auth.service.ts\n        \n\n            \n                Description\n            \n            \n                Defines Injectable \n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                googleSignin\n                            \n                            \n                                    Public\n                                    Async\n                                signOut\n                            \n                            \n                                    Private\n                                updateUserData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(afAuth: AngularFireAuth, afs: AngularFirestore, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth/auth.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        afAuth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Fire Auth service\n\n                                                        \n                                                \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Firestore API service\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular router service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            googleSignin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    googleSignin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth.service.ts:53\n                \n            \n\n\n            \n                \n                    \nGoogle signin method\n\n\n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        a void promise\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            signOut\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    signOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth.service.ts:63\n                \n            \n\n\n            \n                \n                    \nSigns a user out\n\n\n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        route to about page\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateUserData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUserData(user)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth.service.ts:73\n                \n            \n\n\n            \n                \n                    \nUpdates user data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the logged in user\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        an obserable of user\n\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth/auth.service.ts:25\n                            \n                        \n\n                \n                    \n                        User$  of auth service \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { auth } from 'firebase/app';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport {\n  AngularFirestore,\n  AngularFirestoreDocument\n} from '@angular/fire/firestore';\nimport { Observable, of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { User } from '../user.model';\n\n/** Defines Injectable */\n@Injectable({\n  providedIn: 'root'\n})\n/************************************************\n * @author Collin larson\n * @version 1.0\n * @class AuthService\n * @description API service for managing users\n ***********************************************/\nexport class AuthService {\n  /** User$  of auth service */\n  user$: Observable;\n\n  /*****************************************************\n   * @param afAuth Angular Fire Auth service\n   * @param afs Angular Firestore API service\n   * @param router Angular router service\n   * @description Creates an instance of auth service.\n   ****************************************************/\n  constructor(\n    private afAuth: AngularFireAuth,\n    private afs: AngularFirestore,\n    private router: Router\n  ) {\n    this.user$ = this.afAuth.authState.pipe(\n      switchMap(user => {\n        if (user) {\n          return this.afs.doc(`users/${user.uid}`).valueChanges();\n        } else {\n          return of(null);\n        }\n      })\n    );\n  } // end of constructor\n\n  /******************************\n   * Google signin method\n   * @returns a void promise\n   *****************************/\n  public async googleSignin() {\n    const provider   = new auth.GoogleAuthProvider();\n    const credential = await this.afAuth.auth.signInWithPopup(provider);\n    return this.updateUserData(credential.user);\n  } // end of signin\n\n  /********************************\n   * Signs a user out\n   * @returns route to about page\n   *******************************/\n  public async signOut() {\n    await this.afAuth.auth.signOut();\n    return this.router.navigate(['/about']);\n  } // end of signout\n\n  /**********************************\n   * Updates user data\n   * @param user the logged in user\n   * @returns an obserable of user\n   ********************************/\n  private updateUserData(user) {\n    // Sets user data to firestore on login\n    const userRef: AngularFirestoreDocument = this.afs.doc(`users/${user.uid}`);\n\n    const data = {\n      uid         : user.uid,\n      email       : user.email,\n      displayName : user.displayName,\n      photoURL    : user.photoURL\n    };\n\n    return userRef.set(data, { merge: true });\n\n  } // end of upDateUserData\n\n} // end of auth service\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChatButtonComponent.html":{"url":"components/ChatButtonComponent.html","title":"component - ChatButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ChatButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/chat-button/chat-button.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-chat-button\n            \n\n            \n                styleUrls\n                ./chat-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./chat-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/chat-button/chat-button.component.ts:15\n                            \n                        \n\n                \n                    \n                            Creates an instance of chat button component. \n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/chat-button/chat-button.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-chat-button',\n  templateUrl: './chat-button.component.html',\n  styleUrls: ['./chat-button.component.scss']\n})\n\n/**************************************************\n * @author Adam Chlebek and Collin Larson\n * @version 1.0\n * @description ChatButtonComponent class handles the\n * front end logic of openeing the chat model\n *************************************************/\nexport class ChatButtonComponent implements OnInit {\n\n  /** Creates an instance of chat button component. */\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  message\n\n\n    \n\n    \n                \n                    ./chat-button.component.scss\n                \n                .btn-circle.btn-xl {\n  width: 60px;\n  height: 60px;\n  padding: 10px 16px;\n  border-radius: 35px;\n}\n\n.btn-circle {\n  width: 30px;\n  height: 30px;\n  padding: 6px 0px;\n  border-radius: 15px;\n  text-align: center;\n  font-size: 14px;\n  line-height: 1.42857;\n  background-color: #a3be8c;\n  border-color: #a3be8c;\n}\n\n.messageButton{\n  overflow: hidden;\n  position: fixed;\n  bottom: 18px;\n  right: 18px;\n  width: 100%;\n  z-index: 2;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  message'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatButtonComponent', 'selector': 'app-chat-button'},{'name': 'FriendCardComponent', 'selector': 'app-friend-card'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NetworkComponent', 'selector': 'app-network'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ReleaseRubricComponent', 'selector': 'app-release-rubric'},{'name': 'SetupComponent', 'selector': 'app-setup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChatButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CommunicationPlatform.html":{"url":"interfaces/CommunicationPlatform.html","title":"interface - CommunicationPlatform","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CommunicationPlatform\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/setup/models/communication-platform.model.ts\n        \n\n            \n                Description\n            \n            \n                \nCommunication platform interface (model)\n\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Comm Id \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Comm Name \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface CommunicationPlatform {\n    /** Comm Id */\n    id: number;\n\n    /** Comm Name */\n    name: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Day.html":{"url":"interfaces/Day.html","title":"interface - Day","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Day\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/setup/models/days.model.ts\n        \n\n            \n                Description\n            \n            \n                \nDay interface (model)\n\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Day Id \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Day name \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Day {\n    /** Day Id */\n    id: number;\n\n    /** Day name */\n    name: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FriendCardComponent.html":{"url":"components/FriendCardComponent.html","title":"component - FriendCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FriendCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/friend-card/friend-card.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-friend-card\n            \n\n            \n                styleUrls\n                ./friend-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./friend-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                friends\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/friend-card/friend-card.component.ts:19\n                            \n                        \n\n                \n                    \n                            Creates an instance of friend card component. \n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        friends\n                    \n                \n                \n                    \n                        Type :         Profile[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/friend-card/friend-card.component.ts:19\n                            \n                        \n                \n                    \n                        Input of friends for component \n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/friend-card/friend-card.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Profile } from '../setup/models/profile.model';\n\n@Component({\n  selector: 'app-friend-card',\n  templateUrl: './friend-card.component.html',\n  styleUrls: ['./friend-card.component.scss']\n})\n\n/**************************************************\n * @author Adam Chlebek and Collin Larson\n * @version 1.0\n * @description FriendCardComponent class handles the\n * front end logic of showing your friend list.\n *************************************************/\nexport class FriendCardComponent implements OnInit {\n\n  /** Input of friends for component */\n  @Input() friends: Profile[];\n  \n  /** Creates an instance of friend card component. */\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n        \n          \n            \n          \n          \n            \n              {{friend.displayName}}\n            \n            \n              \n                \n                  \n                    \n                      Bio\n                    \n                  \n                  {{friend.bio}}\n                \n              \n            \n          \n        \n    \n  \n\n\n\n\n    \n\n    \n                \n                    ./friend-card.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                  {{friend.displayName}}                                                                                                                  Bio                                                        {{friend.bio}}                                                                  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatButtonComponent', 'selector': 'app-chat-button'},{'name': 'FriendCardComponent', 'selector': 'app-friend-card'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NetworkComponent', 'selector': 'app-network'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ReleaseRubricComponent', 'selector': 'app-release-rubric'},{'name': 'SetupComponent', 'selector': 'app-setup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FriendCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavComponent.html":{"url":"components/NavComponent.html","title":"component - NavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/nav/nav.component.ts\n\n\n    \n        Description\n    \n    \n        Setup Component Links \n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-nav\n            \n\n            \n                styleUrls\n                ./nav.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./nav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/nav/nav.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                authService\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/nav/nav.component.ts:27\n                \n            \n\n\n            \n                \n                    Nav Component Initialization\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            auth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/nav/nav.component.ts:22\n                            \n                        \n\n                \n                    \n                        authService\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth/auth.service';\n\n/** Setup Component Links */\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.scss']\n})\n\n/**************************************************\n * @author Adam Chlebek and Colin Larson\n * @version 1.0\n * @description Creates Navigation Bar for all\n * components on the page.\n *************************************************/\nexport class NavComponent implements OnInit {\n  /***********************************************************\n   * @param auth authService\n   * @description Creates an instance of nav component.\n   *********************************************************/\n   constructor(public auth: AuthService) { }\n\n  /**\n   * Nav Component Initialization\n   */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  LOGO HERE -->\n  \n  \n  \n  \n  \n     \n        \n           Home (current)\n        \n        \n           |\n        \n        \n           Rubric\n        \n        \n           |\n        \n        \n           Network\n        \n        \n           |\n        \n        \n           Setup\n        \n        \n           |\n        \n        \n           Profile\n        \n     \n     \n     \n         \n            Hello, {{ user.displayName }}!\n            \n            Sign Out\n         \n         \n            \n               \n               \n               \n               \n               \n               Sign in with Google\n               \n               \n            \n         \n      \n  \n\n\n    \n\n    \n                \n                    ./nav.component.scss\n                \n                .login-container{\n    max-width: 400px;\n    margin: 60px auto 0;\n}\n\n.error{\ncolor: tomato;\nfont-size: 12px;\npadding-top: 4px\n}\n\n.photo-img{\n  margin: 0;\n  position: absolute;\n  top: 50%;\n  width: 30px;\n}\n\n.avatar {\n  vertical-align: middle;\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n  margin-right: 15px;\n}\n\n.welcomeText{\n  padding-right: 18px;\n  color:white;\n}\n\n// Google Identity and Google+ Sign in buttons\n// https://developers.google.com/+/branding-guidelines\n\n.google-button {\n    height: 35px;\n    border-width: 0;\n    background: white;\n    color: #737373;\n    border-radius: 5px;\n    white-space: nowrap;\n    box-shadow: 1px 1px 0px 1px rgba(0,0,0,0.05);\n    transition-property: background-color, box-shadow;\n    transition-duration: 150ms;\n    transition-timing-function: ease-in-out;\n    padding: 0;\n    margin-top: 10px;\n\n    &:focus,\n    &:hover {\n      box-shadow: 1px 4px 5px 1px rgba(0,0,0,0.1);\n    }\n\n    &:active {\n      background-color: #e5e5e5;\n      box-shadow: none;\n      transition-duration: 10ms;\n    }\n  }\n\n  .google-button__icon {\n    display: inline-block;\n    vertical-align: middle;\n    margin: 8px 0 8px 8px;\n    width: 18px;\n    height: 18px;\n    box-sizing: border-box;\n  }\n\n  .google-button__icon--plus {\n    width: 27px;\n  }\n\n  .google-button__text {\n    display: inline-block;\n    vertical-align: middle;\n    padding: 0 18px;\n    font-size: 14px;\n    font-weight: bold;\n    font-family: 'Roboto',arial,sans-serif;\n  }\n\n  // Boilerplate stuff\n\n  html, body {\n    height: 100%;\n  }\n\n  body {\n    background-color: #f0f0f0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n  button ~ button {\n    margin-left: 20px;\n  }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  LOGO HERE -->                                  Home (current)                           |                           Rubric                           |                           Network                           |                           Setup                           |                           Profile                                            Hello, {{ user.displayName }}!                        Sign Out                                                                                                                        Sign in with Google                                                           '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatButtonComponent', 'selector': 'app-chat-button'},{'name': 'FriendCardComponent', 'selector': 'app-friend-card'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NetworkComponent', 'selector': 'app-network'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ReleaseRubricComponent', 'selector': 'app-release-rubric'},{'name': 'SetupComponent', 'selector': 'app-setup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NetworkComponent.html":{"url":"components/NetworkComponent.html","title":"component - NetworkComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NetworkComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/network/network.component.ts\n\n\n    \n        Description\n    \n    \n        Setup Component Links \n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-network\n            \n\n            \n                styleUrls\n                ./network.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./network.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                friendSwiper\n                            \n                            \n                                profile\n                            \n                            \n                                profiles\n                            \n                            \n                                steamApps\n                            \n                            \n                                    Private\n                                uid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addFriend\n                            \n                            \n                                decline\n                            \n                            \n                                findFriends\n                            \n                            \n                                getProfile\n                            \n                            \n                                isDaySelected\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, api: NetworkService, profileAPI: ProfileService, notificationService: NotificationService, auth: AuthService, setupAPI: SetupService, afs: AngularFirestore)\n                    \n                \n                        \n                            \n                                Defined in src/app/network/network.component.ts:55\n                            \n                        \n\n                \n                    \n                            \nCreates an instance of network component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                material dialog component\n\n                                                        \n                                                \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        NetworkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Network Service api\n\n                                                        \n                                                \n                                                \n                                                        profileAPI\n                                                  \n                                                        \n                                                                        ProfileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Profile Service api\n\n                                                        \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                notification service api\n\n                                                        \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                auth api\n\n                                                        \n                                                \n                                                \n                                                        setupAPI\n                                                  \n                                                        \n                                                                        SetupService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                setup api\n\n                                                        \n                                                \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                anguar firstore\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addFriend\n                        \n                        \n                    \n                \n            \n            \n                \naddFriend(prof: Profile, index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/network/network.component.ts:141\n                \n            \n\n\n            \n                \n                    \nAdds friend\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    prof\n                                    \n                                                Profile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        profile to be added\n\n                                    \n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        index of swiper\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            decline\n                        \n                        \n                    \n                \n            \n            \n                \ndecline(prof: Profile, index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/network/network.component.ts:159\n                \n            \n\n\n            \n                \n                    \nDeclines network component\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    prof\n                                    \n                                                Profile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        profile to be removed\n\n                                    \n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        index of profile\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findFriends\n                        \n                        \n                    \n                \n            \n            \n                \nfindFriends()\n                \n            \n\n\n            \n                \n                    Defined in src/app/network/network.component.ts:104\n                \n            \n\n\n            \n                \n                    \nFinds friends\n\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getProfile\n                        \n                        \n                    \n                \n            \n            \n                \ngetProfile()\n                \n            \n\n\n            \n                \n                    Defined in src/app/network/network.component.ts:89\n                \n            \n\n\n            \n                \n                    \nGets profile from google firebase, and\nfills out the ngModule respectively.\n\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDaySelected\n                        \n                        \n                    \n                \n            \n            \n                \nisDaySelected(profile: Profile, id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/network/network.component.ts:168\n                \n            \n\n\n            \n                \n                    \nDetermines whether day selected is\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    profile\n                                    \n                                                Profile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        => day id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        boolean\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/network/network.component.ts:78\n                \n            \n\n\n            \n                \n                    Network Component Initialization \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SwiperOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    pagination: { el: '.swiper-pagination', clickable: true },\n    navigation: {\n      nextEl: '.swiper-button-next',\n      prevEl: '.swiper-button-prev',\n    },\n    keyboard: true,\n    spaceBetween: 30\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/network.component.ts:47\n                            \n                        \n\n                \n                    \n                        Config  of swiper \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/network.component.ts:69\n                            \n                        \n\n                \n                    \n                        material dialog component\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            friendSwiper\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SwiperComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('friendSwiper', {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/network.component.ts:32\n                            \n                        \n\n                \n                    \n                        View Swiper child \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            profile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Profile\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/network.component.ts:38\n                            \n                        \n\n                \n                    \n                        User Profile \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            profiles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Profile[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/network.component.ts:41\n                            \n                        \n\n                \n                    \n                        Profiles of network component \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            steamApps\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SteamApp[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/network.component.ts:44\n                            \n                        \n\n                \n                    \n                        Steam apps of profile \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/network/network.component.ts:35\n                            \n                        \n\n                \n                    \n                        Uid of profile \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ɵConsole, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { NetworkService } from './network.service';\nimport { Profile } from '../setup/models/profile.model';\nimport { DocumentSnapshot, AngularFirestore } from '@angular/fire/firestore';\nimport { SwiperOptions } from 'swiper';\nimport { SteamApp } from '../services/steam/models/steamApp.model';\nimport { ProfileService } from '../profile/profile.service';\nimport * as _ from 'lodash';\nimport { SwiperComponent } from 'ngx-useful-swiper';\nimport { NotificationService } from '../utility/notification/notification.service';\nimport { AuthService } from '../services/auth/auth.service';\nimport { SetupService } from '../setup/setup.service';\n\n\n/** Setup Component Links */\n@Component({\n  selector: 'app-network',\n  templateUrl: './network.component.html',\n  styleUrls: ['./network.component.scss']\n})\n\n/**************************************************\n * @author Adam Chlebek and Collin Larson\n * @version 1.0\n * @description Network component gets a list of profiles\n * based the users setup.\n *************************************************/\nexport class NetworkComponent implements OnInit {\n\n  /** View Swiper child */\n  @ViewChild('friendSwiper', { static: false }) friendSwiper: SwiperComponent;\n\n  /** Uid of profile */\n  private uid: string;\n\n  /** User Profile */\n  profile: Profile;\n\n  /** Profiles of network component */\n  profiles: Profile[];\n\n  /** Steam apps of profile */\n  steamApps: SteamApp[];\n\n  /** Config  of swiper */\n  config: SwiperOptions = {\n    pagination: { el: '.swiper-pagination', clickable: true },\n    navigation: {\n      nextEl: '.swiper-button-next',\n      prevEl: '.swiper-button-prev',\n    },\n    keyboard: true,\n    spaceBetween: 30\n  };\n\n\n  /******************************************************\n   * Creates an instance of network component.\n   * @param dialog material dialog component\n   * @param api Network Service api\n   * @param profileAPI Profile Service api\n   * @param notificationService notification service api\n   * @param auth auth api\n   * @param setupAPI setup api\n   * @param afs anguar firstore\n   ****************************************************/\n  constructor(\n    public dialog: MatDialog,\n    private api: NetworkService,\n    private profileAPI: ProfileService,\n    private notificationService: NotificationService,\n    private auth: AuthService,\n    private setupAPI: SetupService,\n    private afs: AngularFirestore) { }\n\n  /** Network Component Initialization */\n  ngOnInit() {\n    this.auth.user$.subscribe(u => {\n      this.uid  = u.uid;\n      this.getProfile();\n    });\n  }\n\n  /******************************************\n   * Gets profile from google firebase, and\n   * fills out the ngModule respectively.\n   *****************************************/\n  getProfile() {\n    // prof is a DocumentData, typing as any to get past typescript mismatch issue\n    this.setupAPI.getProfile(this.uid).subscribe((prof: any) => {\n      if (prof.exists) {\n        this.profile = prof.data();\n        this.findFriends();\n      } else {\n        this.notificationService.showErrorWithTimeout('Profile not found.', 'Error', 5000);\n      } // end of if profile exists\n    });\n  } // end of get profile\n\n  /*******************************\n   * Finds friends\n   ******************************/\n  findFriends() {\n    this.api.getProfiles(this.profile).subscribe((profiles$: any) => {\n\n      let profiles: Profile[] = [];\n      profiles$.docs.forEach((profile: DocumentSnapshot) => {\n        if ((profile.id !== this.uid) && !_.find(this.profile.friends, {id: profile.id}) ) {\n          profiles.push(profile.data());\n        }\n      });\n\n      profiles.forEach((prof: Profile) => {\n        let apps = [];\n        this.profileAPI.getRegion(this.profile.regionId.toString()).subscribe((region: any) => {\n          prof._region = region.data();\n        });\n        this.profileAPI.getComm(this.profile.communicationPlatformId.toString()).subscribe((comm: any) => {\n          prof._communicationPlatform = comm.data();\n        });\n        this.profileAPI.getPlatform(this.profile.platformId.toString()).subscribe((platform: any) => {\n          prof._platform = platform.data();\n        });\n        prof.steamApps.forEach((appId) => {\n          this.profileAPI.getSteamApp(appId.toString()).subscribe((app: any) => {\n            apps.push(app.data());\n          });\n        });\n        prof._steamAppChips = apps;\n      });\n      this.profiles = profiles;\n    });\n  }\n\n  /******************************************\n   * Adds friend\n   * @param prof profile to be added\n   * @param index index of swiper\n   *****************************************/\n  addFriend(prof: Profile, index: number) {\n    if (this.profile.friends == null) {\n      this.profile.friends = [];\n    }\n\n    this.profile.friends.push(this.afs.doc(`profiles/${prof.uid}`).ref);\n\n    this.setupAPI.saveProfile(this.profile).then((val: any) => {\n      this.friendSwiper.swiper.removeSlide(index);\n      this.notificationService.showSuccessWithTimeout('Friend added successfully.', 'Success.', 1000);\n    });\n  }\n\n  /****************************************\n   * Declines network component\n   * @param prof profile to be removed\n   * @param index index of profile\n   **************************************/\n  decline(prof: Profile, index: number) {\n    this.friendSwiper.swiper.removeSlide(index);\n  }\n\n  /**************************************\n   * Determines whether day selected is\n   * @param id => day id\n   * @returns boolean\n   *************************************/\n  isDaySelected(profile: Profile, id: number) {\n    return _.includes(profile.days, id);\n  } // end of isDaySelected\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            \n              \n                {{profile.displayName}}\n                \n                  \n                    \n                      \n                    \n                  \n                \n                \n                  \n                    \n                      Region Id: {{profile._region.name}}    \n                    \n                  \n                  \n                    \n                      Platform: {{profile._platform.name}}\n                    \n                  \n                  \n                    \n                      Communication Preference: {{profile._communicationPlatform.name}}    \n                    \n                  \n                \n                \n                  \n                    \n                      Steam Games\n                      \n                        \n                          \n                            {{app.name}}\n                          \n                        \n                      \n                    \n                  \n                \n                \n                  \n                    \n                      Available Day(s)\n                      \n                        \n                          \n                          Mon\n                        \n                        \n                            \n                            Tue\n                        \n                        \n                            \n                            Wed\n                        \n                        \n                            \n                            Thu\n                        \n                        \n                            \n                            Fri\n                        \n                        \n                            \n                            Sat\n                        \n                        \n                            \n                            Sun\n                        \n                      \n                    \n                  \n                \n                \n                  \n                    \n                      Bio: {{profile.bio}}\n                    \n                  \n                \n                \n                  \n                    Hard Pass\n                    Add\n                  \n                \n              \n            \n          \n        \n      \n       -->\n       -->\n       -->\n    \n  \n\n\n -->\n\n    \n\n    \n                \n                    ./network.component.scss\n                \n                .avatar {\n    width: 10%;\n    border-radius: 50%;\n    margin-left:auto;\n    margin-right:auto;\n    display: block;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                        {{profile.displayName}}                                                                                                                                                                                                              Region Id: {{profile._region.name}}                                                                                                      Platform: {{profile._platform.name}}                                                                                                  Communication Preference: {{profile._communicationPlatform.name}}                                                                                                                                      Steam Games                                                                                                    {{app.name}}                                                                                                                                                                                                          Available Day(s)                                                                                                  Mon                                                                                                        Tue                                                                                                        Wed                                                                                                        Thu                                                                                                        Fri                                                                                                        Sat                                                                                                        Sun                                                                                                                                                                                Bio: {{profile.bio}}                                                                                                            Hard Pass                    Add                                                                                           -->       -->       -->       -->'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatButtonComponent', 'selector': 'app-chat-button'},{'name': 'FriendCardComponent', 'selector': 'app-friend-card'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NetworkComponent', 'selector': 'app-network'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ReleaseRubricComponent', 'selector': 'app-release-rubric'},{'name': 'SetupComponent', 'selector': 'app-setup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NetworkComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NetworkService.html":{"url":"injectables/NetworkService.html","title":"injectable - NetworkService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NetworkService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/network/network.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getProfiles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(afs: AngularFirestore)\n                    \n                \n                        \n                            \n                                Defined in src/app/network/network.service.ts:15\n                            \n                        \n\n                \n                    \n                            \nCreates an instance of network service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                AngularFireStore\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getProfiles\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfiles(prof: Profile)\n                \n            \n\n\n            \n                \n                    Defined in src/app/network/network.service.ts:28\n                \n            \n\n\n            \n                \n                    \nGets profiles\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    prof\n                                    \n                                                Profile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        user profile\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        list of similar profiles\n\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { Profile } from '../setup/models/profile.model';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n/**************************************************\n * @author Adam Chlebek and Collin Larson\n * @version 1.0\n * @description Network service gets a list of profiles\n * based the users setup.\n *************************************************/\nexport class NetworkService {\n\n  /*********************************************\n   * Creates an instance of network service.\n   * @param afs AngularFireStore\n   *******************************************/\n  constructor(private afs: AngularFirestore) { }\n\n  /*************************************\n   * Gets profiles\n   * @param prof user profile\n   * @returns list of similar profiles\n   ************************************/\n  public getProfiles(prof: Profile) {\n    const profiles$ = this.afs.collection('profiles', ref => ref\n      .where('regionId', '==', prof.regionId)\n      .where('platformId', '==', prof.platformId)\n      .where('communicationPlatformId', '==', prof.communicationPlatformId));\n    return profiles$.get();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationService.html":{"url":"injectables/NotificationService.html","title":"injectable - NotificationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NotificationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utility/notification/notification.service.ts\n        \n\n            \n                Description\n            \n            \n                Defines Injectable \n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                showErrorWithTimeout\n                            \n                            \n                                showHTMLMessage\n                            \n                            \n                                showSuccess\n                            \n                            \n                                showSuccessWithTimeout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(toastr: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/app/utility/notification/notification.service.ts:16\n                            \n                        \n\n                \n                    \n                            \nCreates an instance of notification service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                toaster service\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showErrorWithTimeout\n                        \n                        \n                    \n                \n            \n            \n                \nshowErrorWithTimeout(message, title, timespan)\n                \n            \n\n\n            \n                \n                    Defined in src/app/utility/notification/notification.service.ts:55\n                \n            \n\n\n            \n                \n                    \nShows error with timeout\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        displayed message\n\n                                    \n                                \n                                \n                                    title\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        displayed title\n\n                                    \n                                \n                                \n                                    timespan\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        time in ms\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showHTMLMessage\n                        \n                        \n                    \n                \n            \n            \n                \nshowHTMLMessage(message, title)\n                \n            \n\n\n            \n                \n                    Defined in src/app/utility/notification/notification.service.ts:68\n                \n            \n\n\n            \n                \n                    \nShows htmlmessage\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        displayed message\n\n                                    \n                                \n                                \n                                    title\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        displayed title\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showSuccess\n                        \n                        \n                    \n                \n            \n            \n                \nshowSuccess(message, title)\n                \n            \n\n\n            \n                \n                    Defined in src/app/utility/notification/notification.service.ts:29\n                \n            \n\n\n            \n                \n                    \nShows success toastr\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        displayed message\n\n                                    \n                                \n                                \n                                    title\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        displayed title\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showSuccessWithTimeout\n                        \n                        \n                    \n                \n            \n            \n                \nshowSuccessWithTimeout(message, title, timespan)\n                \n            \n\n\n            \n                \n                    Defined in src/app/utility/notification/notification.service.ts:41\n                \n            \n\n\n            \n                \n                    \nShows success with timeout\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        displayed message\n\n                                    \n                                \n                                \n                                    title\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        displayed title\n\n                                    \n                                \n                                \n                                    timespan\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        time in ms\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\n\n/** Defines Injectable */\n@Injectable({\n  providedIn: 'root'\n})\n\n/**********************************************\n * @class NotificationService\n * @author Collin Larson\n * @version 1.0\n * @description NGX Toaster service to manage\n * * notifcations\n *********************************************/\nexport class NotificationService {\n\n  /***********************************************\n   * Creates an instance of notification service.\n   * @param toastr toaster service\n   ***********************************************/\n  constructor(private toastr: ToastrService) { }\n\n  /************************************\n   * Shows success toastr\n   * @param message displayed message\n   * @param title displayed title\n   ***********************************/\n  showSuccess(message, title) {\n    this.toastr.success(message, title, {\n      disableTimeOut: true\n    });\n  }\n\n  /**************************************\n   * Shows success with timeout\n   * @param message displayed message\n   * @param title displayed title\n   * @param timespan time in ms\n   ************************************/\n  showSuccessWithTimeout(message, title, timespan) {\n    this.toastr.success(message, title , {\n      timeOut       :  timespan,\n      positionClass : 'toast-top-center',\n      closeButton   : true,\n    });\n  }\n\n  /**************************************\n   * Shows error with timeout\n   * @param message displayed message\n   * @param title displayed title\n   * @param timespan time in ms\n   ************************************/\n  showErrorWithTimeout(message, title, timespan) {\n    this.toastr.error(message, title, {\n      timeOut       :  timespan,\n      positionClass : 'toast-top-center',\n      closeButton   : true,\n    });\n  }\n\n  /*************************************\n   * Shows htmlmessage\n   * @param message displayed message\n   * @param title  displayed title\n   ***********************************/\n  showHTMLMessage(message, title) {\n    this.toastr.success(message, title, {\n      enableHtml : true\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Platform.html":{"url":"interfaces/Platform.html","title":"interface - Platform","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Platform\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/setup/models/platform.model.ts\n        \n\n            \n                Description\n            \n            \n                \nPlatform interface (model)\n\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Platform Id \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Platform Name \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Platform {\n    /** Platform Id */\n    id: number;\n\n    /** Platform Name */\n    name: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Profile.html":{"url":"interfaces/Profile.html","title":"interface - Profile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Profile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/setup/models/profile.model.ts\n        \n\n            \n                Description\n            \n            \n                \nProfile interface (model)\n\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        _communicationPlatform\n                                \n                                \n                                        _friends\n                                \n                                \n                                        _platform\n                                \n                                \n                                        _region\n                                \n                                \n                                        _steamAppChips\n                                \n                                \n                                        bio\n                                \n                                \n                                        communicationPlatformId\n                                \n                                \n                                        days\n                                \n                                \n                                        displayName\n                                \n                                \n                                        friends\n                                \n                                \n                                        photoURL\n                                \n                                \n                                        platformId\n                                \n                                \n                                        regionId\n                                \n                                \n                                        steamApps\n                                \n                                \n                                        uid\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _communicationPlatform\n                                    \n                                \n                                \n                                    \n                                        _communicationPlatform:         CommunicationPlatform\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CommunicationPlatform\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    client side comm platform \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        _friends\n                                    \n                                \n                                \n                                    \n                                        _friends:         Profile[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Profile[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    friends list \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        _platform\n                                    \n                                \n                                \n                                    \n                                        _platform:         Platform\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Platform\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    client side platform \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        _region\n                                    \n                                \n                                \n                                    \n                                        _region:         Region\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Region\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    client side region \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        _steamAppChips\n                                    \n                                \n                                \n                                    \n                                        _steamAppChips:     SteamApp[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SteamApp[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List of steam app chips (client side only) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bio\n                                    \n                                \n                                \n                                    \n                                        bio:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Profile's bio \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        communicationPlatformId\n                                    \n                                \n                                \n                                    \n                                        communicationPlatformId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Profile's Communication Platform \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        days\n                                    \n                                \n                                \n                                    \n                                        days:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Profile's available Days \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                    \n                                \n                                \n                                    \n                                        displayName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Prodile Display Name \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        friends\n                                    \n                                \n                                \n                                    \n                                        friends:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    friends snapshot \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        photoURL\n                                    \n                                \n                                \n                                    \n                                        photoURL:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Profiles photo \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platformId\n                                    \n                                \n                                \n                                    \n                                        platformId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Profile's Platform \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        regionId\n                                    \n                                \n                                \n                                    \n                                        regionId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Profile's region \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        steamApps\n                                    \n                                \n                                \n                                    \n                                        steamApps:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Profile's game interests \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uid\n                                    \n                                \n                                \n                                    \n                                        uid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Profile Id \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { SteamApp } from 'src/app/services/steam/models/steamApp.model';\nimport { Region } from './region.model';\nimport { CommunicationPlatform } from './communication-platform.model';\nimport { Platform } from './platform.model';\n\n/*******************************\n * Profile interface (model)\n ******************************/\nexport interface Profile {\n    /** Profile Id */\n    uid: string;\n\n    /** Prodile Display Name */\n    displayName: string;\n\n    /** Profile's region */\n    regionId: number;\n\n    /** Profile's Platform */\n    platformId: number;\n\n    /** Profile's Communication Platform */\n    communicationPlatformId: number;\n\n    /** Profile's available Days */\n    days: number[];\n\n    /** Profile's game interests */\n    steamApps: number[];\n\n    /** Profile's bio */\n    bio: string;\n\n    /** Profiles photo */\n    photoURL: string;\n\n    /** List of steam app chips (client side only) */\n    _steamAppChips: SteamApp[];\n\n    /** friends snapshot */\n    friends: any[];\n\n    /** friends list */\n    _friends: Profile[];\n\n    /** client side region */\n    _region: Region;\n\n    /** client side platform */\n    _platform: Platform;\n\n    /** client side comm platform */\n    _communicationPlatform: CommunicationPlatform;\n\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileComponent.html":{"url":"components/ProfileComponent.html","title":"component - ProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/profile/profile.component.ts\n\n\n    \n        Description\n    \n    \n        Setup Component Links \n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile\n            \n\n            \n                styleUrls\n                ./profile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                comm\n                            \n                            \n                                days\n                            \n                            \n                                fromSaved\n                            \n                            \n                                isLoaded\n                            \n                            \n                                noProfile\n                            \n                            \n                                platform\n                            \n                            \n                                profile\n                            \n                            \n                                region\n                            \n                            \n                                steamApps\n                            \n                            \n                                    Private\n                                uid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getProfile\n                            \n                            \n                                isDaySelected\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, notificationService: NotificationService, auth: AuthService, setupAPI: SetupService, api: ProfileService)\n                    \n                \n                        \n                            \n                                Defined in src/app/profile/profile.component.ts:60\n                            \n                        \n\n                \n                    \n                            \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                activated route\n\n                                                        \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ngx toaster service\n\n                                                        \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                auth service\n\n                                                        \n                                                \n                                                \n                                                        setupAPI\n                                                  \n                                                        \n                                                                        SetupService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                setup api\n\n                                                        \n                                                \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        ProfileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                profile api\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getProfile\n                        \n                        \n                    \n                \n            \n            \n                \ngetProfile()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile.component.ts:99\n                \n            \n\n\n            \n                \n                    \nGets profile from google firebase, and\nfills out the ngModule respectively.\n\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDaySelected\n                        \n                        \n                    \n                \n            \n            \n                \nisDaySelected(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile.component.ts:142\n                \n            \n\n\n            \n                \n                    \nDetermines whether day selected is\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        => day id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        boolean\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile.component.ts:81\n                \n            \n\n\n            \n                \n                    \nComponent controller initialization\n\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            comm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CommunicationPlatform\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:47\n                            \n                        \n\n                \n                    \n                        A communication platform \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            days\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:41\n                            \n                        \n\n                \n                    \n                        observable of day array \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fromSaved\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:32\n                            \n                        \n\n                \n                    \n                        FromSaved represents if a user is comming from the setup page after a save \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:57\n                            \n                        \n\n                \n                    \n                        a boolean promise to check if data has come back from firebase \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            noProfile\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:60\n                            \n                        \n\n                \n                    \n                        Check if user has a saved profile \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            platform\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Platform\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:50\n                            \n                        \n\n                \n                    \n                        A platform \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            profile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Profile\n\n                        \n                    \n                    \n                        \n                            Default value : {uid: '', displayName: '', regionId: null, platformId: null, communicationPlatformId: null,\n  bio: '', days: null, steamApps: null, _steamAppChips: null, friends: null, _friends: null, photoURL: null,\n  _region: null, _communicationPlatform: null, _platform: null}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:53\n                            \n                        \n\n                \n                    \n                        preloading a default profile \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            region\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Region\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:44\n                            \n                        \n\n                \n                    \n                        A region \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            steamApps\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SteamApp[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:38\n                            \n                        \n\n                \n                    \n                        an array of steam apps \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            uid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:35\n                            \n                        \n\n                \n                    \n                        uid represents a users id \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { NotificationService } from '../utility/notification/notification.service';\nimport { SetupService } from '../setup/setup.service';\nimport { AuthService } from '../services/auth/auth.service';\nimport { Observable } from 'rxjs';\nimport { Day } from '../setup/models/days.model';\nimport { CommunicationPlatform } from '../setup/models/communication-platform.model';\nimport { Platform } from '../setup/models/platform.model';\nimport { Region } from '../setup/models/region.model';\nimport { Profile } from '../setup/models/profile.model';\nimport { SteamApp } from '../services/steam/models/steamApp.model';\n\nimport * as _ from 'lodash';\nimport { ProfileService } from './profile.service';\n\n/** Setup Component Links */\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\n\n/**************************************************\n * @author Collin Larson\n * @version 1.0\n * @description Profile Component class handles the\n * front end logic of loading the user profile.\n *************************************************/\nexport class ProfileComponent implements OnInit {\n  /** FromSaved represents if a user is comming from the setup page after a save */\n  fromSaved: any;\n\n  /** uid represents a users id */\n  private uid: string;\n\n  /** an array of steam apps */\n  steamApps: SteamApp[];\n\n  /** observable of day array */\n  days: Observable;\n\n  /** A region */\n  region: Region;\n\n  /** A communication platform */\n  comm: CommunicationPlatform;\n\n  /** A platform */\n  platform: Platform;\n\n  /** preloading a default profile */\n  profile: Profile = {uid: '', displayName: '', regionId: null, platformId: null, communicationPlatformId: null,\n  bio: '', days: null, steamApps: null, _steamAppChips: null, friends: null, _friends: null, photoURL: null,\n  _region: null, _communicationPlatform: null, _platform: null};\n  /** a boolean promise to check if data has come back from firebase */\n  isLoaded: Promise;\n\n  /** Check if user has a saved profile */\n  noProfile = false;\n\n\n\n  /***********************************************************\n   * @param route activated route\n   * @param notificationService ngx toaster service\n   * @param auth auth service\n   * @param setupAPI setup api\n   * @param api profile api\n   * @description Creates an instance of profile component.\n   *********************************************************/\n  constructor(private route: ActivatedRoute,\n              private notificationService: NotificationService,\n              private auth: AuthService,\n              private setupAPI: SetupService,\n              private api: ProfileService) { }\n\n  /****************************************\n   * Component controller initialization\n   ***************************************/\n  ngOnInit() {\n    this.route.queryParams.subscribe(params => {\n      this.fromSaved = params['saved'];\n      if (this.fromSaved === 'true') {\n        // If Save is successfull\n        this.notificationService.showSuccessWithTimeout('Profile saved successfully.', 'Success.', 5000);\n      }\n    });\n    this.auth.user$.subscribe(u => {\n      this.uid  = u.uid;\n      this.getProfile();\n    });\n  } // end of ngOnInit\n\n  /******************************************\n   * Gets profile from google firebase, and\n   * fills out the ngModule respectively.\n   *****************************************/\n  getProfile() {\n    // prof is a DocumentData, typing as any to get past typescript mismatch issue\n    this.setupAPI.getProfile(this.uid).subscribe((prof: any) => {\n      if (prof.exists) {\n        this.profile = prof.data();\n        let friends: Profile[] = [];\n        let sa: SteamApp[] = [];\n        this.profile.steamApps.forEach((appId) => {\n          this.api.getSteamApp(appId.toString()).subscribe((app: any) => {\n            sa.push(app.data());\n          });\n        });\n        this.steamApps = sa;\n        this.api.getRegion(this.profile.regionId.toString()).subscribe((region: any) => {\n          this.region = region.data();\n        });\n        this.api.getComm(this.profile.communicationPlatformId.toString()).subscribe((comm: any) => {\n          this.comm = comm.data();\n        });\n        this.api.getPlatform(this.profile.platformId.toString()).subscribe((platform: any) => {\n          this.platform = platform.data();\n        });\n        _.forEach(this.profile.friends, (profRef) => {\n          profRef.get().then((friendSnapShot: any) => {\n            if (friendSnapShot.exists) {\n              friends.push(friendSnapShot.data());\n            }\n          });\n        });\n        this.profile._friends = friends;\n        this.isLoaded = Promise.resolve(true);\n      } else {\n        this.notificationService.showErrorWithTimeout('Profile not found.', 'Error', 5000);\n        this.noProfile = true;\n      } // end of if profile exists\n    });\n  } // end of get profile\n\n  /**************************************\n   * Determines whether day selected is\n   * @param id => day id\n   * @returns boolean\n   *************************************/\n  isDaySelected(id: number) {\n    return _.includes(this.profile.days, id);\n  } // end of isDaySelected\n\n}\n\n    \n\n    \n        \n  \n       -->\n      {{profile.displayName}}\n      \n        \n          \n              \n                {{ user.displayName }}\n              \n               -->\n              \n                \n              \n              \n                {{profile.bio}}\n              \n            \n        \n        \n            \n              Region: \n              {{region.name}}\n            \n            \n              Platform: \n              {{platform.name}}\n            \n            \n              Communication Preference: \n              {{comm.name}}\n            \n            \n              Steam Games\n              \n                  \n                    \n                      {{app.name}}\n                    \n                  \n              \n            \n            \n              Available Day(s)\n              \n                \n                  \n                  Mon\n                \n                \n                    \n                    Tue\n                \n                \n                    \n                    Wed\n                \n                \n                    \n                    Thu\n                \n                \n                    \n                    Fri\n                \n                \n                    \n                    Sat\n                \n                \n                    \n                    Sun\n                \n              \n            \n\n            \n              Friends List {{ profile._friends.length }} Total Friends\n              \n                \n              \n            \n        \n      \n  \n  \n    \n      \n        \n          Navigate to the Setup tab to create a profile.\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./profile.component.scss\n                \n                .avatar {\n    vertical-align: middle;\n    width: 25%;\n    height: 25%;\n    border-radius: 10%;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '         -->      {{profile.displayName}}                                                      {{ user.displayName }}                             -->                                                                          {{profile.bio}}                                                                    Region:               {{region.name}}                                      Platform:               {{platform.name}}                                      Communication Preference:               {{comm.name}}                                      Steam Games                                                                          {{app.name}}                                                                                          Available Day(s)                                                                  Mon                                                                        Tue                                                                        Wed                                                                        Thu                                                                        Fri                                                                        Sat                                                                        Sun                                                                    Friends List {{ profile._friends.length }} Total Friends                                                                                                      Navigate to the Setup tab to create a profile.                    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatButtonComponent', 'selector': 'app-chat-button'},{'name': 'FriendCardComponent', 'selector': 'app-friend-card'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NetworkComponent', 'selector': 'app-network'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ReleaseRubricComponent', 'selector': 'app-release-rubric'},{'name': 'SetupComponent', 'selector': 'app-setup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProfileService.html":{"url":"injectables/ProfileService.html","title":"injectable - ProfileService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProfileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/profile/profile.service.ts\n        \n\n            \n                Description\n            \n            \n                Defines Injectable \n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getComm\n                            \n                            \n                                    Public\n                                getPlatform\n                            \n                            \n                                    Public\n                                getRegion\n                            \n                            \n                                    Public\n                                getSteamApp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(afs: AngularFirestore)\n                    \n                \n                        \n                            \n                                Defined in src/app/profile/profile.service.ts:14\n                            \n                        \n\n                \n                    \n                            \nCreates an instance of profile service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                AngularFireStore service\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getComm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getComm(commId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile.service.ts:47\n                \n            \n\n\n            \n                \n                    \nGets comm\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    commId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the comm id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        an observable of comms\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getPlatform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPlatform(platformId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile.service.ts:37\n                \n            \n\n\n            \n                \n                    \nGets platform\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    platformId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the platform id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        an observable of platforms\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getRegion\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRegion(regionId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile.service.ts:27\n                \n            \n\n\n            \n                \n                    \nGets region\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    regionId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the region id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        an observable of regions\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getSteamApp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSteamApp(appId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile.service.ts:57\n                \n            \n\n\n            \n                \n                    \nGets steam app\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    appId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the app id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        an observable of steam apps\n\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/firestore';\n\n/** Defines Injectable */\n@Injectable({\n  providedIn: 'root'\n})\n/**************************************************\n * @author Collin Larson\n * @version 1.0\n * @description Profile Service handles API calls\n * to firebase back end\n *************************************************/\nexport class ProfileService {\n\n  /********************************************\n   * Creates an instance of profile service.\n   * @param afs AngularFireStore service\n   *******************************************/\n  constructor(private afs: AngularFirestore) { }\n\n  /***************************************\n   * Gets region\n   * @param regionId the region id\n   * @returns an observable of regions\n   **************************************/\n  public getRegion(regionId: string) {\n    const regionRef = this.afs.doc(`regions/${regionId}`);\n    return regionRef.get();\n  }\n\n  /*****************************************\n   * Gets platform\n   * @param platformId the platform id\n   * @returns an observable of platforms\n   ****************************************/\n  public getPlatform(platformId: string) {\n    const platormRef = this.afs.doc(`platform/${platformId}`);\n    return platormRef.get();\n  }\n\n  /***************************************\n   * Gets comm\n   * @param commId the comm id\n   * @returns an observable of comms\n   **************************************/\n  public getComm(commId: string) {\n    const commRef = this.afs.doc(`communicationPlatform/${commId}`);\n    return commRef.get();\n  }\n\n  /******************************************\n   * Gets steam app\n   * @param appId the app id\n   * @returns an observable of steam apps\n   *****************************************/\n  public getSteamApp(appId: string) {\n    const appRef = this.afs.doc(`steamGames/${appId}`);\n    return appRef.get();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Region.html":{"url":"interfaces/Region.html","title":"interface - Region","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Region\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/setup/models/region.model.ts\n        \n\n            \n                Description\n            \n            \n                \nRegion interface (model)\n\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Region Id \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Region Name \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Region {\n    /** Region Id */\n    id: number;\n\n    /** Region Name */\n    name: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ReleaseRubricComponent.html":{"url":"components/ReleaseRubricComponent.html","title":"component - ReleaseRubricComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ReleaseRubricComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/release-rubric/release-rubric.component.ts\n\n\n    \n        Description\n    \n    \n        Setup Component Links \n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-release-rubric\n            \n\n            \n                styleUrls\n                ./release-rubric.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./release-rubric.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/release-rubric/release-rubric.component.ts:9\n                            \n                        \n\n                \n                    \n                            Creates an instance of release rubric component.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/release-rubric/release-rubric.component.ts:19\n                \n            \n\n\n            \n                \n                    Release Rubric Component Initialization\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/** Setup Component Links */\n@Component({\n  selector: 'app-release-rubric',\n  templateUrl: './release-rubric.component.html',\n  styleUrls: ['./release-rubric.component.scss']\n})\nexport class ReleaseRubricComponent implements OnInit {\n\n  /**\n   * Creates an instance of release rubric component.\n   */\n  constructor() { }\n\n  /**\n   * Release Rubric Component Initialization\n   */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  Rubric\n\n  \n    \n        \n            \n              This first release contains the first few features in our list. We created a google sign-in module that allows\n              users to come and create an account on HashMap. You can also setup your profile and link many accounts.\n            \n\n            \n\n            Downloads\n            Github Repo\n            Release 1 PDF\n\n            \n\n            Feature List\n\n            \n              \n                \n                  \n                    \n                      Release 1 (July 15th)\n                      \n                        Google Sign-In and Account creation\n                        Profile Creation and Management\n                        Steam Linking and Game Linking\n                        Front end and menu created\n                      \n                    \n                  \n                \n              \n            \n          \n          \n    \n    \n        \n            \n              This second release contains the last features that are on our list. We created many different things to build\n              off of our main idea of the network/friend searching area. We were not able to get the last feature on our list because\n              the games that we were focused on the most did not have a public IP Address.\n            \n\n            \n\n            Downloads\n            Github Repo\n            Release 2 PDF\n\n            \n\n            Feature List\n\n            \n              \n                \n                  \n                    \n                      Release 2 (July 31st)\n                      \n                        Friend Matching Algorithm\n                        Add friends to List\n                        Search By Location\n                        Add search by rank with specific games\n                      \n                    \n                  \n                \n              \n            \n          \n          \n    \n  \n\n\n    \n\n    \n                \n                    ./release-rubric.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Rubric                                        This first release contains the first few features in our list. We created a google sign-in module that allows              users to come and create an account on HashMap. You can also setup your profile and link many accounts.                                    Downloads            Github Repo            Release 1 PDF                        Feature List                                                                                                      Release 1 (July 15th)                                              Google Sign-In and Account creation                        Profile Creation and Management                        Steam Linking and Game Linking                        Front end and menu created                                                                                                                                                                    This second release contains the last features that are on our list. We created many different things to build              off of our main idea of the network/friend searching area. We were not able to get the last feature on our list because              the games that we were focused on the most did not have a public IP Address.                                    Downloads            Github Repo            Release 2 PDF                        Feature List                                                                                                      Release 2 (July 31st)                                              Friend Matching Algorithm                        Add friends to List                        Search By Location                        Add search by rank with specific games                                                                                                                                '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ChatButtonComponent', 'selector': 'app-chat-button'},{'name': 'FriendCardComponent', 'selector': 'app-friend-card'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'NetworkComponent', 'selector': 'app-network'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ReleaseRubricComponent', 'selector': 'app-release-rubric'},{'name': 'SetupComponent', 'selector': 'app-setup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ReleaseRubricComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SetupService.html":{"url":"injectables/SetupService.html","title":"injectable - SetupService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SetupService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/setup/setup.service.ts\n        \n\n            \n                Description\n            \n            \n                Defines Injectable \n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                commsCollection\n                            \n                            \n                                daysCollection\n                            \n                            \n                                platformCollection\n                            \n                            \n                                regionCollection\n                            \n                            \n                                steamAppCollection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getComms\n                            \n                            \n                                    Public\n                                getDays\n                            \n                            \n                                    Public\n                                getFireSteamGameList\n                            \n                            \n                                    Public\n                                getPlatforms\n                            \n                            \n                                    Public\n                                getProfile\n                            \n                            \n                                    Public\n                                getRegions\n                            \n                            \n                                    Public\n                                saveProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(afs: AngularFirestore, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/setup/setup.service.ts:37\n                            \n                        \n\n                \n                    \n                            \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Fire Store\n\n                                                        \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Http Client\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getComms\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getComms()\n                \n            \n\n\n            \n                \n                    Defined in src/app/setup/setup.service.ts:79\n                \n            \n\n\n            \n                \n                    \nGets comms\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        an observable of comms\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getDays\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDays()\n                \n            \n\n\n            \n                \n                    Defined in src/app/setup/setup.service.ts:61\n                \n            \n\n\n            \n                \n                    \nGets days\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        an observable of days\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFireSteamGameList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFireSteamGameList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/setup/setup.service.ts:88\n                \n            \n\n\n            \n                \n                    \nGets fire steam game list\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        an observable of steam games\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getPlatforms\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPlatforms()\n                \n            \n\n\n            \n                \n                    Defined in src/app/setup/setup.service.ts:70\n                \n            \n\n\n            \n                \n                    \nGets platforms\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        an observable of platforms\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getProfile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfile(uid: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/setup/setup.service.ts:98\n                \n            \n\n\n            \n                \n                    \nGets profile\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        user id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        an observable of a user profile\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getRegions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRegions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/setup/setup.service.ts:50\n                \n            \n\n\n            \n                \n                    \nGets regions\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        an observable of regions\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            saveProfile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    saveProfile(profile: Profile)\n                \n            \n\n\n            \n                \n                    Defined in src/app/setup/setup.service.ts:108\n                \n            \n\n\n            \n                \n                    \nSaves profile\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    profile\n                                    \n                                                Profile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        user profile to be saved\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        an observable of a user profile\n\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            commsCollection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AngularFirestoreCollection\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/setup/setup.service.ts:34\n                            \n                        \n\n                \n                    \n                        Comms collection \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            daysCollection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AngularFirestoreCollection\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/setup/setup.service.ts:31\n                            \n                        \n\n                \n                    \n                        Days collection \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            platformCollection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AngularFirestoreCollection\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/setup/setup.service.ts:28\n                            \n                        \n\n                \n                    \n                        Platform collection \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            regionCollection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AngularFirestoreCollection\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/setup/setup.service.ts:25\n                            \n                        \n\n                \n                    \n                        Region collection \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            steamAppCollection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AngularFirestoreCollection\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/setup/setup.service.ts:37\n                            \n                        \n\n                \n                    \n                        Steam App collection \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { AngularFirestore, AngularFirestoreDocument, AngularFirestoreCollection } from '@angular/fire/firestore';\nimport { Region } from './models/region.model';\nimport { Platform } from './models/platform.model';\nimport { Day } from './models/days.model';\nimport { CommunicationPlatform } from './models/communication-platform.model';\nimport { SteamApp } from '../services/steam/models/steamApp.model';\nimport { Profile } from './models/profile.model';\n\n/** Defines Injectable */\n@Injectable({\n  providedIn: 'root'\n})\n/**************************************************\n * @author Collin Larson\n * @version 1.0\n * @description Setup Service class handles the\n * API methods to get profile options\n *************************************************/\nexport class SetupService {\n\n  /** Region collection */\n  regionCollection: AngularFirestoreCollection;\n\n  /** Platform collection */\n  platformCollection: AngularFirestoreCollection;\n\n  /** Days collection */\n  daysCollection: AngularFirestoreCollection;\n\n  /** Comms collection */\n  commsCollection: AngularFirestoreCollection;\n\n  /** Steam App collection */\n  steamAppCollection: AngularFirestoreCollection;\n\n  /***********************************************************\n   * @param afs Angular Fire Store\n   * @param http Http Client\n   * @description Creates an instance of setup service.\n   **********************************************************/\n  constructor(private afs: AngularFirestore, private http: HttpClient) { }\n\n  /****************************************\n   * Gets regions\n   * @returns an observable of regions\n   ***************************************/\n  public getRegions() {\n    this.regionCollection = this.afs.collection('regions', ref => {\n      return ref.orderBy('name', 'desc');\n    });\n    return this.regionCollection.valueChanges();\n  }\n\n  /***************************************\n   * Gets days\n   * @returns an observable of days\n   **************************************/\n  public getDays() {\n    this.daysCollection = this.afs.collection('days');\n    return this.daysCollection.valueChanges();\n  }\n\n  /****************************************\n   * Gets platforms\n   * @returns an observable of platforms\n   ***************************************/\n  public getPlatforms() {\n    this.platformCollection = this.afs.collection('platform');\n    return this.platformCollection.valueChanges();\n  }\n\n  /***************************************\n   * Gets comms\n   * @returns an observable of comms\n   **************************************/\n  public getComms() {\n    this.commsCollection = this.afs.collection('communicationPlatform');\n    return this.commsCollection.valueChanges();\n  }\n\n  /******************************************\n   * Gets fire steam game list\n   * @returns an observable of steam games\n   *****************************************/\n  public getFireSteamGameList() {\n    this.steamAppCollection = this.afs.collection('steamGames');\n    return this.steamAppCollection.valueChanges();\n  }\n\n  /************************************************\n   * Gets profile\n   * @param uid user id\n   * @returns an observable of a user profile\n   ***********************************************/\n  public getProfile(uid: string) {\n    const profileRef = this.afs.doc(`profiles/${uid}`);\n    return profileRef.get();\n  }\n\n  /************************************************\n   * Saves profile\n   * @param profile user profile to be saved\n   * @returns an observable of a user profile\n   ***********************************************/\n  public saveProfile(profile: Profile) {\n    // Sets user data to firestore on login\n    const userRef = this.afs.doc(`profiles/${profile.uid}`);\n    return userRef.set({\n      uid: profile.uid,\n      displayName: profile.displayName,\n      regionId: profile.regionId,\n      platformId: profile.platformId,\n      communicationPlatformId: profile.communicationPlatformId,\n      days: profile.days,\n      steamApps: profile.steamApps,\n      bio: profile.bio,\n      photoURL: profile.photoURL,\n      friends: profile.friends\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SteamApp.html":{"url":"interfaces/SteamApp.html","title":"interface - SteamApp","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SteamApp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/steam/models/steamApp.model.ts\n        \n\n            \n                Description\n            \n            \n                \nSteam app interface (model)\n\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        appid\n                                \n                                \n                                        developer\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        appid\n                                    \n                                \n                                \n                                    \n                                        appid:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    app Id \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        developer\n                                    \n                                \n                                \n                                    \n                                        developer:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    App's Developer \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    App name \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface SteamApp {\n    /** app Id */\n    appid: number;\n\n    /** App's Developer */\n    developer: string;\n\n    /** App name */\n    name: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SteamAppList.html":{"url":"interfaces/SteamAppList.html","title":"interface - SteamAppList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SteamAppList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/steam/models/steam-app-list.model.ts\n        \n\n            \n                Description\n            \n            \n                \nSteam app list interface (model)\n\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        applist\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        applist\n                                    \n                                \n                                \n                                    \n                                        applist:         Apps\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Apps\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    applist Apps \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Apps } from './apps-model';\n\n/*************************************\n * Steam app list interface (model)\n ************************************/\nexport interface SteamAppList {\n    /** applist Apps */\n    applist: Apps;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user.model.ts\n        \n\n            \n                Description\n            \n            \n                \nUser interface (model)\nRepresents a logged in google user\n\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        displayName\n                                \n                                \n                                        email\n                                \n                                \n                                            Optional\n                                        photoURL\n                                \n                                \n                                        uid\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                    \n                                \n                                \n                                    \n                                        displayName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    User's name \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    user emal \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        photoURL\n                                    \n                                \n                                \n                                    \n                                        photoURL:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    user photo url \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uid\n                                    \n                                \n                                \n                                    \n                                        uid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    user Id \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n\n    /** user Id */\n    uid: string;\n\n    /** user emal */\n    email: string;\n\n    /** user photo url */\n    photoURL?: string;\n\n    /** User's name */\n    displayName?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/about/about.component.ts\n            \n            component\n            AboutComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/app-routing.module.ts\n            \n            variable\n            routingComponents\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            variable\n            config\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/chat-button/chat-button.component.ts\n            \n            component\n            ChatButtonComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/friend-card/friend-card.component.ts\n            \n            component\n            FriendCardComponent\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/nav/nav.component.ts\n            \n            component\n            NavComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/network/network.component.ts\n            \n            component\n            NetworkComponent\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                src/app/network/network.service.ts\n            \n            injectable\n            NetworkService\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/profile/profile.component.ts\n            \n            component\n            ProfileComponent\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                src/app/profile/profile.service.ts\n            \n            injectable\n            ProfileService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/release-rubric/release-rubric.component.ts\n            \n            component\n            ReleaseRubricComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/services/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/services/steam/models/apps-model.ts\n            \n            interface\n            Apps\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/services/steam/models/steam-app-list.model.ts\n            \n            interface\n            SteamAppList\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/services/steam/models/steamApp.model.ts\n            \n            interface\n            SteamApp\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/services/user.model.ts\n            \n            interface\n            User\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/setup/models/app.model.ts\n            \n            interface\n            App\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/setup/models/communication-platform.model.ts\n            \n            interface\n            CommunicationPlatform\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/setup/models/days.model.ts\n            \n            interface\n            Day\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/setup/models/platform.model.ts\n            \n            interface\n            Platform\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/setup/models/profile.model.ts\n            \n            interface\n            Profile\n            \n                100 %\n                (16/16)\n            \n        \n        \n            \n                \n                src/app/setup/models/region.model.ts\n            \n            interface\n            Region\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/setup/setup.component.ts\n            \n            component\n            SetupComponent\n            \n                97 %\n                (33/34)\n            \n        \n        \n            \n                \n                src/app/setup/setup.service.ts\n            \n            injectable\n            SetupService\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/app/utility/notification/notification.service.ts\n            \n            injectable\n            NotificationService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^8.1.0\n        \n            @angular/cdk : ^8.0.1\n        \n            @angular/common : ~8.0.1\n        \n            @angular/compiler : ~8.0.1\n        \n            @angular/core : ~8.0.1\n        \n            @angular/fire : ^5.2.1\n        \n            @angular/forms : ~8.0.1\n        \n            @angular/material : ^8.0.1\n        \n            @angular/platform-browser : ~8.0.1\n        \n            @angular/platform-browser-dynamic : ~8.0.1\n        \n            @angular/router : ~8.0.1\n        \n            @ng-bootstrap/ng-bootstrap : ^5.1.0\n        \n            @types/lodash : ^4.14.135\n        \n            angular-font-awesome : ^3.1.2\n        \n            bootstrap : ^4.3.1\n        \n            bs-stepper : ^1.6.1\n        \n            firebase : ^6.2.3\n        \n            font-awesome : ^4.7.0\n        \n            jquery : ^3.4.1\n        \n            lodash : ^4.17.11\n        \n            ngx-toastr : ^10.0.4\n        \n            ngx-useful-swiper : ^8.0.1-beta.2\n        \n            popper.js : ^1.15.0\n        \n            rxjs : ~6.4.0\n        \n            sloc : ^0.2.1\n        \n            swiper : ^4.5.0\n        \n            tslib : ^1.9.0\n        \n            zone.js : ~0.9.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nHashMap\n\nLocation based friend search for gaming!\n\n\nLive Demo: Link\nThis project was created for CIS 350. HashMap is a location based friend search for people who play similar games to you! You can connect many of your accounts and settings to find friends near you.\nRunning unit tests\nRun ng test to execute the unit tests via Karma. Run ng e2e to execute the end-to-end tests via Protractor.\nFeature List\nRelease 1 (July 15th)\n\nGoogle Sign-In and Account creation\nProfile Creation and Managment\nSteam Linking and Game Linking\nFront end and menu created\n\nRelease 2 (July 31st)\n\nFriend Matching Algorithm\nAdd to List\nSearch By Location\n\nScreenshots\nComing Soon\nPlatform Details\n\n\n\nLanguages\nFramework/Plugins and Tools\n\n\n\n\nTypescript\nAngular\n\n\nFireStore\nProtractor End-to-End Testing\n\n\nHTML\nJasime Karma\n\n\nCSS\nFirebase\n\n\nJavaScript\nWeb API\n\n\n\nVisual Studio Code\n\n\n\nLicense\n This project is licensed under the MIT License. See MIT License files for details\nCreated By\nAdam Chlebek and Collin Larson\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2019 Adam Chlebek and Collin Larson\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAboutComponent\n\nAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nChatButtonComponent\n\nChatButtonComponent\n\nAppModule -->\n\nChatButtonComponent->AppModule\n\n\n\n\n\nFriendCardComponent\n\nFriendCardComponent\n\nAppModule -->\n\nFriendCardComponent->AppModule\n\n\n\n\n\nNavComponent\n\nNavComponent\n\nAppModule -->\n\nNavComponent->AppModule\n\n\n\n\n\nNetworkComponent\n\nNetworkComponent\n\nAppModule -->\n\nNetworkComponent->AppModule\n\n\n\n\n\nProfileComponent\n\nProfileComponent\n\nAppModule -->\n\nProfileComponent->AppModule\n\n\n\n\n\nReleaseRubricComponent\n\nReleaseRubricComponent\n\nAppModule -->\n\nReleaseRubricComponent->AppModule\n\n\n\n\n\nSetupComponent\n\nSetupComponent\n\nAppModule -->\n\nSetupComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        6 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            config   (src/.../app.module.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            routingComponents   (src/.../app-routing.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  apiKey            : 'AIzaSyDDpHaPU_JxdJF62QK4aZvGol1kxUVsKTg',\n  authDomain        : 'hashmaporbyt.firebaseapp.com',\n  databaseURL       : 'https://hashmaporbyt.firebaseio.com',\n  projectId         : 'hashmaporbyt',\n  storageBucket     : 'hashmaporbyt.appspot.com',\n  messagingSenderId : '988913741592',\n  appId             : '1:988913741592:web:7044428c9379127f'\n}\n                        \n                    \n\n                \n                    \n                        Google Firebase configuration \n\n                    \n                \n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n                \n                    \n                        Sets Production Environment to Enabled\n\n                    \n                \n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n                \n                    \n                        Sets Production Environment to Disabled\n\n                    \n                \n\n            \n        \n\n    src/app/app-routing.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            routingComponents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [SetupComponent]\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
